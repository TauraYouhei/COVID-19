(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-67b9dfc0"],{"13d5":function(e,t,a){"use strict";var n=a("23e7"),c=a("d58f").left,s=a("a640"),i=a("ae40"),r=s("reduce"),o=i("reduce",{1:0});n({target:"Array",proto:!0,forced:!r||!o},{reduce:function(e){return c(this,e,arguments.length,arguments.length>1?arguments[1]:void 0)}})},"4edd":function(e,t,a){"use strict";a.r(t);var n=a("7a23"),c=Object(n["F"])("data-v-61fc95ab");Object(n["t"])("data-v-61fc95ab");var s=Object(n["h"])("h1",null,"新型コロナウイルス情報",-1),i={key:0,class:"flex"},r={class:"box"},o={class:"box"},d={class:"box"},u={class:"box"},l={class:"box"},h={class:"box27"},f=Object(n["h"])("span",{class:"box-title"},"病床使用数",-1),b={class:"text"},k=Object(n["h"])("br",null,null,-1),p={class:"ueo"},j={key:1,class:"loader"};Object(n["r"])();var O=c((function(e,t,a,c,O,m){var v=Object(n["x"])("mainmenu"),g=Object(n["x"])("labelbox");return Object(n["q"])(),Object(n["d"])("div",null,[Object(n["h"])(v,{judge:"0"}),s,m.readyToshowMainPage?(Object(n["q"])(),Object(n["d"])("div",i,[Object(n["h"])("div",r,[Object(n["h"])(g,{class:"box1",msg:"感染者数",idname:"kansen",infected:m.infected},null,8,["infected"])]),Object(n["h"])("div",o,[Object(n["h"])(g,{class:"box2",msg:"死者数",idname:"dead",infected:m.dead},null,8,["infected"])]),Object(n["h"])("div",d,[Object(n["h"])(g,{class:"box3",msg:"PCR検査数",idname:"pcr",infected:m.pcr},null,8,["infected"])]),Object(n["h"])("div",u,[Object(n["h"])(g,{class:"box4",msg:"退院者数",idname:"dischange",infected:m.discharge},null,8,["infected"])]),Object(n["h"])("div",l,[Object(n["h"])("div",h,[f,Object(n["h"])("input",{type:"radio",id:m.zenkokuId,name:"TAB",class:"tab-switch",checked:"checked"},null,8,["id"]),Object(n["h"])("label",{for:m.zenkokuId,class:"tab-label"},"岡山",8,["for"]),Object(n["h"])("div",b,[Object(n["g"])(Object(n["z"])(m.use)+"/"+Object(n["z"])(m.all),1),k,Object(n["h"])("p",p,Object(n["z"])(m.update),1)])])])])):(Object(n["q"])(),Object(n["d"])("div",j))])})),m=a("c287");a("d073");m["a"].render=O,m["a"].__scopeId="data-v-61fc95ab";t["default"]=m["a"]},5899:function(e,t){e.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},"58a8":function(e,t,a){var n=a("1d80"),c=a("5899"),s="["+c+"]",i=RegExp("^"+s+s+"*"),r=RegExp(s+s+"*$"),o=function(e){return function(t){var a=String(n(t));return 1&e&&(a=a.replace(i,"")),2&e&&(a=a.replace(r,"")),a}};e.exports={start:o(1),end:o(2),trim:o(3)}},7156:function(e,t,a){var n=a("861d"),c=a("d2bb");e.exports=function(e,t,a){var s,i;return c&&"function"==typeof(s=t.constructor)&&s!==a&&n(i=s.prototype)&&i!==a.prototype&&c(e,i),e}},a351:function(e,t,a){"use strict";var n=a("7a23"),c={class:"box27"},s={class:"box-title"},i={class:"text"},r=Object(n["h"])("br",null,null,-1),o={class:"ueo"},d={class:"text"},u=Object(n["h"])("br",null,null,-1),l={class:"ueo"},h={class:"text"},f=Object(n["h"])("br",null,null,-1),b={class:"ueo"};function k(e,t,a,k,p,j){return Object(n["q"])(),Object(n["d"])("form",null,[Object(n["h"])("div",c,[Object(n["h"])("span",s,Object(n["z"])(a.msg),1),Object(n["h"])("input",{type:"radio",id:j.zenkokuId,name:"TAB",class:"tab-switch",checked:"checked"},null,8,["id"]),Object(n["h"])("label",{for:j.zenkokuId,class:"tab-label"},"全国",8,["for"]),Object(n["h"])("div",i,[Object(n["g"])(Object(n["z"])(a.infected.zenkoku),1),r,Object(n["h"])("p",o,Object(n["z"])(a.infected.data1),1)]),Object(n["h"])("input",{type:"radio",id:j.okayamaId,name:"TAB",class:"tab-switch"},null,8,["id"]),Object(n["h"])("label",{for:j.okayamaId,class:"tab-label"},"岡山",8,["for"]),Object(n["h"])("div",d,[Object(n["g"])(Object(n["z"])(a.infected.okayama),1),u,Object(n["h"])("p",l,Object(n["z"])(a.infected.data2),1)]),"感染者数"==a.msg?(Object(n["q"])(),Object(n["d"])("input",{key:0,type:"button",class:"aiu",value:"詳細",onClick:t[1]||(t[1]=function(t){return e.$router.push("/Detailspage")})})):Object(n["e"])("",!0),Object(n["h"])("input",{type:"radio",id:j.tsuyamaId,name:"TAB",class:"tab-switch"},null,8,["id"]),Object(n["h"])("label",{for:j.tsuyamaId,class:"tab-label"},"津山",8,["for"]),Object(n["h"])("div",h,[Object(n["g"])(Object(n["z"])(a.infected.tsuyama),1),f,Object(n["h"])("p",b,Object(n["z"])(a.infected.data3),1)])])])}var p={name:"labelbox",computed:{zenkokuId:function(){return this.idname+"zenkoku"},okayamaId:function(){return this.idname+"okayama"},tsuyamaId:function(){return this.idname+"tsuyama"}},props:{msg:{type:String},idname:{type:String},infected:{type:Object}}};a("ebca");p.render=k;t["a"]=p},a9e3:function(e,t,a){"use strict";var n=a("83ab"),c=a("da84"),s=a("94ca"),i=a("6eeb"),r=a("5135"),o=a("c6b6"),d=a("7156"),u=a("c04e"),l=a("d039"),h=a("7c73"),f=a("241c").f,b=a("06cf").f,k=a("9bf2").f,p=a("58a8").trim,j="Number",O=c[j],m=O.prototype,v=o(h(m))==j,g=function(e){var t,a,n,c,s,i,r,o,d=u(e,!1);if("string"==typeof d&&d.length>2)if(d=p(d),t=d.charCodeAt(0),43===t||45===t){if(a=d.charCodeAt(2),88===a||120===a)return NaN}else if(48===t){switch(d.charCodeAt(1)){case 66:case 98:n=2,c=49;break;case 79:case 111:n=8,c=55;break;default:return+d}for(s=d.slice(2),i=s.length,r=0;r<i;r++)if(o=s.charCodeAt(r),o<48||o>c)return NaN;return parseInt(s,n)}return+d};if(s(j,!O(" 0o1")||!O("0b1")||O("+0x1"))){for(var y,w=function(e){var t=arguments.length<1?0:e,a=this;return a instanceof w&&(v?l((function(){m.valueOf.call(a)})):o(a)!=j)?d(new O(g(t)),a,w):g(t)},I=n?f(O):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),N=0;I.length>N;N++)r(O,y=I[N])&&!r(w,y)&&k(w,y,b(O,y));w.prototype=m,m.constructor=w,i(c,j,w)}},b04d:function(e,t,a){},c106:function(e,t,a){},c287:function(e,t,a){"use strict";(function(e){a("4de4"),a("13d5"),a("a9e3"),a("dca8"),a("ac1f"),a("5319"),a("1276");var n=a("a351"),c=a("ad3a"),s=a("bc3a"),i=a.n(s),r=a("4bb4"),o=a("10bf"),d=a.n(o);t["a"]={name:"Mainpage",components:{labelbox:n["a"],mainmenu:c["a"]},computed:{readyToshowMainPage:function(){return this.Zenkoku.length},zenkokuId:function(){return"zenkoku"},use:function(){return Number(this.kenDead[this.kenDead.length-1]["患者_宿泊療養施設に入所中"])+Number(this.kenDead[this.kenDead.length-1]["患者_入院中_入院予定含む"])},all:function(){return Number(this.kenIryou[this.kenIryou.length-1]["確保数_病床"])+Number(this.kenIryou[this.kenIryou.length-1]["確保数_宿泊療養施設"])},update:function(){var e=this.kenDead[this.kenDead.length-1]["公表_年月日"].split("/");1==e[2].length&&(e[2]="0"+e[2]);var t="※"+e[0]+"年"+e[1]+"月"+e[2]+"日時点";return t},infected:function(){var e=this.Zenkoku.reduce((function(e,t){return e+t["npatients"]}),0),t=new Date,a=this.kenUtiwake[this.kenUtiwake.length-1]["公表年月日"].replace("月","/");a=a.replace("日","/"),a=a.split("/"),1==a[1].length&&(a[1]="0"+a[1]);var n="※"+t.getFullYear()+"年"+a[0]+"月"+a[1]+"日時点",c=this.last.split("-");return c="※"+c[0]+"年"+c[1]+"月"+c[2]+"日時点",{zenkoku:e+"人",okayama:this.kenUtiwake.length+"人",tsuyama:this.kenUtiwake.filter((function(e){if("津山市"==e.患者＿居住地)return!0})).length+"人",data1:c,data2:n,data3:n}},pcr:function(){var e=this.Zenkoku.reduce((function(e,t){return e+t["ninspections"]}),0),t=this.kenPcr.filter((function(e){if(""!=e.集計時点_年月日)return!0})),a=t[t.length-1].集計時点_年月日.split("/");1==a[2].length&&(a[2]="0"+a[2]);var n="※"+a[0]+"年"+a[1]+"月"+a[2]+"日時点",c=this.last.split("-");return c="※"+c[0]+"年"+c[1]+"月"+c[2]+"日時点",{zenkoku:e+"人",okayama:this.kenPcr.reduce((function(e,t){return e+Number(t["検査実施人数"])}),0)+"人",tsuyama:"No data",data1:c,data2:n,data3:""}},dead:function(){var e=this.Zenkoku.reduce((function(e,t){return e+t["ndeaths"]}),0),t=this.kenDead[this.kenDead.length-1]["公表_年月日"].split("/");1==t[2].length&&(t[2]="0"+t[2]);var a="※"+t[0]+"年"+t[1]+"月"+t[2]+"日時点",n=this.last.split("-");return n="※"+n[0]+"年"+n[1]+"月"+n[2]+"日時点",{zenkoku:e+"人",okayama:this.kenDead[this.kenDead.length-1]["患者_死亡"]+"人",tsuyama:"No data",data1:n,data2:a,data3:""}},discharge:function(){var e=this.Zenkoku.reduce((function(e,t){return e+t["nexits"]}),0),t=this.kenDead[this.kenDead.length-1]["公表_年月日"].split("/");1==t[2].length&&(t[2]="0"+t[2]);var a="※"+t[0]+"年"+t[1]+"月"+t[2]+"日時点",n=this.last.split("-");return n="※"+n[0]+"年"+n[1]+"月"+n[2]+"日時点",{zenkoku:e+"人",okayama:this.kenDead[this.kenDead.length-1]["患者_退院等"]+"人",tsuyama:"No data",data1:n,data2:a,data3:""}}},data:function(){return{kenDetails:[],kenUtiwake:[],kenPcr:[],kenDead:[],kenIryou:[],Zenkoku:[],last:[]}},mounted:function(){this.get_csv("http://www.okayama-opendata.jp/ckan/dataset/e6b3c1d2-2f1f-4735-b36e-e45d36d94761/resource/0c728c2e-a366-421d-95df-86b6b5ad15fd/download/kansenshasuu0420.csv",!0,"SJIS","UNICODE",this.setKenDetails),this.get_csv("http://www.okayama-opendata.jp/ckan/dataset/e6b3c1d2-2f1f-4735-b36e-e45d36d94761/resource/60ecd874-0f71-4d9f-9a8a-936fad9c99bc/download/pcr.csv",!0,"SJIS","UNICODE",this.setKenPcr),this.get_csv("http://www.okayama-opendata.jp/ckan/dataset/e6b3c1d2-2f1f-4735-b36e-e45d36d94761/resource/c6503ebc-b2e9-414c-aae7-7374f4801e21/download/kansenshashousaijouhou.csv",!0,"SJIS","UNICODE",this.setKenUchiwake),this.get_csv("http://www.okayama-opendata.jp/ckan/dataset/e6b3c1d2-2f1f-4735-b36e-e45d36d94761/resource/fa331257-8914-4a2e-b9c3-851d6ff77cb1/download/kanjahasseijoukyou.csv",!0,"SJIS","UNICODE",this.setKenDead),this.get_csv("http://www.okayama-opendata.jp/ckan/dataset/e6b3c1d2-2f1f-4735-b36e-e45d36d94761/resource/a42f1454-ef8a-4d01-ac67-f76202fc9822/download/330001okayamacovid19medicalsystem.csv",!0,"SJIS","UNICODE",this.setKenIryou),this.get_csv("https://www.stopcovid19.jp/data/covid19japan.csv",!0,"UTF8","UNICODE",this.setZenkoku),this.lastupdata()},methods:{lastupdata:function(){var e=this;i.a.get("https://www.stopcovid19.jp/data/covid19japan.json").then((function(t){e.last=t.data["lastUpdate"]})).catch((function(e){return console.log(e)}))},setKenUchiwake:function(e){this.kenUtiwake=e,this.$store.commit("Enter2",this.kenUtiwake)},setKenPcr:function(e){this.kenPcr=e},setKenDead:function(e){this.kenDead=e},setKenIryou:function(e){this.kenIryou=e},setZenkoku:function(e){this.Zenkoku=e},setKenDetails:function(e){this.kenDetails=e,this.$store.commit("Enter",this.kenDetails)},get_csv:function(t,a,n,c,s){i.a.get(t,{responseType:"arraybuffer"}).then((function(t){var i=e.from(t.data),o=d.a.convert(i,{from:n,to:c,type:"string"});o=o.replace(/^\ufeff/,""),Object(r["parse"])(o,{columns:a,quote:'"',ltrim:!0,rtrim:!0,delimiter:",",cast:!0},(function(e,t){s(Object.freeze(t))}))})).catch((function(e){return console.log(e)}))}}}}).call(this,a("b639").Buffer)},d073:function(e,t,a){"use strict";a("c106")},d58f:function(e,t,a){var n=a("1c0b"),c=a("7b0b"),s=a("44ad"),i=a("50c4"),r=function(e){return function(t,a,r,o){n(a);var d=c(t),u=s(d),l=i(d.length),h=e?l-1:0,f=e?-1:1;if(r<2)while(1){if(h in u){o=u[h],h+=f;break}if(h+=f,e?h<0:l<=h)throw TypeError("Reduce of empty array with no initial value")}for(;e?h>=0:l>h;h+=f)h in u&&(o=a(o,u[h],h,d));return o}};e.exports={left:r(!1),right:r(!0)}},ebca:function(e,t,a){"use strict";a("b04d")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,