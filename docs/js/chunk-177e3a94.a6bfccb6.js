(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-177e3a94"],{"13d5":function(t,e,a){"use strict";var n=a("23e7"),i=a("d58f").left,c=a("a640"),s=a("ae40"),r=c("reduce"),u=s("reduce",{1:0});n({target:"Array",proto:!0,forced:!r||!u},{reduce:function(t){return i(this,t,arguments.length,arguments.length>1?arguments[1]:void 0)}})},"4edd":function(t,e,a){"use strict";a.r(e);var n=a("7a23"),i=Object(n["F"])("data-v-9c4ffd94");Object(n["t"])("data-v-9c4ffd94");var c=Object(n["h"])("h1",null,"新型コロナウイルス情報",-1),s={key:0,class:"flex"},r={class:"box"},u={class:"box"},o={class:"box"},d={class:"box"},l={class:"box"},h={class:"box27"},b=Object(n["h"])("span",{class:"box-title"},"病床使用数",-1),f={class:"text"},k=Object(n["h"])("br",null,null,-1),p={class:"ueo"},g={key:1,class:"loader"};Object(n["r"])();var j=i((function(t,e,a,i,j,O){var v=Object(n["x"])("mainmenu"),m=Object(n["x"])("labelbox");return Object(n["q"])(),Object(n["d"])("div",null,[Object(n["h"])(v,{judge:"0"}),c,O.readyToshowMainPage?(Object(n["q"])(),Object(n["d"])("div",s,[Object(n["h"])("div",r,[Object(n["h"])(m,{class:"box1",msg:"感染者数",idname:"kansen",infected:O.infected},null,8,["infected"])]),Object(n["h"])("div",u,[Object(n["h"])(m,{class:"box2",msg:"死者数",idname:"dead",infected:O.dead},null,8,["infected"])]),Object(n["h"])("div",o,[Object(n["h"])(m,{class:"box3",msg:"PCR検査数",idname:"pcr",infected:O.pcr},null,8,["infected"])]),Object(n["h"])("div",d,[Object(n["h"])(m,{class:"box4",msg:"退院者数",idname:"dischange",infected:O.discharge},null,8,["infected"])]),Object(n["h"])("div",l,[Object(n["h"])("div",h,[b,Object(n["h"])("input",{type:"radio",id:O.zenkokuId,name:"TAB",class:"tab-switch",checked:"checked"},null,8,["id"]),Object(n["h"])("label",{for:O.zenkokuId,class:"tab-label"},"岡山",8,["for"]),Object(n["h"])("div",f,[Object(n["g"])(Object(n["z"])(O.use)+"/"+Object(n["z"])(O.all),1),k,Object(n["h"])("p",p,Object(n["z"])(O.update),1)])])])])):(Object(n["q"])(),Object(n["d"])("div",g))])})),O=a("c287");a("52703");O["a"].render=j,O["a"].__scopeId="data-v-9c4ffd94";e["default"]=O["a"]},52703:function(t,e,a){"use strict";a("b0d3")},5899:function(t,e){t.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},"58a8":function(t,e,a){var n=a("1d80"),i=a("5899"),c="["+i+"]",s=RegExp("^"+c+c+"*"),r=RegExp(c+c+"*$"),u=function(t){return function(e){var a=String(n(e));return 1&t&&(a=a.replace(s,"")),2&t&&(a=a.replace(r,"")),a}};t.exports={start:u(1),end:u(2),trim:u(3)}},7156:function(t,e,a){var n=a("861d"),i=a("d2bb");t.exports=function(t,e,a){var c,s;return i&&"function"==typeof(c=e.constructor)&&c!==a&&n(s=c.prototype)&&s!==a.prototype&&i(t,s),t}},a351:function(t,e,a){"use strict";var n=a("7a23"),i={class:"box27"},c={class:"box-title"},s={class:"text"},r=Object(n["h"])("br",null,null,-1),u={class:"ueo"},o={class:"text"},d=Object(n["h"])("br",null,null,-1),l={class:"ueo"},h={class:"text"},b=Object(n["h"])("br",null,null,-1),f={class:"ueo"};function k(t,e,a,k,p,g){return Object(n["q"])(),Object(n["d"])("form",null,[Object(n["h"])("div",i,[Object(n["h"])("span",c,Object(n["z"])(a.msg),1),Object(n["h"])("input",{type:"radio",id:g.zenkokuId,name:"TAB",class:"tab-switch",checked:"checked"},null,8,["id"]),Object(n["h"])("label",{for:g.zenkokuId,class:"tab-label"},"全国",8,["for"]),Object(n["h"])("div",s,[Object(n["g"])(Object(n["z"])(a.infected.zenkoku),1),r,Object(n["h"])("p",u,Object(n["z"])(a.infected.data1),1)]),Object(n["h"])("input",{type:"radio",id:g.okayamaId,name:"TAB",class:"tab-switch"},null,8,["id"]),Object(n["h"])("label",{for:g.okayamaId,class:"tab-label"},"岡山",8,["for"]),Object(n["h"])("div",o,[Object(n["g"])(Object(n["z"])(a.infected.okayama),1),d,Object(n["h"])("p",l,Object(n["z"])(a.infected.data2),1)]),"感染者数"==a.msg?(Object(n["q"])(),Object(n["d"])("input",{key:0,type:"button",class:"aiu",value:"詳細",onClick:e[1]||(e[1]=function(e){return t.$router.push("/Detailspage")})})):Object(n["e"])("",!0),Object(n["h"])("input",{type:"radio",id:g.tsuyamaId,name:"TAB",class:"tab-switch"},null,8,["id"]),Object(n["h"])("label",{for:g.tsuyamaId,class:"tab-label"},"津山",8,["for"]),Object(n["h"])("div",h,[Object(n["g"])(Object(n["z"])(a.infected.tsuyama),1),b,Object(n["h"])("p",f,Object(n["z"])(a.infected.data3),1)])])])}var p={name:"labelbox",computed:{zenkokuId:function(){return this.idname+"zenkoku"},okayamaId:function(){return this.idname+"okayama"},tsuyamaId:function(){return this.idname+"tsuyama"}},props:{msg:{type:String},idname:{type:String},infected:{type:Object}}};a("ebca");p.render=k;e["a"]=p},a9e3:function(t,e,a){"use strict";var n=a("83ab"),i=a("da84"),c=a("94ca"),s=a("6eeb"),r=a("5135"),u=a("c6b6"),o=a("7156"),d=a("c04e"),l=a("d039"),h=a("7c73"),b=a("241c").f,f=a("06cf").f,k=a("9bf2").f,p=a("58a8").trim,g="Number",j=i[g],O=j.prototype,v=u(h(O))==g,m=function(t){var e,a,n,i,c,s,r,u,o=d(t,!1);if("string"==typeof o&&o.length>2)if(o=p(o),e=o.charCodeAt(0),43===e||45===e){if(a=o.charCodeAt(2),88===a||120===a)return NaN}else if(48===e){switch(o.charCodeAt(1)){case 66:case 98:n=2,i=49;break;case 79:case 111:n=8,i=55;break;default:return+o}for(c=o.slice(2),s=c.length,r=0;r<s;r++)if(u=c.charCodeAt(r),u<48||u>i)return NaN;return parseInt(c,n)}return+o};if(c(g,!j(" 0o1")||!j("0b1")||j("+0x1"))){for(var y,I=function(t){var e=arguments.length<1?0:t,a=this;return a instanceof I&&(v?l((function(){O.valueOf.call(a)})):u(a)!=g)?o(new j(m(e)),a,I):m(e)},w=n?b(j):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),D=0;w.length>D;D++)r(j,y=w[D])&&!r(I,y)&&k(I,y,f(j,y));I.prototype=O,O.constructor=I,s(i,g,I)}},b04d:function(t,e,a){},b0d3:function(t,e,a){},c287:function(t,e,a){"use strict";(function(t){a("4de4"),a("13d5"),a("a9e3"),a("dca8"),a("ac1f"),a("5319"),a("1276");var n=a("a351"),i=a("ad3a"),c=a("bc3a"),s=a.n(c),r=a("4bb4"),u=a("10bf"),o=a.n(u);e["a"]={name:"Mainpage",components:{labelbox:n["a"],mainmenu:i["a"]},computed:{readyToshowMainPage:function(){return this.kenDetails.length>0&&this.kenUtiwake.length>0&&this.kenPcr.length>0&&this.kenDead.length>0&&this.kenIryou.length>0&&this.Zenkoku.length>0},zenkokuId:function(){return"zenkoku"},use:function(){return Number(this.kenDead[this.kenDead.length-1]["患者_宿泊療養施設に入所中"])+Number(this.kenDead[this.kenDead.length-1]["患者_入院中_入院予定含む"])},all:function(){return Number(this.kenIryou[this.kenIryou.length-1]["確保数_病床"])+Number(this.kenIryou[this.kenIryou.length-1]["確保数_宿泊療養施設"])},update:function(){var t=this.kenDead[this.kenDead.length-1]["公表_年月日"].split("/");1==t[2].length&&(t[2]="0"+t[2]);var e="※"+t[0]+"年"+t[1]+"月"+t[2]+"日時点";return e},infected:function(){var t=this.Zenkoku.reduce((function(t,e){return t+e["npatients"]}),0),e=new Date,a=this.kenUtiwake[this.kenUtiwake.length-1]["公表年月日"].replace("月","/");a=a.replace("日","/"),a=a.split("/"),1==a[1].length&&(a[1]="0"+a[1]);var n="※"+e.getFullYear()+"年"+a[0]+"月"+a[1]+"日時点",i=this.last.split("-");return i="※"+i[0]+"年"+i[1]+"月"+i[2]+"日時点",{zenkoku:t+"人",okayama:this.kenUtiwake.length+"人",tsuyama:this.kenUtiwake.filter((function(t){if("津山市"==t.患者＿居住地)return!0})).length+"人",data1:i,data2:n,data3:n}},pcr:function(){var t=this.Zenkoku.reduce((function(t,e){return t+e["ninspections"]}),0),e=this.kenPcr.filter((function(t){if(""!=t.集計時点_年月日)return!0})),a=e[e.length-1].集計時点_年月日.split("/");1==a[2].length&&(a[2]="0"+a[2]);var n="※"+a[0]+"年"+a[1]+"月"+a[2]+"日時点",i=this.last.split("-");return i="※"+i[0]+"年"+i[1]+"月"+i[2]+"日時点",{zenkoku:t+"人",okayama:this.kenPcr.reduce((function(t,e){return t+Number(e["検査実施人数"])}),0)+"人",tsuyama:"No data",data1:i,data2:n,data3:""}},dead:function(){var t=this.Zenkoku.reduce((function(t,e){return t+e["ndeaths"]}),0),e=this.kenDead[this.kenDead.length-1]["公表_年月日"].split("/");1==e[2].length&&(e[2]="0"+e[2]);var a="※"+e[0]+"年"+e[1]+"月"+e[2]+"日時点",n=this.last.split("-");return n="※"+n[0]+"年"+n[1]+"月"+n[2]+"日時点",{zenkoku:t+"人",okayama:this.kenDead[this.kenDead.length-1]["患者_死亡"]+"人",tsuyama:"No data",data1:n,data2:a,data3:""}},discharge:function(){var t=this.Zenkoku.reduce((function(t,e){return t+e["nexits"]}),0),e=this.kenDead[this.kenDead.length-1]["公表_年月日"].split("/");1==e[2].length&&(e[2]="0"+e[2]);var a="※"+e[0]+"年"+e[1]+"月"+e[2]+"日時点",n=this.last.split("-");return n="※"+n[0]+"年"+n[1]+"月"+n[2]+"日時点",{zenkoku:t+"人",okayama:this.kenDead[this.kenDead.length-1]["患者_退院等"]+"人",tsuyama:"No data",data1:n,data2:a,data3:""}}},data:function(){return{kenDetails:[],kenUtiwake:[],kenPcr:[],kenDead:[],kenIryou:[],Zenkoku:[],last:[]}},mounted:function(){this.get_csv("https://taurayouhei.github.io/covid-19/data/kansenshasuu0420.csv",!0,"SJIS","UNICODE",this.setKenDetails),this.get_csv("https://taurayouhei.github.io/covid-19/data/pcr.csv",!0,"SJIS","UNICODE",this.setKenPcr),this.get_csv("https://taurayouhei.github.io/covid-19/data/kansenshashousaijouhou.csv",!0,"SJIS","UNICODE",this.setKenUchiwake),this.get_csv("https://taurayouhei.github.io/covid-19/data/kanjahasseijoukyou.csv",!0,"SJIS","UNICODE",this.setKenDead),this.get_csv("https://taurayouhei.github.io/covid-19/data/330001okayamacovid19medicalsystem.csv",!0,"SJIS","UNICODE",this.setKenIryou),this.get_csv("https://www.stopcovid19.jp/data/covid19japan.csv",!0,"UTF8","UNICODE",this.setZenkoku),this.lastupdata()},methods:{lastupdata:function(){var t=this;s.a.get("https://www.stopcovid19.jp/data/covid19japan.json").then((function(e){t.last=e.data["lastUpdate"]})).catch((function(t){return console.log(t)}))},setKenUchiwake:function(t){this.kenUtiwake=t,this.$store.commit("Enter2",this.kenUtiwake)},setKenPcr:function(t){this.kenPcr=t},setKenDead:function(t){this.kenDead=t},setKenIryou:function(t){this.kenIryou=t},setZenkoku:function(t){this.Zenkoku=t},setKenDetails:function(t){this.kenDetails=t,this.$store.commit("Enter",this.kenDetails)},get_csv:function(e,a,n,i,c){s.a.get(e,{responseType:"arraybuffer"}).then((function(e){var s=t.from(e.data),u=o.a.convert(s,{from:n,to:i,type:"string"});u=u.replace(/^\ufeff/,""),Object(r["parse"])(u,{columns:a,quote:'"',ltrim:!0,rtrim:!0,delimiter:",",cast:!0},(function(t,e){c(Object.freeze(e))}))})).catch((function(t){return console.log(t)}))}}}}).call(this,a("b639").Buffer)},d58f:function(t,e,a){var n=a("1c0b"),i=a("7b0b"),c=a("44ad"),s=a("50c4"),r=function(t){return function(e,a,r,u){n(a);var o=i(e),d=c(o),l=s(o.length),h=t?l-1:0,b=t?-1:1;if(r<2)while(1){if(h in d){u=d[h],h+=b;break}if(h+=b,t?h<0:l<=h)throw TypeError("Reduce of empty array with no initial value")}for(;t?h>=0:l>h;h+=b)h in d&&(u=a(u,d[h],h,o));return u}};t.exports={left:r(!1),right:r(!0)}},ebca:function(t,e,a){"use strict";a("b04d")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,