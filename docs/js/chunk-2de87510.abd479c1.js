(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2de87510"],{"057f":function(t,e,n){var r=n("fc6a"),a=n("241c").f,i={}.toString,o="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],c=function(t){try{return a(t)}catch(e){return o.slice()}};t.exports.f=function(t){return o&&"[object Window]"==i.call(t)?c(t):a(r(t))}},"13d5":function(t,e,n){"use strict";var r=n("23e7"),a=n("d58f").left,i=n("a640"),o=n("ae40"),c=i("reduce"),s=o("reduce",{1:0});r({target:"Array",proto:!0,forced:!c||!s},{reduce:function(t){return a(this,t,arguments.length,arguments.length>1?arguments[1]:void 0)}})},"25f0":function(t,e,n){"use strict";var r=n("6eeb"),a=n("825a"),i=n("d039"),o=n("ad6d"),c="toString",s=RegExp.prototype,u=s[c],f=i((function(){return"/a/b"!=u.call({source:"a",flags:"b"})})),l=u.name!=c;(f||l)&&r(RegExp.prototype,c,(function(){var t=a(this),e=String(t.source),n=t.flags,r=String(void 0===n&&t instanceof RegExp&&!("flags"in s)?o.call(t):n);return"/"+e+"/"+r}),{unsafe:!0})},"3ca3":function(t,e,n){"use strict";var r=n("6547").charAt,a=n("69f3"),i=n("7dd0"),o="String Iterator",c=a.set,s=a.getterFor(o);i(String,"String",(function(t){c(this,{type:o,string:String(t),index:0})}),(function(){var t,e=s(this),n=e.string,a=e.index;return a>=n.length?{value:void 0,done:!0}:(t=r(n,a),e.index+=t.length,{value:t,done:!1})}))},"4df4":function(t,e,n){"use strict";var r=n("0366"),a=n("7b0b"),i=n("9bdd"),o=n("e95a"),c=n("50c4"),s=n("8418"),u=n("35a1");t.exports=function(t){var e,n,f,l,d,h,b=a(t),p="function"==typeof this?this:Array,g=arguments.length,v=g>1?arguments[1]:void 0,y=void 0!==v,k=u(b),m=0;if(y&&(v=r(v,g>2?arguments[2]:void 0,2)),void 0==k||p==Array&&o(k))for(e=c(b.length),n=new p(e);e>m;m++)h=y?v(b[m],m):b[m],s(n,m,h);else for(l=k.call(b),d=l.next,n=new p;!(f=d.call(l)).done;m++)h=y?i(l,v,[f.value,m],!0):f.value,s(n,m,h);return n.length=m,n}},"4edd":function(t,e,n){"use strict";n.r(e);var r=n("7a23"),a=Object(r["F"])("data-v-31d11168");Object(r["t"])("data-v-31d11168");var i=Object(r["h"])("h1",null,"新型コロナウイルス情報",-1),o={key:0,class:"flex"},c={class:"box"},s={class:"box"},u={class:"box"},f={class:"box"},l={class:"box"},d={class:"box27"},h=Object(r["h"])("span",{class:"box-title"},"病床使用数",-1),b={class:"text"},p=Object(r["h"])("br",null,null,-1),g={class:"ueo"},v={key:1,class:"loader"};Object(r["r"])();var y=a((function(t,e,n,a,y,k){var m=Object(r["x"])("mainmenu"),O=Object(r["x"])("labelbox");return Object(r["q"])(),Object(r["d"])("div",null,[Object(r["h"])(m,{judge:"0"}),i,k.readyToshowMainPage?(Object(r["q"])(),Object(r["d"])("div",o,[Object(r["h"])("div",c,[Object(r["h"])(O,{class:"box1",msg:"感染者数",idname:"kansen",infected:k.infected},null,8,["infected"])]),Object(r["h"])("div",s,[Object(r["h"])(O,{class:"box2",msg:"死者数",idname:"dead",infected:k.dead},null,8,["infected"])]),Object(r["h"])("div",u,[Object(r["h"])(O,{class:"box3",msg:"PCR検査数",idname:"pcr",infected:k.pcr},null,8,["infected"])]),Object(r["h"])("div",f,[Object(r["h"])(O,{class:"box4",msg:"退院者数",idname:"dischange",infected:k.discharge},null,8,["infected"])]),Object(r["h"])("div",l,[Object(r["h"])("div",d,[h,Object(r["h"])("input",{type:"radio",id:k.zenkokuId,name:"TAB",class:"tab-switch",checked:"checked"},null,8,["id"]),Object(r["h"])("label",{for:k.zenkokuId,class:"tab-label"},"岡山",8,["for"]),Object(r["h"])("div",b,[Object(r["g"])(Object(r["z"])(k.use)+"/"+Object(r["z"])(k.all),1),p,Object(r["h"])("p",g,Object(r["z"])(k.update),1)])])])])):(Object(r["q"])(),Object(r["d"])("div",v))])})),k=n("c287");n("508f");k["a"].render=y,k["a"].__scopeId="data-v-31d11168";e["default"]=k["a"]},"508f":function(t,e,n){"use strict";n("a7f3")},5899:function(t,e){t.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},"58a8":function(t,e,n){var r=n("1d80"),a=n("5899"),i="["+a+"]",o=RegExp("^"+i+i+"*"),c=RegExp(i+i+"*$"),s=function(t){return function(e){var n=String(r(e));return 1&t&&(n=n.replace(o,"")),2&t&&(n=n.replace(c,"")),n}};t.exports={start:s(1),end:s(2),trim:s(3)}},7156:function(t,e,n){var r=n("861d"),a=n("d2bb");t.exports=function(t,e,n){var i,o;return a&&"function"==typeof(i=e.constructor)&&i!==n&&r(o=i.prototype)&&o!==n.prototype&&a(t,o),t}},"746f":function(t,e,n){var r=n("428f"),a=n("5135"),i=n("e538"),o=n("9bf2").f;t.exports=function(t){var e=r.Symbol||(r.Symbol={});a(e,t)||o(e,t,{value:i.f(t)})}},a351:function(t,e,n){"use strict";var r=n("7a23"),a={class:"box27"},i={class:"box-title"},o={class:"text"},c=Object(r["h"])("br",null,null,-1),s={class:"ueo"},u={class:"text"},f=Object(r["h"])("br",null,null,-1),l={class:"ueo"},d={class:"text"},h=Object(r["h"])("br",null,null,-1),b={class:"ueo"};function p(t,e,n,p,g,v){return Object(r["q"])(),Object(r["d"])("form",null,[Object(r["h"])("div",a,[Object(r["h"])("span",i,Object(r["z"])(n.msg),1),Object(r["h"])("input",{type:"radio",id:v.zenkokuId,name:"TAB",class:"tab-switch",checked:"checked"},null,8,["id"]),Object(r["h"])("label",{for:v.zenkokuId,class:"tab-label"},"全国",8,["for"]),Object(r["h"])("div",o,[Object(r["g"])(Object(r["z"])(n.infected.zenkoku),1),c,Object(r["h"])("p",s,Object(r["z"])(n.infected.data1),1)]),Object(r["h"])("input",{type:"radio",id:v.okayamaId,name:"TAB",class:"tab-switch"},null,8,["id"]),Object(r["h"])("label",{for:v.okayamaId,class:"tab-label"},"岡山",8,["for"]),Object(r["h"])("div",u,[Object(r["g"])(Object(r["z"])(n.infected.okayama),1),f,Object(r["h"])("p",l,Object(r["z"])(n.infected.data2),1)]),"感染者数"==n.msg?(Object(r["q"])(),Object(r["d"])("input",{key:0,type:"button",class:"aiu",value:"詳細",onClick:e[1]||(e[1]=function(e){return t.$router.push("/Detailspage")})})):Object(r["e"])("",!0),Object(r["h"])("input",{type:"radio",id:v.tsuyamaId,name:"TAB",class:"tab-switch"},null,8,["id"]),Object(r["h"])("label",{for:v.tsuyamaId,class:"tab-label"},"津山",8,["for"]),Object(r["h"])("div",d,[Object(r["g"])(Object(r["z"])(n.infected.tsuyama),1),h,Object(r["h"])("p",b,Object(r["z"])(n.infected.data3),1)])])])}var g={name:"labelbox",computed:{zenkokuId:function(){return this.idname+"zenkoku"},okayamaId:function(){return this.idname+"okayama"},tsuyamaId:function(){return this.idname+"tsuyama"}},props:{msg:{type:String},idname:{type:String},infected:{type:Object}}};n("ebca");g.render=p;e["a"]=g},a4d3:function(t,e,n){"use strict";var r=n("23e7"),a=n("da84"),i=n("d066"),o=n("c430"),c=n("83ab"),s=n("4930"),u=n("fdbf"),f=n("d039"),l=n("5135"),d=n("e8b5"),h=n("861d"),b=n("825a"),p=n("7b0b"),g=n("fc6a"),v=n("c04e"),y=n("5c6c"),k=n("7c73"),m=n("df75"),O=n("241c"),j=n("057f"),S=n("7418"),w=n("06cf"),I=n("9bf2"),x=n("d1e7"),N=n("9112"),D=n("6eeb"),A=n("5692"),E=n("f772"),T=n("d012"),L=n("90e3"),_=n("b622"),P=n("e538"),z=n("746f"),C=n("d44e"),U=n("69f3"),M=n("b727").forEach,R=E("hidden"),F="Symbol",V="prototype",K=_("toPrimitive"),G=U.set,J=U.getterFor(F),Z=Object[V],q=a.Symbol,$=i("JSON","stringify"),B=w.f,H=I.f,W=j.f,X=x.f,Y=A("symbols"),Q=A("op-symbols"),tt=A("string-to-symbol-registry"),et=A("symbol-to-string-registry"),nt=A("wks"),rt=a.QObject,at=!rt||!rt[V]||!rt[V].findChild,it=c&&f((function(){return 7!=k(H({},"a",{get:function(){return H(this,"a",{value:7}).a}})).a}))?function(t,e,n){var r=B(Z,e);r&&delete Z[e],H(t,e,n),r&&t!==Z&&H(Z,e,r)}:H,ot=function(t,e){var n=Y[t]=k(q[V]);return G(n,{type:F,tag:t,description:e}),c||(n.description=e),n},ct=u?function(t){return"symbol"==typeof t}:function(t){return Object(t)instanceof q},st=function(t,e,n){t===Z&&st(Q,e,n),b(t);var r=v(e,!0);return b(n),l(Y,r)?(n.enumerable?(l(t,R)&&t[R][r]&&(t[R][r]=!1),n=k(n,{enumerable:y(0,!1)})):(l(t,R)||H(t,R,y(1,{})),t[R][r]=!0),it(t,r,n)):H(t,r,n)},ut=function(t,e){b(t);var n=g(e),r=m(n).concat(bt(n));return M(r,(function(e){c&&!lt.call(n,e)||st(t,e,n[e])})),t},ft=function(t,e){return void 0===e?k(t):ut(k(t),e)},lt=function(t){var e=v(t,!0),n=X.call(this,e);return!(this===Z&&l(Y,e)&&!l(Q,e))&&(!(n||!l(this,e)||!l(Y,e)||l(this,R)&&this[R][e])||n)},dt=function(t,e){var n=g(t),r=v(e,!0);if(n!==Z||!l(Y,r)||l(Q,r)){var a=B(n,r);return!a||!l(Y,r)||l(n,R)&&n[R][r]||(a.enumerable=!0),a}},ht=function(t){var e=W(g(t)),n=[];return M(e,(function(t){l(Y,t)||l(T,t)||n.push(t)})),n},bt=function(t){var e=t===Z,n=W(e?Q:g(t)),r=[];return M(n,(function(t){!l(Y,t)||e&&!l(Z,t)||r.push(Y[t])})),r};if(s||(q=function(){if(this instanceof q)throw TypeError("Symbol is not a constructor");var t=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,e=L(t),n=function(t){this===Z&&n.call(Q,t),l(this,R)&&l(this[R],e)&&(this[R][e]=!1),it(this,e,y(1,t))};return c&&at&&it(Z,e,{configurable:!0,set:n}),ot(e,t)},D(q[V],"toString",(function(){return J(this).tag})),D(q,"withoutSetter",(function(t){return ot(L(t),t)})),x.f=lt,I.f=st,w.f=dt,O.f=j.f=ht,S.f=bt,P.f=function(t){return ot(_(t),t)},c&&(H(q[V],"description",{configurable:!0,get:function(){return J(this).description}}),o||D(Z,"propertyIsEnumerable",lt,{unsafe:!0}))),r({global:!0,wrap:!0,forced:!s,sham:!s},{Symbol:q}),M(m(nt),(function(t){z(t)})),r({target:F,stat:!0,forced:!s},{for:function(t){var e=String(t);if(l(tt,e))return tt[e];var n=q(e);return tt[e]=n,et[n]=e,n},keyFor:function(t){if(!ct(t))throw TypeError(t+" is not a symbol");if(l(et,t))return et[t]},useSetter:function(){at=!0},useSimple:function(){at=!1}}),r({target:"Object",stat:!0,forced:!s,sham:!c},{create:ft,defineProperty:st,defineProperties:ut,getOwnPropertyDescriptor:dt}),r({target:"Object",stat:!0,forced:!s},{getOwnPropertyNames:ht,getOwnPropertySymbols:bt}),r({target:"Object",stat:!0,forced:f((function(){S.f(1)}))},{getOwnPropertySymbols:function(t){return S.f(p(t))}}),$){var pt=!s||f((function(){var t=q();return"[null]"!=$([t])||"{}"!=$({a:t})||"{}"!=$(Object(t))}));r({target:"JSON",stat:!0,forced:pt},{stringify:function(t,e,n){var r,a=[t],i=1;while(arguments.length>i)a.push(arguments[i++]);if(r=e,(h(e)||void 0!==t)&&!ct(t))return d(e)||(e=function(t,e){if("function"==typeof r&&(e=r.call(this,t,e)),!ct(e))return e}),a[1]=e,$.apply(null,a)}})}q[V][K]||N(q[V],K,q[V].valueOf),C(q,F),T[R]=!0},a630:function(t,e,n){var r=n("23e7"),a=n("4df4"),i=n("1c7e"),o=!i((function(t){Array.from(t)}));r({target:"Array",stat:!0,forced:o},{from:a})},a7f3:function(t,e,n){},a9e3:function(t,e,n){"use strict";var r=n("83ab"),a=n("da84"),i=n("94ca"),o=n("6eeb"),c=n("5135"),s=n("c6b6"),u=n("7156"),f=n("c04e"),l=n("d039"),d=n("7c73"),h=n("241c").f,b=n("06cf").f,p=n("9bf2").f,g=n("58a8").trim,v="Number",y=a[v],k=y.prototype,m=s(d(k))==v,O=function(t){var e,n,r,a,i,o,c,s,u=f(t,!1);if("string"==typeof u&&u.length>2)if(u=g(u),e=u.charCodeAt(0),43===e||45===e){if(n=u.charCodeAt(2),88===n||120===n)return NaN}else if(48===e){switch(u.charCodeAt(1)){case 66:case 98:r=2,a=49;break;case 79:case 111:r=8,a=55;break;default:return+u}for(i=u.slice(2),o=i.length,c=0;c<o;c++)if(s=i.charCodeAt(c),s<48||s>a)return NaN;return parseInt(i,r)}return+u};if(i(v,!y(" 0o1")||!y("0b1")||y("+0x1"))){for(var j,S=function(t){var e=arguments.length<1?0:t,n=this;return n instanceof S&&(m?l((function(){k.valueOf.call(n)})):s(n)!=v)?u(new y(O(e)),n,S):O(e)},w=r?h(y):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),I=0;w.length>I;I++)c(y,j=w[I])&&!c(S,j)&&p(S,j,b(y,j));S.prototype=k,k.constructor=S,o(a,v,S)}},b04d:function(t,e,n){},b0c0:function(t,e,n){var r=n("83ab"),a=n("9bf2").f,i=Function.prototype,o=i.toString,c=/^\s*function ([^ (]*)/,s="name";r&&!(s in i)&&a(i,s,{configurable:!0,get:function(){try{return o.call(this).match(c)[1]}catch(t){return""}}})},b85c:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));n("a4d3"),n("e01a"),n("d28b"),n("d3b7"),n("3ca3"),n("ddb0"),n("a630"),n("fb6a"),n("b0c0"),n("25f0");function r(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function a(t,e){if(t){if("string"===typeof t)return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(t,e):void 0}}function i(t,e){var n;if("undefined"===typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(n=a(t))||e&&t&&"number"===typeof t.length){n&&(t=n);var r=0,i=function(){};return{s:i,n:function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,c=!0,s=!1;return{s:function(){n=t[Symbol.iterator]()},n:function(){var t=n.next();return c=t.done,t},e:function(t){s=!0,o=t},f:function(){try{c||null==n["return"]||n["return"]()}finally{if(s)throw o}}}}},c287:function(t,e,n){"use strict";(function(t){n("4de4"),n("13d5"),n("a9e3"),n("dca8"),n("ac1f"),n("5319"),n("1276");var r=n("b85c"),a=n("a351"),i=n("ad3a"),o=n("bc3a"),c=n.n(o),s=n("4bb4"),u=n("10bf"),f=n.n(u);e["a"]={name:"Mainpage",components:{labelbox:a["a"],mainmenu:i["a"]},computed:{readyToshowMainPage:function(){return this.kenDetails.length>0&&this.kenUtiwake.length>0&&this.kenPcr.length>0&&this.kenDead.length>0&&this.kenIryou.length>0&&this.Zenkoku.length>0},zenkokuId:function(){return"zenkoku"},use:function(){return Number(this.kenDead[this.kenDead.length-1]["患者_入院中_入院予定含む"])+Number(this.kenDead[this.kenDead.length-1]["患者_宿泊療養施設に入所中"])},all:function(){return Number(this.kenIryou[this.kenIryou.length-1]["確保数_病床"])+Number(this.kenIryou[this.kenIryou.length-1]["確保数_宿泊療養施設"])},update:function(){for(var t=this.kenDead[this.kenDead.length-1]["公表_年月日"].split("/"),e=1;e<3;e++)1==t[e].length&&(t[e]="0"+t[e]);var n="※"+t[0]+"年"+t[1]+"月"+t[2]+"日時点";return n},infected:function(){var t=this.Zenkoku.reduce((function(t,e){return t+e["npatients"]}),0),e=this.kenUtiwake[this.kenUtiwake.length-1]["公表年月日"].replace("年","/");e=e.replace("月","/"),e=e.replace("日","/"),e=e.split("/");for(var n=1;n<3;n++)1==e[n].length&&(e[n]="0"+e[n]);var r="※"+e[0]+"年"+e[1]+"月"+e[2]+"日時点",a=this.last.split("-");return a="※"+a[0]+"年"+a[1]+"月"+a[2]+"日時点",{zenkoku:t+"人",okayama:this.kenUtiwake.length+"人",tsuyama:this.kenUtiwake.filter((function(t){if("津山市"==t.患者＿居住地)return!0})).length+"人",data1:a,data2:r,data3:r}},pcr:function(){var t=this.Zenkoku.reduce((function(t,e){return t+e["ninspections"]}),0),e=this.kenPcr.filter((function(t){if(""!=t.集計時点_年月日)return!0})),n=e[e.length-1].集計時点_年月日.split("/");1==n[2].length&&(n[2]="0"+n[2]);var r="※"+n[0]+"年"+n[1]+"月"+n[2]+"日時点",a=this.last.split("-");return a="※"+a[0]+"年"+a[1]+"月"+a[2]+"日時点",{zenkoku:t+"人",okayama:this.kenPcr.reduce((function(t,e){return t+Number(e["検査実施人数"])}),0)+"人",tsuyama:"No data",data1:a,data2:r,data3:""}},dead:function(){for(var t=this.Zenkoku.reduce((function(t,e){return t+e["ndeaths"]}),0),e=this.kenDead[this.kenDead.length-1]["公表_年月日"].split("/"),n=1;n<3;n++)1==e[n].length&&(e[n]="0"+e[n]);var r="※"+e[0]+"年"+e[1]+"月"+e[2]+"日時点",a=this.last.split("-");return a="※"+a[0]+"年"+a[1]+"月"+a[2]+"日時点",{zenkoku:t+"人",okayama:this.kenDead[this.kenDead.length-1]["患者_死亡"]+"人",tsuyama:"No data",data1:a,data2:r,data3:""}},discharge:function(){for(var t=this.Zenkoku.reduce((function(t,e){return t+e["nexits"]}),0),e=this.kenDead[this.kenDead.length-1]["公表_年月日"].split("/"),n=1;n<3;n++)1==e[n].length&&(e[n]="0"+e[n]);var r="※"+e[0]+"年"+e[1]+"月"+e[2]+"日時点",a=this.last.split("-");return a="※"+a[0]+"年"+a[1]+"月"+a[2]+"日時点",{zenkoku:t+"人",okayama:this.kenDead[this.kenDead.length-1]["患者_退院等"]+"人",tsuyama:"No data",data1:a,data2:r,data3:""}}},data:function(){return{kenDetails:[],kenUtiwake:[],kenPcr:[],kenDead:[],kenIryou:[],Zenkoku:[],last:[]}},mounted:function(){this.cash(),1==this.cash()&&(this.get_csv("https://taurayouhei.github.io/covid-19/data/kansenshasuu0420.csv",!0,"SJIS","UNICODE",this.setKenDetails),this.get_csv("https://taurayouhei.github.io/covid-19/data/pcr.csv",!0,"SJIS","UNICODE",this.setKenPcr),this.get_csv("https://taurayouhei.github.io/covid-19/data/kansenshashousaijouhou.csv",!0,"SJIS","UNICODE",this.setKenUchiwake),this.get_csv("https://taurayouhei.github.io/covid-19/data/kanjahasseijoukyou.csv",!0,"SJIS","UNICODE",this.setKenDead),this.get_csv("https://taurayouhei.github.io/covid-19/data/330001okayamacovid19medicalsystem.csv",!0,"SJIS","UNICODE",this.setKenIryou),this.get_csv("https://www.stopcovid19.jp/data/covid19japan.csv",!0,"UTF8","UNICODE",this.setZenkoku),this.lastupdata())},methods:{cash:function(){return window.navigator.serviceWorker.getRegistrations().then((function(t){var e,n=Object(r["a"])(t);try{for(n.s();!(e=n.n()).done;){var a=e.value;a.unregister()}}catch(i){n.e(i)}finally{n.f()}})),!0},lastupdata:function(){var t=this;c.a.get("https://www.stopcovid19.jp/data/covid19japan.json").then((function(e){t.last=e.data["lastUpdate"]})).catch((function(t){return console.log(t)}))},setKenUchiwake:function(t){this.kenUtiwake=t,console.log(this.kenUtiwake),this.$store.commit("Enter2",this.kenUtiwake)},setKenPcr:function(t){this.kenPcr=t},setKenDead:function(t){this.kenDead=t},setKenIryou:function(t){this.kenIryou=t},setZenkoku:function(t){this.Zenkoku=t},setKenDetails:function(t){this.kenDetails=t,this.$store.commit("Enter",this.kenDetails)},get_csv:function(e,n,r,a,i){c.a.get(e,{responseType:"arraybuffer"}).then((function(e){var o=t.from(e.data),c=f.a.convert(o,{from:r,to:a,type:"string"});c=c.replace(/^\ufeff/,""),Object(s["parse"])(c,{columns:n,quote:'"',ltrim:!0,rtrim:!0,delimiter:",",cast:!0},(function(t,e){i(Object.freeze(e))}))})).catch((function(t){return console.log(t)}))}}}}).call(this,n("b639").Buffer)},d28b:function(t,e,n){var r=n("746f");r("iterator")},d58f:function(t,e,n){var r=n("1c0b"),a=n("7b0b"),i=n("44ad"),o=n("50c4"),c=function(t){return function(e,n,c,s){r(n);var u=a(e),f=i(u),l=o(u.length),d=t?l-1:0,h=t?-1:1;if(c<2)while(1){if(d in f){s=f[d],d+=h;break}if(d+=h,t?d<0:l<=d)throw TypeError("Reduce of empty array with no initial value")}for(;t?d>=0:l>d;d+=h)d in f&&(s=n(s,f[d],d,u));return s}};t.exports={left:c(!1),right:c(!0)}},ddb0:function(t,e,n){var r=n("da84"),a=n("fdbc"),i=n("e260"),o=n("9112"),c=n("b622"),s=c("iterator"),u=c("toStringTag"),f=i.values;for(var l in a){var d=r[l],h=d&&d.prototype;if(h){if(h[s]!==f)try{o(h,s,f)}catch(p){h[s]=f}if(h[u]||o(h,u,l),a[l])for(var b in i)if(h[b]!==i[b])try{o(h,b,i[b])}catch(p){h[b]=i[b]}}}},e01a:function(t,e,n){"use strict";var r=n("23e7"),a=n("83ab"),i=n("da84"),o=n("5135"),c=n("861d"),s=n("9bf2").f,u=n("e893"),f=i.Symbol;if(a&&"function"==typeof f&&(!("description"in f.prototype)||void 0!==f().description)){var l={},d=function(){var t=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),e=this instanceof d?new f(t):void 0===t?f():f(t);return""===t&&(l[e]=!0),e};u(d,f);var h=d.prototype=f.prototype;h.constructor=d;var b=h.toString,p="Symbol(test)"==String(f("test")),g=/^Symbol\((.*)\)[^)]+$/;s(h,"description",{configurable:!0,get:function(){var t=c(this)?this.valueOf():this,e=b.call(t);if(o(l,t))return"";var n=p?e.slice(7,-1):e.replace(g,"$1");return""===n?void 0:n}}),r({global:!0,forced:!0},{Symbol:d})}},e538:function(t,e,n){var r=n("b622");e.f=r},ebca:function(t,e,n){"use strict";n("b04d")},fb6a:function(t,e,n){"use strict";var r=n("23e7"),a=n("861d"),i=n("e8b5"),o=n("23cb"),c=n("50c4"),s=n("fc6a"),u=n("8418"),f=n("b622"),l=n("1dde"),d=n("ae40"),h=l("slice"),b=d("slice",{ACCESSORS:!0,0:0,1:2}),p=f("species"),g=[].slice,v=Math.max;r({target:"Array",proto:!0,forced:!h||!b},{slice:function(t,e){var n,r,f,l=s(this),d=c(l.length),h=o(t,d),b=o(void 0===e?d:e,d);if(i(l)&&(n=l.constructor,"function"!=typeof n||n!==Array&&!i(n.prototype)?a(n)&&(n=n[p],null===n&&(n=void 0)):n=void 0,n===Array||void 0===n))return g.call(l,h,b);for(r=new(void 0===n?Array:n)(v(b-h,0)),f=0;h<b;h++,f++)h in l&&u(r,f,l[h]);return r.length=f,r}})},fdbc:function(t,e){t.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktbmFtZXMtZXh0ZXJuYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5yZWR1Y2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9hcnJheS1mcm9tLmpzIiwid2VicGFjazovLy8uL3NyYy92aWV3cy9NYWlucGFnZS52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXdzL01haW5wYWdlLnZ1ZT8zYmYzIiwid2VicGFjazovLy8uL3NyYy92aWV3cy9NYWlucGFnZS52dWU/OGQxMiIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvd2hpdGVzcGFjZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3N0cmluZy10cmltLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pbmhlcml0LWlmLXJlcXVpcmVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9kZWZpbmUtd2VsbC1rbm93bi1zeW1ib2wuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbGFiZWxib3gudnVlIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2xhYmVsYm94LnZ1ZT8zZWY1Iiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5TGlrZVRvQXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9hcnJheS1yZWR1Y2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbC13cmFwcGVkLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2xhYmVsYm94LnZ1ZT82MjZjIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2RvbS1pdGVyYWJsZXMuanMiXSwibmFtZXMiOlsidG9JbmRleGVkT2JqZWN0IiwibmF0aXZlR2V0T3duUHJvcGVydHlOYW1lcyIsImYiLCJ0b1N0cmluZyIsIndpbmRvd05hbWVzIiwid2luZG93IiwiT2JqZWN0IiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImdldFdpbmRvd05hbWVzIiwiaXQiLCJlcnJvciIsInNsaWNlIiwibW9kdWxlIiwiZXhwb3J0cyIsImNhbGwiLCIkIiwiJHJlZHVjZSIsImxlZnQiLCJhcnJheU1ldGhvZElzU3RyaWN0IiwiYXJyYXlNZXRob2RVc2VzVG9MZW5ndGgiLCJTVFJJQ1RfTUVUSE9EIiwiVVNFU19UT19MRU5HVEgiLCIxIiwidGFyZ2V0IiwicHJvdG8iLCJmb3JjZWQiLCJyZWR1Y2UiLCJjYWxsYmFja2ZuIiwidGhpcyIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsInJlZGVmaW5lIiwiYW5PYmplY3QiLCJmYWlscyIsImZsYWdzIiwiVE9fU1RSSU5HIiwiUmVnRXhwUHJvdG90eXBlIiwiUmVnRXhwIiwicHJvdG90eXBlIiwibmF0aXZlVG9TdHJpbmciLCJOT1RfR0VORVJJQyIsInNvdXJjZSIsIklOQ09SUkVDVF9OQU1FIiwibmFtZSIsIlIiLCJwIiwiU3RyaW5nIiwicmYiLCJ1bnNhZmUiLCJjaGFyQXQiLCJJbnRlcm5hbFN0YXRlTW9kdWxlIiwiZGVmaW5lSXRlcmF0b3IiLCJTVFJJTkdfSVRFUkFUT1IiLCJzZXRJbnRlcm5hbFN0YXRlIiwic2V0IiwiZ2V0SW50ZXJuYWxTdGF0ZSIsImdldHRlckZvciIsIml0ZXJhdGVkIiwidHlwZSIsInN0cmluZyIsImluZGV4IiwicG9pbnQiLCJzdGF0ZSIsInZhbHVlIiwiZG9uZSIsImJpbmQiLCJ0b09iamVjdCIsImNhbGxXaXRoU2FmZUl0ZXJhdGlvbkNsb3NpbmciLCJpc0FycmF5SXRlcmF0b3JNZXRob2QiLCJ0b0xlbmd0aCIsImNyZWF0ZVByb3BlcnR5IiwiZ2V0SXRlcmF0b3JNZXRob2QiLCJhcnJheUxpa2UiLCJyZXN1bHQiLCJzdGVwIiwiaXRlcmF0b3IiLCJuZXh0IiwiTyIsIkMiLCJBcnJheSIsImFyZ3VtZW50c0xlbmd0aCIsIm1hcGZuIiwibWFwcGluZyIsIml0ZXJhdG9yTWV0aG9kIiwiY2xhc3MiLCJqdWRnZSIsInJlYWR5VG9zaG93TWFpblBhZ2UiLCJtc2ciLCJpZG5hbWUiLCJpbmZlY3RlZCIsImRlYWQiLCJwY3IiLCJkaXNjaGFyZ2UiLCJpZCIsInplbmtva3VJZCIsImNoZWNrZWQiLCJmb3IiLCJ1c2UiLCJhbGwiLCJ1cGRhdGUiLCJyZW5kZXIiLCJfX3Njb3BlSWQiLCJyZXF1aXJlT2JqZWN0Q29lcmNpYmxlIiwid2hpdGVzcGFjZXMiLCJ3aGl0ZXNwYWNlIiwibHRyaW0iLCJydHJpbSIsImNyZWF0ZU1ldGhvZCIsIlRZUEUiLCIkdGhpcyIsInJlcGxhY2UiLCJzdGFydCIsImVuZCIsInRyaW0iLCJpc09iamVjdCIsInNldFByb3RvdHlwZU9mIiwiZHVtbXkiLCJXcmFwcGVyIiwiTmV3VGFyZ2V0IiwiTmV3VGFyZ2V0UHJvdG90eXBlIiwiY29uc3RydWN0b3IiLCJwYXRoIiwiaGFzIiwid3JhcHBlZFdlbGxLbm93blN5bWJvbE1vZHVsZSIsImRlZmluZVByb3BlcnR5IiwiTkFNRSIsIlN5bWJvbCIsInplbmtva3UiLCJkYXRhMSIsIm9rYXlhbWFJZCIsIm9rYXlhbWEiLCJkYXRhMiIsIiRyb3V0ZXIiLCJwdXNoIiwidHN1eWFtYUlkIiwidHN1eWFtYSIsImRhdGEzIiwiY29tcHV0ZWQiLCJwcm9wcyIsImdsb2JhbCIsImdldEJ1aWx0SW4iLCJJU19QVVJFIiwiREVTQ1JJUFRPUlMiLCJOQVRJVkVfU1lNQk9MIiwiVVNFX1NZTUJPTF9BU19VSUQiLCJpc0FycmF5IiwidG9QcmltaXRpdmUiLCJjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IiLCJuYXRpdmVPYmplY3RDcmVhdGUiLCJvYmplY3RLZXlzIiwiZ2V0T3duUHJvcGVydHlOYW1lc01vZHVsZSIsImdldE93blByb3BlcnR5TmFtZXNFeHRlcm5hbCIsImdldE93blByb3BlcnR5U3ltYm9sc01vZHVsZSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvck1vZHVsZSIsImRlZmluZVByb3BlcnR5TW9kdWxlIiwicHJvcGVydHlJc0VudW1lcmFibGVNb2R1bGUiLCJjcmVhdGVOb25FbnVtZXJhYmxlUHJvcGVydHkiLCJzaGFyZWQiLCJzaGFyZWRLZXkiLCJoaWRkZW5LZXlzIiwidWlkIiwid2VsbEtub3duU3ltYm9sIiwiZGVmaW5lV2VsbEtub3duU3ltYm9sIiwic2V0VG9TdHJpbmdUYWciLCIkZm9yRWFjaCIsImZvckVhY2giLCJISURERU4iLCJTWU1CT0wiLCJQUk9UT1RZUEUiLCJUT19QUklNSVRJVkUiLCJPYmplY3RQcm90b3R5cGUiLCIkU3ltYm9sIiwiJHN0cmluZ2lmeSIsIm5hdGl2ZUdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIm5hdGl2ZURlZmluZVByb3BlcnR5IiwibmF0aXZlUHJvcGVydHlJc0VudW1lcmFibGUiLCJBbGxTeW1ib2xzIiwiT2JqZWN0UHJvdG90eXBlU3ltYm9scyIsIlN0cmluZ1RvU3ltYm9sUmVnaXN0cnkiLCJTeW1ib2xUb1N0cmluZ1JlZ2lzdHJ5IiwiV2VsbEtub3duU3ltYm9sc1N0b3JlIiwiUU9iamVjdCIsIlVTRV9TRVRURVIiLCJmaW5kQ2hpbGQiLCJzZXRTeW1ib2xEZXNjcmlwdG9yIiwiZ2V0IiwiYSIsIlAiLCJBdHRyaWJ1dGVzIiwiT2JqZWN0UHJvdG90eXBlRGVzY3JpcHRvciIsIndyYXAiLCJ0YWciLCJkZXNjcmlwdGlvbiIsInN5bWJvbCIsImlzU3ltYm9sIiwiJGRlZmluZVByb3BlcnR5Iiwia2V5IiwiZW51bWVyYWJsZSIsIiRkZWZpbmVQcm9wZXJ0aWVzIiwiUHJvcGVydGllcyIsInByb3BlcnRpZXMiLCJrZXlzIiwiY29uY2F0IiwiJGdldE93blByb3BlcnR5U3ltYm9scyIsIiRwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIiRjcmVhdGUiLCJWIiwiJGdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImRlc2NyaXB0b3IiLCIkZ2V0T3duUHJvcGVydHlOYW1lcyIsIm5hbWVzIiwiSVNfT0JKRUNUX1BST1RPVFlQRSIsIlR5cGVFcnJvciIsInNldHRlciIsImNvbmZpZ3VyYWJsZSIsInNoYW0iLCJzdGF0Iiwia2V5Rm9yIiwic3ltIiwidXNlU2V0dGVyIiwidXNlU2ltcGxlIiwiY3JlYXRlIiwiZGVmaW5lUHJvcGVydGllcyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldE93blByb3BlcnR5U3ltYm9scyIsIkZPUkNFRF9KU09OX1NUUklOR0lGWSIsInN0cmluZ2lmeSIsInJlcGxhY2VyIiwic3BhY2UiLCIkcmVwbGFjZXIiLCJhcmdzIiwiYXBwbHkiLCJ2YWx1ZU9mIiwiZnJvbSIsImNoZWNrQ29ycmVjdG5lc3NPZkl0ZXJhdGlvbiIsIklOQ09SUkVDVF9JVEVSQVRJT04iLCJpdGVyYWJsZSIsImlzRm9yY2VkIiwiY2xhc3NvZiIsImluaGVyaXRJZlJlcXVpcmVkIiwiTlVNQkVSIiwiTmF0aXZlTnVtYmVyIiwiTnVtYmVyUHJvdG90eXBlIiwiQlJPS0VOX0NMQVNTT0YiLCJ0b051bWJlciIsImFyZ3VtZW50IiwiZmlyc3QiLCJ0aGlyZCIsInJhZGl4IiwibWF4Q29kZSIsImRpZ2l0cyIsImNvZGUiLCJjaGFyQ29kZUF0IiwiTmFOIiwicGFyc2VJbnQiLCJOdW1iZXJXcmFwcGVyIiwic3BsaXQiLCJqIiwiRnVuY3Rpb25Qcm90b3R5cGUiLCJGdW5jdGlvbiIsIkZ1bmN0aW9uUHJvdG90eXBlVG9TdHJpbmciLCJuYW1lUkUiLCJtYXRjaCIsIl9hcnJheUxpa2VUb0FycmF5IiwiYXJyIiwibGVuIiwiaSIsImFycjIiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJvIiwibWluTGVuIiwiYXJyYXlMaWtlVG9BcnJheSIsIm4iLCJ0ZXN0IiwiX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiLCJhbGxvd0FycmF5TGlrZSIsInVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiRiIsInMiLCJlIiwiX2UiLCJlcnIiLCJub3JtYWxDb21wbGV0aW9uIiwiZGlkRXJyIiwiX2UyIiwiY29tcG9uZW50cyIsImxhYmVsYm94IiwibWFpbm1lbnUiLCJrZW5EZXRhaWxzIiwia2VuVXRpd2FrZSIsImtlblBjciIsImtlbkRlYWQiLCJrZW5JcnlvdSIsIlplbmtva3UiLCJOdW1iZXIiLCJoaWR1a2UiLCJoaWR1a2VkYXRhIiwiZmlsdGVyZWRaZW5rb2t1Iiwic3VtIiwiZWFjaCIsImdhdGEiLCJsYXN0IiwiZmlsdGVyIiwi5oKj6ICF77y/5bGF5L2P5ZywIiwiZmlsdGVyZWRaZW5rb2t1UGNyIiwiZmlsdGVyZWRPa2F5YW1hUGNyIiwi6ZuG6KiI5pmC54K5X+W5tOaciOaXpSIsImFjY3UiLCJmaWx0ZXJlZFplbmtva3VEZWFkIiwiZmlsdGVyZWRaZW5rb2t1RGlzIiwiZGF0YSIsIm1vdW50ZWQiLCJjYXNoIiwiZ2V0X2NzdiIsInNldEtlbkRldGFpbHMiLCJzZXRLZW5QY3IiLCJzZXRLZW5VY2hpd2FrZSIsInNldEtlbkRlYWQiLCJzZXRLZW5JcnlvdSIsInNldFplbmtva3UiLCJsYXN0dXBkYXRhIiwibWV0aG9kcyIsIm5hdmlnYXRvciIsInNlcnZpY2VXb3JrZXIiLCJnZXRSZWdpc3RyYXRpb25zIiwidGhlbiIsInJlZ2lzdHJhdGlvbnMiLCJyZWdpc3RyYXRpb24iLCJ1bnJlZ2lzdGVyIiwicmVzcG9uc2UiLCJjYXRjaCIsImNvbnNvbGUiLCJsb2ciLCIkc3RvcmUiLCJjb21taXQiLCJ1cmwiLCJjb2wiLCJ0byIsInJlc3BvbnNlVHlwZSIsImJ1ZmZlciIsIkJ1ZmZlciIsImNzdiIsImNvbnZlcnQiLCJjb2x1bW5zIiwicXVvdGUiLCJkZWxpbWl0ZXIiLCJjYXN0Iiwib3V0cHV0IiwiZnJlZXplIiwiYUZ1bmN0aW9uIiwiSW5kZXhlZE9iamVjdCIsIklTX1JJR0hUIiwidGhhdCIsIm1lbW8iLCJzZWxmIiwicmlnaHQiLCJET01JdGVyYWJsZXMiLCJBcnJheUl0ZXJhdG9yTWV0aG9kcyIsIklURVJBVE9SIiwiVE9fU1RSSU5HX1RBRyIsIkFycmF5VmFsdWVzIiwidmFsdWVzIiwiQ09MTEVDVElPTl9OQU1FIiwiQ29sbGVjdGlvbiIsIkNvbGxlY3Rpb25Qcm90b3R5cGUiLCJNRVRIT0RfTkFNRSIsImNvcHlDb25zdHJ1Y3RvclByb3BlcnRpZXMiLCJOYXRpdmVTeW1ib2wiLCJFbXB0eVN0cmluZ0Rlc2NyaXB0aW9uU3RvcmUiLCJTeW1ib2xXcmFwcGVyIiwic3ltYm9sUHJvdG90eXBlIiwic3ltYm9sVG9TdHJpbmciLCJuYXRpdmUiLCJyZWdleHAiLCJkZXNjIiwidG9BYnNvbHV0ZUluZGV4IiwiYXJyYXlNZXRob2RIYXNTcGVjaWVzU3VwcG9ydCIsIkhBU19TUEVDSUVTX1NVUFBPUlQiLCJBQ0NFU1NPUlMiLCIwIiwiU1BFQ0lFUyIsIm5hdGl2ZVNsaWNlIiwibWF4IiwiTWF0aCIsIkNvbnN0cnVjdG9yIiwiayIsImZpbiIsIkNTU1J1bGVMaXN0IiwiQ1NTU3R5bGVEZWNsYXJhdGlvbiIsIkNTU1ZhbHVlTGlzdCIsIkNsaWVudFJlY3RMaXN0IiwiRE9NUmVjdExpc3QiLCJET01TdHJpbmdMaXN0IiwiRE9NVG9rZW5MaXN0IiwiRGF0YVRyYW5zZmVySXRlbUxpc3QiLCJGaWxlTGlzdCIsIkhUTUxBbGxDb2xsZWN0aW9uIiwiSFRNTENvbGxlY3Rpb24iLCJIVE1MRm9ybUVsZW1lbnQiLCJIVE1MU2VsZWN0RWxlbWVudCIsIk1lZGlhTGlzdCIsIk1pbWVUeXBlQXJyYXkiLCJOYW1lZE5vZGVNYXAiLCJOb2RlTGlzdCIsIlBhaW50UmVxdWVzdExpc3QiLCJQbHVnaW4iLCJQbHVnaW5BcnJheSIsIlNWR0xlbmd0aExpc3QiLCJTVkdOdW1iZXJMaXN0IiwiU1ZHUGF0aFNlZ0xpc3QiLCJTVkdQb2ludExpc3QiLCJTVkdTdHJpbmdMaXN0IiwiU1ZHVHJhbnNmb3JtTGlzdCIsIlNvdXJjZUJ1ZmZlckxpc3QiLCJTdHlsZVNoZWV0TGlzdCIsIlRleHRUcmFja0N1ZUxpc3QiLCJUZXh0VHJhY2tMaXN0IiwiVG91Y2hMaXN0Il0sIm1hcHBpbmdzIjoicUdBQUEsSUFBSUEsRUFBa0IsRUFBUSxRQUMxQkMsRUFBNEIsRUFBUSxRQUE4Q0MsRUFFbEZDLEVBQVcsR0FBR0EsU0FFZEMsRUFBK0IsaUJBQVZDLFFBQXNCQSxRQUFVQyxPQUFPQyxvQkFDNURELE9BQU9DLG9CQUFvQkYsUUFBVSxHQUVyQ0csRUFBaUIsU0FBVUMsR0FDN0IsSUFDRSxPQUFPUixFQUEwQlEsR0FDakMsTUFBT0MsR0FDUCxPQUFPTixFQUFZTyxVQUt2QkMsRUFBT0MsUUFBUVgsRUFBSSxTQUE2Qk8sR0FDOUMsT0FBT0wsR0FBb0MsbUJBQXJCRCxFQUFTVyxLQUFLTCxHQUNoQ0QsRUFBZUMsR0FDZlIsRUFBMEJELEVBQWdCUyxNLG9DQ25CaEQsSUFBSU0sRUFBSSxFQUFRLFFBQ1pDLEVBQVUsRUFBUSxRQUE2QkMsS0FDL0NDLEVBQXNCLEVBQVEsUUFDOUJDLEVBQTBCLEVBQVEsUUFFbENDLEVBQWdCRixFQUFvQixVQUNwQ0csRUFBaUJGLEVBQXdCLFNBQVUsQ0FBRUcsRUFBRyxJQUk1RFAsRUFBRSxDQUFFUSxPQUFRLFFBQVNDLE9BQU8sRUFBTUMsUUFBU0wsSUFBa0JDLEdBQWtCLENBQzdFSyxPQUFRLFNBQWdCQyxHQUN0QixPQUFPWCxFQUFRWSxLQUFNRCxFQUFZRSxVQUFVQyxPQUFRRCxVQUFVQyxPQUFTLEVBQUlELFVBQVUsUUFBS0UsTyxvQ0NaN0YsSUFBSUMsRUFBVyxFQUFRLFFBQ25CQyxFQUFXLEVBQVEsUUFDbkJDLEVBQVEsRUFBUSxRQUNoQkMsRUFBUSxFQUFRLFFBRWhCQyxFQUFZLFdBQ1pDLEVBQWtCQyxPQUFPQyxVQUN6QkMsRUFBaUJILEVBQWdCRCxHQUVqQ0ssRUFBY1AsR0FBTSxXQUFjLE1BQTJELFFBQXBETSxFQUFlMUIsS0FBSyxDQUFFNEIsT0FBUSxJQUFLUCxNQUFPLFNBRW5GUSxFQUFpQkgsRUFBZUksTUFBUVIsR0FJeENLLEdBQWVFLElBQ2pCWCxFQUFTTSxPQUFPQyxVQUFXSCxHQUFXLFdBQ3BDLElBQUlTLEVBQUlaLEVBQVNMLE1BQ2JrQixFQUFJQyxPQUFPRixFQUFFSCxRQUNiTSxFQUFLSCxFQUFFVixNQUNQakMsRUFBSTZDLFlBQWNoQixJQUFQaUIsR0FBb0JILGFBQWFQLFVBQVksVUFBV0QsR0FBbUJGLEVBQU1yQixLQUFLK0IsR0FBS0csR0FDMUcsTUFBTyxJQUFNRixFQUFJLElBQU01QyxJQUN0QixDQUFFK0MsUUFBUSxLLG9DQ3RCZixJQUFJQyxFQUFTLEVBQVEsUUFBaUNBLE9BQ2xEQyxFQUFzQixFQUFRLFFBQzlCQyxFQUFpQixFQUFRLFFBRXpCQyxFQUFrQixrQkFDbEJDLEVBQW1CSCxFQUFvQkksSUFDdkNDLEVBQW1CTCxFQUFvQk0sVUFBVUosR0FJckRELEVBQWVMLE9BQVEsVUFBVSxTQUFVVyxHQUN6Q0osRUFBaUIxQixLQUFNLENBQ3JCK0IsS0FBTU4sRUFDTk8sT0FBUWIsT0FBT1csR0FDZkcsTUFBTyxPQUlSLFdBQ0QsSUFHSUMsRUFIQUMsRUFBUVAsRUFBaUI1QixNQUN6QmdDLEVBQVNHLEVBQU1ILE9BQ2ZDLEVBQVFFLEVBQU1GLE1BRWxCLE9BQUlBLEdBQVNELEVBQU85QixPQUFlLENBQUVrQyxXQUFPakMsRUFBV2tDLE1BQU0sSUFDN0RILEVBQVFaLEVBQU9VLEVBQVFDLEdBQ3ZCRSxFQUFNRixPQUFTQyxFQUFNaEMsT0FDZCxDQUFFa0MsTUFBT0YsRUFBT0csTUFBTSxRLG9DQzFCL0IsSUFBSUMsRUFBTyxFQUFRLFFBQ2ZDLEVBQVcsRUFBUSxRQUNuQkMsRUFBK0IsRUFBUSxRQUN2Q0MsRUFBd0IsRUFBUSxRQUNoQ0MsRUFBVyxFQUFRLFFBQ25CQyxFQUFpQixFQUFRLFFBQ3pCQyxFQUFvQixFQUFRLFFBSWhDNUQsRUFBT0MsUUFBVSxTQUFjNEQsR0FDN0IsSUFPSTNDLEVBQVE0QyxFQUFRQyxFQUFNQyxFQUFVQyxFQUFNYixFQVB0Q2MsRUFBSVgsRUFBU00sR0FDYk0sRUFBbUIsbUJBQVJuRCxLQUFxQkEsS0FBT29ELE1BQ3ZDQyxFQUFrQnBELFVBQVVDLE9BQzVCb0QsRUFBUUQsRUFBa0IsRUFBSXBELFVBQVUsUUFBS0UsRUFDN0NvRCxPQUFvQnBELElBQVZtRCxFQUNWRSxFQUFpQlosRUFBa0JNLEdBQ25DakIsRUFBUSxFQUlaLEdBRklzQixJQUFTRCxFQUFRaEIsRUFBS2dCLEVBQU9ELEVBQWtCLEVBQUlwRCxVQUFVLFFBQUtFLEVBQVcsU0FFM0RBLEdBQWxCcUQsR0FBaUNMLEdBQUtDLE9BQVNYLEVBQXNCZSxHQVd2RSxJQUZBdEQsRUFBU3dDLEVBQVNRLEVBQUVoRCxRQUNwQjRDLEVBQVMsSUFBSUssRUFBRWpELEdBQ1RBLEVBQVMrQixFQUFPQSxJQUNwQkcsRUFBUW1CLEVBQVVELEVBQU1KLEVBQUVqQixHQUFRQSxHQUFTaUIsRUFBRWpCLEdBQzdDVSxFQUFlRyxFQUFRYixFQUFPRyxRQVRoQyxJQUhBWSxFQUFXUSxFQUFldEUsS0FBS2dFLEdBQy9CRCxFQUFPRCxFQUFTQyxLQUNoQkgsRUFBUyxJQUFJSyxJQUNMSixFQUFPRSxFQUFLL0QsS0FBSzhELElBQVdYLEtBQU1KLElBQ3hDRyxFQUFRbUIsRUFBVWYsRUFBNkJRLEVBQVVNLEVBQU8sQ0FBQ1AsRUFBS1gsTUFBT0gsSUFBUSxHQUFRYyxFQUFLWCxNQUNsR08sRUFBZUcsRUFBUWIsRUFBT0csR0FXbEMsT0FEQVUsRUFBTzVDLE9BQVMrQixFQUNUYSxJLHVJQ3BDTCxlQUFvQixVQUFoQixlQUFXLEcsU0FDVlcsTUFBTSxRLEdBQ0pBLE1BQU0sTyxHQUdOQSxNQUFNLE8sR0FHTkEsTUFBTSxPLEdBR05BLE1BQU0sTyxHQUdOQSxNQUFNLE8sR0FDSkEsTUFBTSxTLEVBQ1QsZUFBb0MsUUFBOUJBLE1BQU0sYUFBWSxTQUFLLEcsR0FFdEJBLE1BQU0sUSxFQUFzQixlQUFJLG1CLEdBQ2hDQSxNQUFNLE8sU0FLUEEsTUFBTSxVLHNJQTFCcEIsZUEyQk0sWUExQkosZUFBb0IsR0FBVkMsTUFBTSxNQUNoQixFQUN3QixFQUFBQyxxQixpQkFBeEIsZUFzQk0sTUF0Qk4sRUFzQk0sQ0FyQkosZUFFTSxNQUZOLEVBRU0sQ0FESixlQUF5RSxHQUEvREYsTUFBTSxPQUFPRyxJQUFJLE9BQU9DLE9BQU8sU0FBVUMsU0FBVSxFQUFBQSxVLHVCQUUvRCxlQUVNLE1BRk4sRUFFTSxDQURKLGVBQWtFLEdBQXhETCxNQUFNLE9BQU9HLElBQUksTUFBTUMsT0FBTyxPQUFRQyxTQUFVLEVBQUFDLE0sdUJBRTVELGVBRU0sTUFGTixFQUVNLENBREosZUFBbUUsR0FBekROLE1BQU0sT0FBT0csSUFBSSxTQUFTQyxPQUFPLE1BQU9DLFNBQVUsRUFBQUUsSyx1QkFFOUQsZUFFTSxNQUZOLEVBRU0sQ0FESixlQUE2RSxHQUFuRVAsTUFBTSxPQUFPRyxJQUFJLE9BQU9DLE9BQU8sWUFBYUMsU0FBVSxFQUFBRyxXLHVCQUVsRSxlQVFNLE1BUk4sRUFRTSxDQVBKLGVBTU0sTUFOTixFQU1NLENBTEosRUFDQSxlQUFzRixTQUEvRWxDLEtBQUssUUFBU21DLEdBQUksRUFBQUMsVUFBV25ELEtBQUssTUFBTXlDLE1BQU0sYUFBYVcsUUFBUSxXLGVBQVksZUFBb0QsU0FBNUNDLElBQUssRUFBQUYsVUFBV1YsTUFBTSxhQUFZLEtBQUUsV0FDaEksZUFFTSxNQUZOLEVBRU0sQyw4QkFGYyxFQUFBYSxLQUFLLElBQUMsZUFBRSxFQUFBQyxLQUFHLEdBQUUsRUFDL0IsZUFBNkIsSUFBN0IsRUFBNkIsZUFBWixFQUFBQyxRQUFNLGEsaUJBS2pDLGVBQWlDLE1BQWpDLFMsc0JDdEJKLE9BQU9DLE9BQVMsRUFDaEIsT0FBT0MsVUFBWSxrQkFFSixxQixvQ0NSZixXLG1CQ0VBMUYsRUFBT0MsUUFBVSxpRCx1QkNGakIsSUFBSTBGLEVBQXlCLEVBQVEsUUFDakNDLEVBQWMsRUFBUSxRQUV0QkMsRUFBYSxJQUFNRCxFQUFjLElBQ2pDRSxFQUFRcEUsT0FBTyxJQUFNbUUsRUFBYUEsRUFBYSxLQUMvQ0UsRUFBUXJFLE9BQU9tRSxFQUFhQSxFQUFhLE1BR3pDRyxFQUFlLFNBQVVDLEdBQzNCLE9BQU8sU0FBVUMsR0FDZixJQUFJbEQsRUFBU2IsT0FBT3dELEVBQXVCTyxJQUczQyxPQUZXLEVBQVBELElBQVVqRCxFQUFTQSxFQUFPbUQsUUFBUUwsRUFBTyxLQUNsQyxFQUFQRyxJQUFVakQsRUFBU0EsRUFBT21ELFFBQVFKLEVBQU8sS0FDdEMvQyxJQUlYaEQsRUFBT0MsUUFBVSxDQUdmbUcsTUFBT0osRUFBYSxHQUdwQkssSUFBS0wsRUFBYSxHQUdsQk0sS0FBTU4sRUFBYSxLLHFCQzFCckIsSUFBSU8sRUFBVyxFQUFRLFFBQ25CQyxFQUFpQixFQUFRLFFBRzdCeEcsRUFBT0MsUUFBVSxTQUFVaUcsRUFBT08sRUFBT0MsR0FDdkMsSUFBSUMsRUFBV0MsRUFVZixPQVBFSixHQUUwQyxtQkFBbENHLEVBQVlGLEVBQU1JLGNBQzFCRixJQUFjRCxHQUNkSCxFQUFTSyxFQUFxQkQsRUFBVWhGLFlBQ3hDaUYsSUFBdUJGLEVBQVEvRSxXQUMvQjZFLEVBQWVOLEVBQU9VLEdBQ2pCVixJLHVCQ2ZULElBQUlZLEVBQU8sRUFBUSxRQUNmQyxFQUFNLEVBQVEsUUFDZEMsRUFBK0IsRUFBUSxRQUN2Q0MsRUFBaUIsRUFBUSxRQUF1QzNILEVBRXBFVSxFQUFPQyxRQUFVLFNBQVVpSCxHQUN6QixJQUFJQyxFQUFTTCxFQUFLSyxTQUFXTCxFQUFLSyxPQUFTLElBQ3RDSixFQUFJSSxFQUFRRCxJQUFPRCxFQUFlRSxFQUFRRCxFQUFNLENBQ25EOUQsTUFBTzRELEVBQTZCMUgsRUFBRTRILE8scURDTmpDekMsTUFBTSxTLEdBQ0hBLE1BQU0sYSxHQUVMQSxNQUFNLFEsRUFDYSxlQUFJLG1CLEdBQ3ZCQSxNQUFNLE8sR0FHTkEsTUFBTSxRLEVBQ2EsZUFBSSxtQixHQUN2QkEsTUFBTSxPLEdBSU5BLE1BQU0sUSxFQUNXLGVBQUksbUIsR0FDckJBLE1BQU0sTyxnREFqQmpCLGVBb0JPLGFBbkJMLGVBa0JNLE1BbEJOLEVBa0JNLENBakJKLGVBQXNDLE9BQXRDLEVBQXNDLGVBQVosRUFBQUcsS0FBRyxHQUM3QixlQUFzRixTQUEvRTdCLEtBQUssUUFBU21DLEdBQUksRUFBQUMsVUFBV25ELEtBQUssTUFBTXlDLE1BQU0sYUFBYVcsUUFBUSxXLGVBQVksZUFBb0QsU0FBNUNDLElBQUssRUFBQUYsVUFBV1YsTUFBTSxhQUFZLEtBQUUsV0FDaEksZUFHTSxNQUhOLEVBR00sQyw4QkFGRCxFQUFBSyxTQUFTc0MsU0FBTyxHQUFHLEVBQ3RCLGVBQXNDLElBQXRDLEVBQXNDLGVBQXBCLEVBQUF0QyxTQUFTdUMsT0FBSyxLQUVwQyxlQUFvRSxTQUE3RHRFLEtBQUssUUFBU21DLEdBQUksRUFBQW9DLFVBQVd0RixLQUFLLE1BQU15QyxNQUFNLGMsZUFBZSxlQUFvRCxTQUE1Q1ksSUFBSyxFQUFBaUMsVUFBVzdDLE1BQU0sYUFBWSxLQUFFLFdBQzlHLGVBR00sTUFITixFQUdNLEMsOEJBRkQsRUFBQUssU0FBU3lDLFNBQU8sR0FBRyxFQUN0QixlQUFxQyxJQUFyQyxFQUFxQyxlQUFwQixFQUFBekMsU0FBUzBDLE9BQUssS0FFZixRQUFILEVBQUE1QyxLLGlCQUFiLGVBQXVHLFMsTUFBN0U3QixLQUFLLFNBQVMwQixNQUFNLE1BQU1yQixNQUFNLEtBQU0sUUFBSywrQkFBRSxFQUFBcUUsUUFBUUMsS0FBSSxxQixzQkFDdkYsZUFBb0UsU0FBN0QzRSxLQUFLLFFBQVNtQyxHQUFJLEVBQUF5QyxVQUFXM0YsS0FBSyxNQUFNeUMsTUFBTSxjLGVBQWUsZUFBb0QsU0FBNUNZLElBQUssRUFBQXNDLFVBQVdsRCxNQUFNLGFBQVksS0FBRSxXQUM5RyxlQUdNLE1BSE4sRUFHTSxDLDhCQUZGLEVBQUFLLFNBQVM4QyxTQUFPLEdBQUUsRUFDcEIsZUFBcUMsSUFBckMsRUFBcUMsZUFBcEIsRUFBQTlDLFNBQVMrQyxPQUFLLFNBUTFCLE9BQ2I3RixLQUFNLFdBQ044RixTQUFVLENBQ1IzQyxVQUFXLFdBQ1QsT0FBT25FLEtBQUs2RCxPQUFTLFdBRXZCeUMsVUFBVyxXQUNULE9BQU90RyxLQUFLNkQsT0FBUyxXQUV2QjhDLFVBQVcsV0FDVCxPQUFPM0csS0FBSzZELE9BQVMsWUFHekJrRCxNQUFNLENBQ0puRCxJQUFJLENBQ0Y3QixLQUFNWixRQUVSMEMsT0FBTyxDQUNMOUIsS0FBTVosUUFFUjJDLFNBQVUsQ0FDUi9CLEtBQU1yRCxVLFVDMUNaLEVBQU8rRixPQUFTQSxFQUVELFUsa0NDTmYsSUFBSXRGLEVBQUksRUFBUSxRQUNaNkgsRUFBUyxFQUFRLFFBQ2pCQyxFQUFhLEVBQVEsUUFDckJDLEVBQVUsRUFBUSxRQUNsQkMsRUFBYyxFQUFRLFFBQ3RCQyxFQUFnQixFQUFRLFFBQ3hCQyxFQUFvQixFQUFRLFFBQzVCL0csRUFBUSxFQUFRLFFBQ2hCeUYsRUFBTSxFQUFRLFFBQ2R1QixFQUFVLEVBQVEsUUFDbEIvQixFQUFXLEVBQVEsUUFDbkJsRixFQUFXLEVBQVEsUUFDbkJrQyxFQUFXLEVBQVEsUUFDbkJuRSxFQUFrQixFQUFRLFFBQzFCbUosRUFBYyxFQUFRLFFBQ3RCQyxFQUEyQixFQUFRLFFBQ25DQyxFQUFxQixFQUFRLFFBQzdCQyxFQUFhLEVBQVEsUUFDckJDLEVBQTRCLEVBQVEsUUFDcENDLEVBQThCLEVBQVEsUUFDdENDLEVBQThCLEVBQVEsUUFDdENDLEVBQWlDLEVBQVEsUUFDekNDLEVBQXVCLEVBQVEsUUFDL0JDLEVBQTZCLEVBQVEsUUFDckNDLEVBQThCLEVBQVEsUUFDdEM3SCxFQUFXLEVBQVEsUUFDbkI4SCxFQUFTLEVBQVEsUUFDakJDLEVBQVksRUFBUSxRQUNwQkMsRUFBYSxFQUFRLFFBQ3JCQyxFQUFNLEVBQVEsUUFDZEMsRUFBa0IsRUFBUSxRQUMxQnRDLEVBQStCLEVBQVEsUUFDdkN1QyxFQUF3QixFQUFRLFFBQ2hDQyxFQUFpQixFQUFRLFFBQ3pCakgsRUFBc0IsRUFBUSxRQUM5QmtILEVBQVcsRUFBUSxRQUFnQ0MsUUFFbkRDLEVBQVNSLEVBQVUsVUFDbkJTLEVBQVMsU0FDVEMsRUFBWSxZQUNaQyxFQUFlUixFQUFnQixlQUMvQjVHLEVBQW1CSCxFQUFvQkksSUFDdkNDLEVBQW1CTCxFQUFvQk0sVUFBVStHLEdBQ2pERyxFQUFrQnJLLE9BQU9tSyxHQUN6QkcsRUFBVWhDLEVBQU9iLE9BQ2pCOEMsRUFBYWhDLEVBQVcsT0FBUSxhQUNoQ2lDLEVBQWlDcEIsRUFBK0J4SixFQUNoRTZLLEVBQXVCcEIsRUFBcUJ6SixFQUM1Q0QsRUFBNEJ1SixFQUE0QnRKLEVBQ3hEOEssRUFBNkJwQixFQUEyQjFKLEVBQ3hEK0ssRUFBYW5CLEVBQU8sV0FDcEJvQixFQUF5QnBCLEVBQU8sY0FDaENxQixHQUF5QnJCLEVBQU8sNkJBQ2hDc0IsR0FBeUJ0QixFQUFPLDZCQUNoQ3VCLEdBQXdCdkIsRUFBTyxPQUMvQndCLEdBQVUxQyxFQUFPMEMsUUFFakJDLElBQWNELEtBQVlBLEdBQVFiLEtBQWVhLEdBQVFiLEdBQVdlLFVBR3BFQyxHQUFzQjFDLEdBQWU3RyxHQUFNLFdBQzdDLE9BRVMsR0FGRm1ILEVBQW1CMEIsRUFBcUIsR0FBSSxJQUFLLENBQ3REVyxJQUFLLFdBQWMsT0FBT1gsRUFBcUJuSixLQUFNLElBQUssQ0FBRW9DLE1BQU8sSUFBSzJILE1BQ3RFQSxLQUNELFNBQVU3RyxFQUFHOEcsRUFBR0MsR0FDbkIsSUFBSUMsRUFBNEJoQixFQUErQkgsRUFBaUJpQixHQUM1RUUsVUFBa0NuQixFQUFnQmlCLEdBQ3REYixFQUFxQmpHLEVBQUc4RyxFQUFHQyxHQUN2QkMsR0FBNkJoSCxJQUFNNkYsR0FDckNJLEVBQXFCSixFQUFpQmlCLEVBQUdFLElBRXpDZixFQUVBZ0IsR0FBTyxTQUFVQyxFQUFLQyxHQUN4QixJQUFJQyxFQUFTakIsRUFBV2UsR0FBTzNDLEVBQW1CdUIsRUFBUUgsSUFPMUQsT0FOQW5ILEVBQWlCNEksRUFBUSxDQUN2QnZJLEtBQU02RyxFQUNOd0IsSUFBS0EsRUFDTEMsWUFBYUEsSUFFVmxELElBQWFtRCxFQUFPRCxZQUFjQSxHQUNoQ0MsR0FHTEMsR0FBV2xELEVBQW9CLFNBQVV4SSxHQUMzQyxNQUFvQixpQkFBTkEsR0FDWixTQUFVQSxHQUNaLE9BQU9ILE9BQU9HLGFBQWVtSyxHQUczQndCLEdBQWtCLFNBQXdCdEgsRUFBRzhHLEVBQUdDLEdBQzlDL0csSUFBTTZGLEdBQWlCeUIsR0FBZ0JsQixFQUF3QlUsRUFBR0MsR0FDdEU1SixFQUFTNkMsR0FDVCxJQUFJdUgsRUFBTWxELEVBQVl5QyxHQUFHLEdBRXpCLE9BREEzSixFQUFTNEosR0FDTGxFLEVBQUlzRCxFQUFZb0IsSUFDYlIsRUFBV1MsWUFJVjNFLEVBQUk3QyxFQUFHeUYsSUFBV3pGLEVBQUV5RixHQUFROEIsS0FBTXZILEVBQUV5RixHQUFROEIsSUFBTyxHQUN2RFIsRUFBYXhDLEVBQW1Cd0MsRUFBWSxDQUFFUyxXQUFZbEQsRUFBeUIsR0FBRyxPQUpqRnpCLEVBQUk3QyxFQUFHeUYsSUFBU1EsRUFBcUJqRyxFQUFHeUYsRUFBUW5CLEVBQXlCLEVBQUcsS0FDakZ0RSxFQUFFeUYsR0FBUThCLElBQU8sR0FJVlosR0FBb0IzRyxFQUFHdUgsRUFBS1IsSUFDOUJkLEVBQXFCakcsRUFBR3VILEVBQUtSLElBR3BDVSxHQUFvQixTQUEwQnpILEVBQUcwSCxHQUNuRHZLLEVBQVM2QyxHQUNULElBQUkySCxFQUFhek0sRUFBZ0J3TSxHQUM3QkUsRUFBT3BELEVBQVdtRCxHQUFZRSxPQUFPQyxHQUF1QkgsSUFJaEUsT0FIQXBDLEVBQVNxQyxHQUFNLFNBQVVMLEdBQ2xCdEQsSUFBZThELEdBQXNCL0wsS0FBSzJMLEVBQVlKLElBQU1ELEdBQWdCdEgsRUFBR3VILEVBQUtJLEVBQVdKLE9BRS9GdkgsR0FHTGdJLEdBQVUsU0FBZ0JoSSxFQUFHMEgsR0FDL0IsWUFBc0J6SyxJQUFmeUssRUFBMkJuRCxFQUFtQnZFLEdBQUt5SCxHQUFrQmxELEVBQW1CdkUsR0FBSTBILElBR2pHSyxHQUF3QixTQUE4QkUsR0FDeEQsSUFBSW5CLEVBQUl6QyxFQUFZNEQsR0FBRyxHQUNuQlQsRUFBYXRCLEVBQTJCbEssS0FBS2MsS0FBTWdLLEdBQ3ZELFFBQUloSyxPQUFTK0ksR0FBbUJoRCxFQUFJc0QsRUFBWVcsS0FBT2pFLEVBQUl1RCxFQUF3QlUsUUFDNUVVLElBQWUzRSxFQUFJL0YsS0FBTWdLLEtBQU9qRSxFQUFJc0QsRUFBWVcsSUFBTWpFLEVBQUkvRixLQUFNMkksSUFBVzNJLEtBQUsySSxHQUFRcUIsS0FBS1UsSUFHbEdVLEdBQTRCLFNBQWtDbEksRUFBRzhHLEdBQ25FLElBQUluTCxFQUFLVCxFQUFnQjhFLEdBQ3JCdUgsRUFBTWxELEVBQVl5QyxHQUFHLEdBQ3pCLEdBQUluTCxJQUFPa0ssSUFBbUJoRCxFQUFJc0QsRUFBWW9CLElBQVMxRSxFQUFJdUQsRUFBd0JtQixHQUFuRixDQUNBLElBQUlZLEVBQWFuQyxFQUErQnJLLEVBQUk0TCxHQUlwRCxPQUhJWSxJQUFjdEYsRUFBSXNELEVBQVlvQixJQUFVMUUsRUFBSWxILEVBQUk4SixJQUFXOUosRUFBRzhKLEdBQVE4QixLQUN4RVksRUFBV1gsWUFBYSxHQUVuQlcsSUFHTEMsR0FBdUIsU0FBNkJwSSxHQUN0RCxJQUFJcUksRUFBUWxOLEVBQTBCRCxFQUFnQjhFLElBQ2xESixFQUFTLEdBSWIsT0FIQTJGLEVBQVM4QyxHQUFPLFNBQVVkLEdBQ25CMUUsRUFBSXNELEVBQVlvQixJQUFTMUUsRUFBSXFDLEVBQVlxQyxJQUFNM0gsRUFBTzRELEtBQUsrRCxNQUUzRDNILEdBR0xrSSxHQUF5QixTQUErQjlILEdBQzFELElBQUlzSSxFQUFzQnRJLElBQU02RixFQUM1QndDLEVBQVFsTixFQUEwQm1OLEVBQXNCbEMsRUFBeUJsTCxFQUFnQjhFLElBQ2pHSixFQUFTLEdBTWIsT0FMQTJGLEVBQVM4QyxHQUFPLFNBQVVkLElBQ3BCMUUsRUFBSXNELEVBQVlvQixJQUFVZSxJQUF1QnpGLEVBQUlnRCxFQUFpQjBCLElBQ3hFM0gsRUFBTzRELEtBQUsyQyxFQUFXb0IsT0FHcEIzSCxHQWtIVCxHQTdHS3NFLElBQ0g0QixFQUFVLFdBQ1IsR0FBSWhKLGdCQUFnQmdKLEVBQVMsTUFBTXlDLFVBQVUsK0JBQzdDLElBQUlwQixFQUFlcEssVUFBVUMsYUFBMkJDLElBQWpCRixVQUFVLEdBQStCa0IsT0FBT2xCLFVBQVUsU0FBN0JFLEVBQ2hFaUssRUFBTS9CLEVBQUlnQyxHQUNWcUIsRUFBUyxTQUFVdEosR0FDakJwQyxPQUFTK0ksR0FBaUIyQyxFQUFPeE0sS0FBS29LLEVBQXdCbEgsR0FDOUQyRCxFQUFJL0YsS0FBTTJJLElBQVc1QyxFQUFJL0YsS0FBSzJJLEdBQVN5QixLQUFNcEssS0FBSzJJLEdBQVF5QixJQUFPLEdBQ3JFUCxHQUFvQjdKLEtBQU1vSyxFQUFLNUMsRUFBeUIsRUFBR3BGLEtBRzdELE9BREkrRSxHQUFld0MsSUFBWUUsR0FBb0JkLEVBQWlCcUIsRUFBSyxDQUFFdUIsY0FBYyxFQUFNaEssSUFBSytKLElBQzdGdkIsR0FBS0MsRUFBS0MsSUFHbkJqSyxFQUFTNEksRUFBUUgsR0FBWSxZQUFZLFdBQ3ZDLE9BQU9qSCxFQUFpQjVCLE1BQU1vSyxPQUdoQ2hLLEVBQVM0SSxFQUFTLGlCQUFpQixTQUFVcUIsR0FDM0MsT0FBT0YsR0FBSzlCLEVBQUlnQyxHQUFjQSxNQUdoQ3JDLEVBQTJCMUosRUFBSTJNLEdBQy9CbEQsRUFBcUJ6SixFQUFJa00sR0FDekIxQyxFQUErQnhKLEVBQUk4TSxHQUNuQ3pELEVBQTBCckosRUFBSXNKLEVBQTRCdEosRUFBSWdOLEdBQzlEekQsRUFBNEJ2SixFQUFJME0sR0FFaENoRixFQUE2QjFILEVBQUksU0FBVTBDLEdBQ3pDLE9BQU9tSixHQUFLN0IsRUFBZ0J0SCxHQUFPQSxJQUdqQ21HLElBRUZnQyxFQUFxQkgsRUFBUUgsR0FBWSxjQUFlLENBQ3REOEMsY0FBYyxFQUNkN0IsSUFBSyxXQUNILE9BQU9sSSxFQUFpQjVCLE1BQU1xSyxlQUc3Qm5ELEdBQ0g5RyxFQUFTMkksRUFBaUIsdUJBQXdCa0MsR0FBdUIsQ0FBRTVKLFFBQVEsTUFLekZsQyxFQUFFLENBQUU2SCxRQUFRLEVBQU1tRCxNQUFNLEVBQU10SyxRQUFTdUgsRUFBZXdFLE1BQU94RSxHQUFpQixDQUM1RWpCLE9BQVE2QyxJQUdWUCxFQUFTZixFQUFXK0IsS0FBd0IsU0FBVXpJLEdBQ3BEdUgsRUFBc0J2SCxNQUd4QjdCLEVBQUUsQ0FBRVEsT0FBUWlKLEVBQVFpRCxNQUFNLEVBQU1oTSxRQUFTdUgsR0FBaUIsQ0FHeEQsSUFBTyxTQUFVcUQsR0FDZixJQUFJekksRUFBU2IsT0FBT3NKLEdBQ3BCLEdBQUkxRSxFQUFJd0QsR0FBd0J2SCxHQUFTLE9BQU91SCxHQUF1QnZILEdBQ3ZFLElBQUlzSSxFQUFTdEIsRUFBUWhILEdBR3JCLE9BRkF1SCxHQUF1QnZILEdBQVVzSSxFQUNqQ2QsR0FBdUJjLEdBQVV0SSxFQUMxQnNJLEdBSVR3QixPQUFRLFNBQWdCQyxHQUN0QixJQUFLeEIsR0FBU3dCLEdBQU0sTUFBTU4sVUFBVU0sRUFBTSxvQkFDMUMsR0FBSWhHLEVBQUl5RCxHQUF3QnVDLEdBQU0sT0FBT3ZDLEdBQXVCdUMsSUFFdEVDLFVBQVcsV0FBY3JDLElBQWEsR0FDdENzQyxVQUFXLFdBQWN0QyxJQUFhLEtBR3hDeEssRUFBRSxDQUFFUSxPQUFRLFNBQVVrTSxNQUFNLEVBQU1oTSxRQUFTdUgsRUFBZXdFLE1BQU96RSxHQUFlLENBRzlFK0UsT0FBUWhCLEdBR1JqRixlQUFnQnVFLEdBR2hCMkIsaUJBQWtCeEIsR0FHbEJ5Qix5QkFBMEJoQixLQUc1QmpNLEVBQUUsQ0FBRVEsT0FBUSxTQUFVa00sTUFBTSxFQUFNaE0sUUFBU3VILEdBQWlCLENBRzFEekksb0JBQXFCMk0sR0FHckJlLHNCQUF1QnJCLEtBS3pCN0wsRUFBRSxDQUFFUSxPQUFRLFNBQVVrTSxNQUFNLEVBQU1oTSxPQUFRUyxHQUFNLFdBQWN1SCxFQUE0QnZKLEVBQUUsT0FBVSxDQUNwRytOLHNCQUF1QixTQUErQnhOLEdBQ3BELE9BQU9nSixFQUE0QnZKLEVBQUVpRSxFQUFTMUQsT0FNOUNvSyxFQUFZLENBQ2QsSUFBSXFELElBQXlCbEYsR0FBaUI5RyxHQUFNLFdBQ2xELElBQUlnSyxFQUFTdEIsSUFFYixNQUErQixVQUF4QkMsRUFBVyxDQUFDcUIsS0FFZSxNQUE3QnJCLEVBQVcsQ0FBRWMsRUFBR08sS0FFYyxNQUE5QnJCLEVBQVd2SyxPQUFPNEwsT0FHekJuTCxFQUFFLENBQUVRLE9BQVEsT0FBUWtNLE1BQU0sRUFBTWhNLE9BQVF5TSxJQUF5QixDQUUvREMsVUFBVyxTQUFtQjFOLEVBQUkyTixFQUFVQyxHQUMxQyxJQUVJQyxFQUZBQyxFQUFPLENBQUM5TixHQUNSb0QsRUFBUSxFQUVaLE1BQU9oQyxVQUFVQyxPQUFTK0IsRUFBTzBLLEVBQUtqRyxLQUFLekcsVUFBVWdDLE1BRXJELEdBREF5SyxFQUFZRixHQUNQakgsRUFBU2lILFNBQW9Cck0sSUFBUHRCLEtBQW9CMEwsR0FBUzFMLEdBTXhELE9BTEt5SSxFQUFRa0YsS0FBV0EsRUFBVyxTQUFVL0IsRUFBS3JJLEdBRWhELEdBRHdCLG1CQUFic0ssSUFBeUJ0SyxFQUFRc0ssRUFBVXhOLEtBQUtjLEtBQU15SyxFQUFLckksS0FDakVtSSxHQUFTbkksR0FBUSxPQUFPQSxJQUUvQnVLLEVBQUssR0FBS0gsRUFDSHZELEVBQVcyRCxNQUFNLEtBQU1ELE1BTy9CM0QsRUFBUUgsR0FBV0MsSUFDdEJiLEVBQTRCZSxFQUFRSCxHQUFZQyxFQUFjRSxFQUFRSCxHQUFXZ0UsU0FJbkZyRSxFQUFlUSxFQUFTSixHQUV4QlIsRUFBV08sSUFBVSxHLHFCQ3RUckIsSUFBSXhKLEVBQUksRUFBUSxRQUNaMk4sRUFBTyxFQUFRLFFBQ2ZDLEVBQThCLEVBQVEsUUFFdENDLEdBQXVCRCxHQUE0QixTQUFVRSxHQUMvRDdKLE1BQU0wSixLQUFLRyxNQUtiOU4sRUFBRSxDQUFFUSxPQUFRLFFBQVNrTSxNQUFNLEVBQU1oTSxPQUFRbU4sR0FBdUIsQ0FDOURGLEtBQU1BLEsseURDVlIsSUFBSTNGLEVBQWMsRUFBUSxRQUN0QkgsRUFBUyxFQUFRLFFBQ2pCa0csRUFBVyxFQUFRLFFBQ25COU0sRUFBVyxFQUFRLFFBQ25CMkYsRUFBTSxFQUFRLFFBQ2RvSCxFQUFVLEVBQVEsUUFDbEJDLEVBQW9CLEVBQVEsUUFDNUI3RixFQUFjLEVBQVEsUUFDdEJqSCxFQUFRLEVBQVEsUUFDaEI0TCxFQUFTLEVBQVEsUUFDakJ2TixFQUFzQixFQUFRLFFBQThDTCxFQUM1RThOLEVBQTJCLEVBQVEsUUFBbUQ5TixFQUN0RjJILEVBQWlCLEVBQVEsUUFBdUMzSCxFQUNoRWdILEVBQU8sRUFBUSxRQUE0QkEsS0FFM0MrSCxFQUFTLFNBQ1RDLEVBQWV0RyxFQUFPcUcsR0FDdEJFLEVBQWtCRCxFQUFhM00sVUFHL0I2TSxFQUFpQkwsRUFBUWpCLEVBQU9xQixLQUFxQkYsRUFJckRJLEVBQVcsU0FBVUMsR0FDdkIsSUFDSUMsRUFBT0MsRUFBT0MsRUFBT0MsRUFBU0MsRUFBUTdOLEVBQVErQixFQUFPK0wsRUFEckRuUCxFQUFLMEksRUFBWW1HLEdBQVUsR0FFL0IsR0FBaUIsaUJBQU43TyxHQUFrQkEsRUFBR3FCLE9BQVMsRUFHdkMsR0FGQXJCLEVBQUt5RyxFQUFLekcsR0FDVjhPLEVBQVE5TyxFQUFHb1AsV0FBVyxHQUNSLEtBQVZOLEdBQTBCLEtBQVZBLEdBRWxCLEdBREFDLEVBQVEvTyxFQUFHb1AsV0FBVyxHQUNSLEtBQVZMLEdBQTBCLE1BQVZBLEVBQWUsT0FBT00sU0FDckMsR0FBYyxLQUFWUCxFQUFjLENBQ3ZCLE9BQVE5TyxFQUFHb1AsV0FBVyxJQUNwQixLQUFLLEdBQUksS0FBSyxHQUFJSixFQUFRLEVBQUdDLEVBQVUsR0FBSSxNQUMzQyxLQUFLLEdBQUksS0FBSyxJQUFLRCxFQUFRLEVBQUdDLEVBQVUsR0FBSSxNQUM1QyxRQUFTLE9BQVFqUCxFQUluQixJQUZBa1AsRUFBU2xQLEVBQUdFLE1BQU0sR0FDbEJtQixFQUFTNk4sRUFBTzdOLE9BQ1grQixFQUFRLEVBQUdBLEVBQVEvQixFQUFRK0IsSUFJOUIsR0FIQStMLEVBQU9ELEVBQU9FLFdBQVdoTSxHQUdyQitMLEVBQU8sSUFBTUEsRUFBT0YsRUFBUyxPQUFPSSxJQUN4QyxPQUFPQyxTQUFTSixFQUFRRixHQUU1QixPQUFRaFAsR0FLWixHQUFJcU8sRUFBU0csR0FBU0MsRUFBYSxVQUFZQSxFQUFhLFFBQVVBLEVBQWEsU0FBVSxDQVMzRixJQVJBLElBY3FCN0MsRUFkakIyRCxFQUFnQixTQUFnQmhNLEdBQ2xDLElBQUl2RCxFQUFLb0IsVUFBVUMsT0FBUyxFQUFJLEVBQUlrQyxFQUNoQ3FELEVBQVF6RixLQUNaLE9BQU95RixhQUFpQjJJLElBRWxCWixFQUFpQmxOLEdBQU0sV0FBY2lOLEVBQWdCVixRQUFRM04sS0FBS3VHLE1BQWEwSCxFQUFRMUgsSUFBVTRILEdBQ2pHRCxFQUFrQixJQUFJRSxFQUFhRyxFQUFTNU8sSUFBTTRHLEVBQU8ySSxHQUFpQlgsRUFBUzVPLElBRWxGaU0sRUFBTzNELEVBQWN4SSxFQUFvQjJPLEdBQWdCLDZLQU1oRWUsTUFBTSxLQUFNQyxFQUFJLEVBQVF4RCxFQUFLNUssT0FBU29PLEVBQUdBLElBQ3JDdkksRUFBSXVILEVBQWM3QyxFQUFNSyxFQUFLd0QsTUFBUXZJLEVBQUlxSSxFQUFlM0QsSUFDMUR4RSxFQUFlbUksRUFBZTNELEVBQUsyQixFQUF5QmtCLEVBQWM3QyxJQUc5RTJELEVBQWN6TixVQUFZNE0sRUFDMUJBLEVBQWdCMUgsWUFBY3VJLEVBQzlCaE8sRUFBUzRHLEVBQVFxRyxFQUFRZSxLLDRDQzVFM0IsSUFBSWpILEVBQWMsRUFBUSxRQUN0QmxCLEVBQWlCLEVBQVEsUUFBdUMzSCxFQUVoRWlRLEVBQW9CQyxTQUFTN04sVUFDN0I4TixFQUE0QkYsRUFBa0JoUSxTQUM5Q21RLEVBQVMsd0JBQ1R4SSxFQUFPLE9BSVBpQixLQUFpQmpCLEtBQVFxSSxJQUMzQnRJLEVBQWVzSSxFQUFtQnJJLEVBQU0sQ0FDdEN5RixjQUFjLEVBQ2Q3QixJQUFLLFdBQ0gsSUFDRSxPQUFPMkUsRUFBMEJ2UCxLQUFLYyxNQUFNMk8sTUFBTUQsR0FBUSxHQUMxRCxNQUFPNVAsR0FDUCxNQUFPLFEsd0tDakJBLFNBQVM4UCxFQUFrQkMsRUFBS0MsSUFDbEMsTUFBUEEsR0FBZUEsRUFBTUQsRUFBSTNPLFVBQVE0TyxFQUFNRCxFQUFJM08sUUFFL0MsSUFBSyxJQUFJNk8sRUFBSSxFQUFHQyxFQUFPLElBQUk1TCxNQUFNMEwsR0FBTUMsRUFBSUQsRUFBS0MsSUFDOUNDLEVBQUtELEdBQUtGLEVBQUlFLEdBR2hCLE9BQU9DLEVDTk0sU0FBU0MsRUFBNEJDLEVBQUdDLEdBQ3JELEdBQUtELEVBQUwsQ0FDQSxHQUFpQixrQkFBTkEsRUFBZ0IsT0FBT0UsRUFBaUJGLEVBQUdDLEdBQ3RELElBQUlFLEVBQUkzUSxPQUFPaUMsVUFBVXBDLFNBQVNXLEtBQUtnUSxHQUFHblEsTUFBTSxHQUFJLEdBRXBELE1BRFUsV0FBTnNRLEdBQWtCSCxFQUFFckosY0FBYXdKLEVBQUlILEVBQUVySixZQUFZN0UsTUFDN0MsUUFBTnFPLEdBQXFCLFFBQU5BLEVBQW9Cak0sTUFBTTBKLEtBQUtvQyxHQUN4QyxjQUFORyxHQUFxQiwyQ0FBMkNDLEtBQUtELEdBQVdELEVBQWlCRixFQUFHQyxRQUF4RyxHQ05hLFNBQVNJLEVBQTJCTCxFQUFHTSxHQUNwRCxJQUFJM1EsRUFFSixHQUFzQixxQkFBWHNILFFBQWdELE1BQXRCK0ksRUFBRS9JLE9BQU9uRCxVQUFtQixDQUMvRCxHQUFJSSxNQUFNa0UsUUFBUTRILEtBQU9yUSxFQUFLNFEsRUFBMkJQLEtBQU9NLEdBQWtCTixHQUF5QixrQkFBYkEsRUFBRWhQLE9BQXFCLENBQy9HckIsSUFBSXFRLEVBQUlyUSxHQUNaLElBQUlrUSxFQUFJLEVBRUpXLEVBQUksYUFFUixNQUFPLENBQ0xDLEVBQUdELEVBQ0hMLEVBQUcsV0FDRCxPQUFJTixHQUFLRyxFQUFFaFAsT0FBZSxDQUN4Qm1DLE1BQU0sR0FFRCxDQUNMQSxNQUFNLEVBQ05ELE1BQU84TSxFQUFFSCxPQUdiYSxFQUFHLFNBQVdDLEdBQ1osTUFBTUEsR0FFUnZSLEVBQUdvUixHQUlQLE1BQU0sSUFBSWpFLFVBQVUseUlBR3RCLElBRUlxRSxFQUZBQyxHQUFtQixFQUNuQkMsR0FBUyxFQUViLE1BQU8sQ0FDTEwsRUFBRyxXQUNEOVEsRUFBS3FRLEVBQUUvSSxPQUFPbkQsYUFFaEJxTSxFQUFHLFdBQ0QsSUFBSXRNLEVBQU9sRSxFQUFHb0UsT0FFZCxPQURBOE0sRUFBbUJoTixFQUFLVixLQUNqQlUsR0FFVDZNLEVBQUcsU0FBV0ssR0FDWkQsR0FBUyxFQUNURixFQUFNRyxHQUVSM1IsRUFBRyxXQUNELElBQ095UixHQUFvQyxNQUFoQmxSLEVBQUcsV0FBbUJBLEVBQUcsWUFEcEQsUUFHRSxHQUFJbVIsRUFBUSxNQUFNRixPLG1OZmRYLFFBQ2I5TyxLQUFNLFdBQ05rUCxXQUFZLENBQ1ZDLFNBQUEsT0FDQUMsU0FBQSxRQUVGdEosU0FBVSxDQUNSbkQsb0JBQXFCLFdBQ25CLE9BQU8zRCxLQUFLcVEsV0FBV25RLE9BQVMsR0FDaENGLEtBQUtzUSxXQUFXcFEsT0FBUyxHQUN6QkYsS0FBS3VRLE9BQU9yUSxPQUFTLEdBQ3JCRixLQUFLd1EsUUFBUXRRLE9BQVMsR0FDdEJGLEtBQUt5USxTQUFTdlEsT0FBUyxHQUN2QkYsS0FBSzBRLFFBQVF4USxPQUFTLEdBRXhCaUUsVUFBVyxXQUNULE1BQU8sV0FFVEcsSUFBSyxXQUNILE9BQU9xTSxPQUFPM1EsS0FBS3dRLFFBQVF4USxLQUFLd1EsUUFBUXRRLE9BQU8sR0FBRyxrQkFBb0J5USxPQUFPM1EsS0FBS3dRLFFBQVF4USxLQUFLd1EsUUFBUXRRLE9BQU8sR0FBRyxtQkFFbkhxRSxJQUFLLFdBQ0gsT0FBT29NLE9BQU8zUSxLQUFLeVEsU0FBU3pRLEtBQUt5USxTQUFTdlEsT0FBTyxHQUFHLFdBQWF5USxPQUFPM1EsS0FBS3lRLFNBQVN6USxLQUFLeVEsU0FBU3ZRLE9BQU8sR0FBRyxnQkFFaEhzRSxPQUFRLFdBRU4sSUFEQSxJQUFJb00sRUFBUzVRLEtBQUt3USxRQUFReFEsS0FBS3dRLFFBQVF0USxPQUFPLEdBQUcsVUFBVW1PLE1BQU0sS0FDeERVLEVBQUUsRUFBR0EsRUFBRSxFQUFHQSxJQUNLLEdBQWxCNkIsRUFBTzdCLEdBQUc3TyxTQUNaMFEsRUFBTzdCLEdBQUssSUFBTTZCLEVBQU83QixJQUc3QixJQUFNOEIsRUFBYSxJQUFNRCxFQUFPLEdBQUssSUFBTUEsRUFBTyxHQUFLLElBQU1BLEVBQU8sR0FBSyxNQUN6RSxPQUFPQyxHQUVUL00sU0FBVSxXQUVSLElBQU1nTixFQUFrQjlRLEtBQUswUSxRQUFRNVEsUUFBTyxTQUFDaVIsRUFBSUMsR0FBTCxPQUFZRCxFQUFNQyxFQUFLLGVBQWEsR0FDNUVqSCxFQUFJL0osS0FBS3NRLFdBQVd0USxLQUFLc1EsV0FBV3BRLE9BQU8sR0FBRyxTQUFTaUYsUUFBUSxJQUFJLEtBQ3ZFNEUsRUFBSUEsRUFBRTVFLFFBQVEsSUFBSSxLQUNsQjRFLEVBQUlBLEVBQUU1RSxRQUFRLElBQUksS0FDbEI0RSxFQUFJQSxFQUFFc0UsTUFBTSxLQUNaLElBQUssSUFBSVUsRUFBRSxFQUFHQSxFQUFFLEVBQUdBLElBQ0EsR0FBYmhGLEVBQUVnRixHQUFHN08sU0FDUDZKLEVBQUVnRixHQUFLLElBQU1oRixFQUFFZ0YsSUFHbkIsSUFBTTZCLEVBQVMsSUFBTTdHLEVBQUUsR0FBSyxJQUFNQSxFQUFFLEdBQUssSUFBTUEsRUFBRSxHQUFLLE1BQ2xEa0gsRUFBUWpSLEtBQUtrUixLQUFLN0MsTUFBTSxLQUc1QixPQUZBNEMsRUFBTyxJQUFJQSxFQUFLLEdBQUcsSUFBSUEsRUFBSyxHQUFHLElBQUlBLEVBQUssR0FBRyxNQUVwQyxDQUVMN0ssUUFBUzBLLEVBQWtCLElBQzNCdkssUUFBU3ZHLEtBQUtzUSxXQUFXcFEsT0FBUyxJQUNsQzBHLFFBQVM1RyxLQUFLc1EsV0FBV2EsUUFBTyxTQUFTSCxHQUN2QyxHQUFtQixPQUFmQSxFQUFLSSxPQUFpQixPQUFPLEtBQ2hDbFIsT0FBUyxJQUNabUcsTUFBTzRLLEVBQ1B6SyxNQUFPb0ssRUFDUC9KLE1BQU8rSixJQUdYNU0sSUFBSyxXQUNILElBQU1xTixFQUFxQnJSLEtBQUswUSxRQUFRNVEsUUFBTyxTQUFDaVIsRUFBSUMsR0FBTCxPQUFZRCxFQUFNQyxFQUFLLGtCQUFnQixHQUNoRk0sRUFBcUJ0UixLQUFLdVEsT0FBT1ksUUFBTyxTQUFTSCxHQUNuRCxHQUFxQixJQUFqQkEsRUFBS08sU0FBZ0IsT0FBTyxLQUU5QlgsRUFBU1UsRUFBbUJBLEVBQW1CcFIsT0FBTyxHQUFHcVIsU0FBU2xELE1BQU0sS0FDeEQsR0FBbEJ1QyxFQUFPLEdBQUcxUSxTQUNaMFEsRUFBTyxHQUFLLElBQU1BLEVBQU8sSUFFM0IsSUFBTUMsRUFBYSxJQUFJRCxFQUFPLEdBQUcsSUFBSUEsRUFBTyxHQUFHLElBQUlBLEVBQU8sR0FBRyxNQUN6REssRUFBUWpSLEtBQUtrUixLQUFLN0MsTUFBTSxLQUc1QixPQUZBNEMsRUFBTyxJQUFJQSxFQUFLLEdBQUcsSUFBSUEsRUFBSyxHQUFHLElBQUlBLEVBQUssR0FBRyxNQUVwQyxDQUNMN0ssUUFBU2lMLEVBQXFCLElBQzlCOUssUUFBU3ZHLEtBQUt1USxPQUFPelEsUUFBTyxTQUFVMFIsRUFBTXBQLEdBQzFDLE9BQU9vUCxFQUFPYixPQUFPdk8sRUFBTSxhQUMzQixHQUFLLElBQ1B3RSxRQUFTLFVBQ1RQLE1BQU80SyxFQUNQekssTUFBT3FLLEVBQ1BoSyxNQUFPLEtBR1g5QyxLQUFNLFdBR0osSUFGQSxJQUFNME4sRUFBc0J6UixLQUFLMFEsUUFBUTVRLFFBQU8sU0FBQ2lSLEVBQUlDLEdBQUwsT0FBWUQsRUFBTUMsRUFBSyxhQUFXLEdBQzlFSixFQUFTNVEsS0FBS3dRLFFBQVF4USxLQUFLd1EsUUFBUXRRLE9BQU8sR0FBRyxVQUFVbU8sTUFBTSxLQUN4RFUsRUFBRSxFQUFHQSxFQUFFLEVBQUdBLElBQ0ssR0FBbEI2QixFQUFPN0IsR0FBRzdPLFNBQ1owUSxFQUFPN0IsR0FBSyxJQUFNNkIsRUFBTzdCLElBRzdCLElBQU04QixFQUFhLElBQU1ELEVBQU8sR0FBSyxJQUFNQSxFQUFPLEdBQUssSUFBTUEsRUFBTyxHQUFLLE1BQ3JFSyxFQUFRalIsS0FBS2tSLEtBQUs3QyxNQUFNLEtBRzVCLE9BRkE0QyxFQUFPLElBQUlBLEVBQUssR0FBRyxJQUFJQSxFQUFLLEdBQUcsSUFBSUEsRUFBSyxHQUFHLE1BRXBDLENBQ0w3SyxRQUFRcUwsRUFBc0IsSUFDOUJsTCxRQUFTdkcsS0FBS3dRLFFBQVF4USxLQUFLd1EsUUFBUXRRLE9BQU8sR0FBRyxTQUFXLElBQ3hEMEcsUUFBUyxVQUNUUCxNQUFPNEssRUFDUHpLLE1BQU9xSyxFQUNQaEssTUFBTyxLQUdYNUMsVUFBVyxXQUdULElBRkEsSUFBTXlOLEVBQXFCMVIsS0FBSzBRLFFBQVE1USxRQUFPLFNBQUNpUixFQUFJQyxHQUFMLE9BQVlELEVBQU1DLEVBQUssWUFBVSxHQUM1RUosRUFBUzVRLEtBQUt3USxRQUFReFEsS0FBS3dRLFFBQVF0USxPQUFPLEdBQUcsVUFBVW1PLE1BQU0sS0FDeERVLEVBQUUsRUFBR0EsRUFBRSxFQUFHQSxJQUNLLEdBQWxCNkIsRUFBTzdCLEdBQUc3TyxTQUNaMFEsRUFBTzdCLEdBQUssSUFBTTZCLEVBQU83QixJQUc3QixJQUFNOEIsRUFBYSxJQUFNRCxFQUFPLEdBQUssSUFBTUEsRUFBTyxHQUFLLElBQU1BLEVBQU8sR0FBSyxNQUNyRUssRUFBUWpSLEtBQUtrUixLQUFLN0MsTUFBTSxLQUc1QixPQUZBNEMsRUFBTyxJQUFJQSxFQUFLLEdBQUcsSUFBSUEsRUFBSyxHQUFHLElBQUlBLEVBQUssR0FBRyxNQUVwQyxDQUNMN0ssUUFBUXNMLEVBQXFCLElBQzdCbkwsUUFBU3ZHLEtBQUt3USxRQUFReFEsS0FBS3dRLFFBQVF0USxPQUFPLEdBQUcsVUFBWSxJQUN6RDBHLFFBQVMsVUFDVFAsTUFBTzRLLEVBQ1B6SyxNQUFPcUssRUFDUGhLLE1BQU8sTUFJYjhLLEtBQU0sV0FDSixNQUFPLENBQ0x0QixXQUFZLEdBQ1pDLFdBQVksR0FDWkMsT0FBUSxHQUNSQyxRQUFTLEdBQ1RDLFNBQVUsR0FDVkMsUUFBUyxHQUNUUSxLQUFNLEtBSVZVLFFBQVMsV0FDUDVSLEtBQUs2UixPQUNZLEdBQWI3UixLQUFLNlIsU0FDUDdSLEtBQUs4UixRQUFRLG9FQUFtRSxFQUFLLE9BQU8sVUFBVzlSLEtBQUsrUixlQUM1Ry9SLEtBQUs4UixRQUFRLHVEQUFzRCxFQUFLLE9BQU8sVUFBVzlSLEtBQUtnUyxXQUMvRmhTLEtBQUs4UixRQUFRLDBFQUF5RSxFQUFLLE9BQU8sVUFBWTlSLEtBQUtpUyxnQkFDbkhqUyxLQUFLOFIsUUFBUSxzRUFBcUUsRUFBSyxPQUFPLFVBQVk5UixLQUFLa1MsWUFDL0dsUyxLQUFLOFIsUUFBUSxxRkFBb0YsRUFBSyxPQUFPLFVBQVk5UixLQUFLbVMsYUFFOUhuUyxLQUFLOFIsUUFBUSxvREFBbUQsRUFBSyxPQUFPLFVBQVc5UixLQUFLb1MsWUFDNUZwUyxLQUFLcVMsZUFHVEMsUUFBUyxDQUNQVCxLQUFNLFdBTUosT0FMQXBULE9BQU84VCxVQUFVQyxjQUFjQyxtQkFBbUJDLE1BQUssU0FBU0MsR0FBYyx1QkFDcERBLEdBRG9ELElBQzVFLDJCQUFzQyxLQUE5QkMsRUFBOEIsUUFDcENBLEVBQWFDLGNBRjZELG1DQUt2RSxHQUdUUixXQUFZLFdBQVcsV0FDckIsRUFBQXRJLEVBQU1ELElBQUkscURBQ1Q0SSxNQUFLLFNBQUFJLEdBQ0osRUFBSzVCLEtBQU80QixFQUFTbkIsS0FBSyxpQkFFM0JvQixPQUFNLFNBQUFqVSxHQUFJLE9BQUtrVSxRQUFRQyxJQUFJblUsT0FFOUJtVCxlQUFnQixTQUFTM0IsR0FDdkJ0USxLQUFLc1EsV0FBYUEsRUFDbEIwQyxRQUFRQyxJQUFJalQsS0FBS3NRLFlBQ2pCdFEsS0FBS2tULE9BQU9DLE9BQU8sU0FBVW5ULEtBQUtzUSxhQUVwQzBCLFVBQVcsU0FBU3pCLEdBQ2xCdlEsS0FBS3VRLE9BQVNBLEdBRWhCMkIsV0FBWSxTQUFTMUIsR0FDbkJ4USxLQUFLd1EsUUFBVUEsR0FFakIyQixZQUFhLFNBQVMxQixHQUNwQnpRLEtBQUt5USxTQUFXQSxHQUVsQjJCLFdBQVksU0FBUzFCLEdBQ25CMVEsS0FBSzBRLFFBQVVBLEdBS2pCcUIsY0FBZSxTQUFTMUIsR0FDdEJyUSxLQUFLcVEsV0FBYUEsRUFDbEJyUSxLQUFLa1QsT0FBT0MsT0FBTyxRQUFTblQsS0FBS3FRLGFBRW5DeUIsUUF6Q08sU0F5Q0NzQixFQUFJQyxFQUFJdkcsRUFBS3dHLEVBQUc1SCxHQUN0QixFQUFBM0IsRUFDS0QsSUFBSXNKLEVBQUssQ0FDUkcsYUFBYyxnQkFFZmIsTUFBSyxTQUFBSSxHQUNKLElBQU1VLEVBQVNDLEVBQU8zRyxLQUFLZ0csRUFBU25CLE1BQ2hDK0IsRUFBTSxJQUFTQyxRQUFRSCxFQUFRLENBQ2pDMUcsS0FBTUEsRUFDTndHLEdBQUlBLEVBQ0p2UixLQUFNLFdBRVIyUixFQUFNQSxFQUFJdk8sUUFBUSxVQUFVLElBQzVCLG1CQUFNdU8sRUFBSyxDQUNURSxRQUFTUCxFQUNUUSxNQUFPLElBQ1AvTyxPQUFPLEVBQ1BDLE9BQU8sRUFDUCtPLFVBQVcsSUFDWEMsTUFBTSxJQUNMLFNBQUNqVixFQUFPa1YsR0FDVHRJLEVBQU9oTixPQUFPdVYsT0FBT0QsVUFHeEJqQixPQUFNLFNBQUFqVSxHQUFJLE9BQUtrVSxRQUFRQyxJQUFJblUsVyxrRGdCalF0QyxJQUFJeUosRUFBd0IsRUFBUSxRQUlwQ0EsRUFBc0IsYSxxQkNKdEIsSUFBSTJMLEVBQVksRUFBUSxRQUNwQjNSLEVBQVcsRUFBUSxRQUNuQjRSLEVBQWdCLEVBQVEsUUFDeEJ6UixFQUFXLEVBQVEsUUFHbkJzQyxFQUFlLFNBQVVvUCxHQUMzQixPQUFPLFNBQVVDLEVBQU10VSxFQUFZc0QsRUFBaUJpUixHQUNsREosRUFBVW5VLEdBQ1YsSUFBSW1ELEVBQUlYLEVBQVM4UixHQUNiRSxFQUFPSixFQUFjalIsR0FDckJoRCxFQUFTd0MsRUFBU1EsRUFBRWhELFFBQ3BCK0IsRUFBUW1TLEVBQVdsVSxFQUFTLEVBQUksRUFDaEM2TyxFQUFJcUYsR0FBWSxFQUFJLEVBQ3hCLEdBQUkvUSxFQUFrQixFQUFHLE1BQU8sRUFBTSxDQUNwQyxHQUFJcEIsS0FBU3NTLEVBQU0sQ0FDakJELEVBQU9DLEVBQUt0UyxHQUNaQSxHQUFTOE0sRUFDVCxNQUdGLEdBREE5TSxHQUFTOE0sRUFDTHFGLEVBQVduUyxFQUFRLEVBQUkvQixHQUFVK0IsRUFDbkMsTUFBTXdKLFVBQVUsK0NBR3BCLEtBQU0ySSxFQUFXblMsR0FBUyxFQUFJL0IsRUFBUytCLEVBQU9BLEdBQVM4TSxFQUFPOU0sS0FBU3NTLElBQ3JFRCxFQUFPdlUsRUFBV3VVLEVBQU1DLEVBQUt0UyxHQUFRQSxFQUFPaUIsSUFFOUMsT0FBT29SLElBSVh0VixFQUFPQyxRQUFVLENBR2ZJLEtBQU0yRixHQUFhLEdBR25Cd1AsTUFBT3hQLEdBQWEsSyxxQkN0Q3RCLElBQUlnQyxFQUFTLEVBQVEsUUFDakJ5TixFQUFlLEVBQVEsUUFDdkJDLEVBQXVCLEVBQVEsUUFDL0J6TSxFQUE4QixFQUFRLFFBQ3RDSyxFQUFrQixFQUFRLFFBRTFCcU0sRUFBV3JNLEVBQWdCLFlBQzNCc00sRUFBZ0J0TSxFQUFnQixlQUNoQ3VNLEVBQWNILEVBQXFCSSxPQUV2QyxJQUFLLElBQUlDLEtBQW1CTixFQUFjLENBQ3hDLElBQUlPLEVBQWFoTyxFQUFPK04sR0FDcEJFLEVBQXNCRCxHQUFjQSxFQUFXclUsVUFDbkQsR0FBSXNVLEVBQXFCLENBRXZCLEdBQUlBLEVBQW9CTixLQUFjRSxFQUFhLElBQ2pENU0sRUFBNEJnTixFQUFxQk4sRUFBVUUsR0FDM0QsTUFBTy9WLEdBQ1BtVyxFQUFvQk4sR0FBWUUsRUFLbEMsR0FIS0ksRUFBb0JMLElBQ3ZCM00sRUFBNEJnTixFQUFxQkwsRUFBZUcsR0FFOUROLEVBQWFNLEdBQWtCLElBQUssSUFBSUcsS0FBZVIsRUFFekQsR0FBSU8sRUFBb0JDLEtBQWlCUixFQUFxQlEsR0FBYyxJQUMxRWpOLEVBQTRCZ04sRUFBcUJDLEVBQWFSLEVBQXFCUSxJQUNuRixNQUFPcFcsR0FDUG1XLEVBQW9CQyxHQUFlUixFQUFxQlEsTyxrQ0N6QmhFLElBQUkvVixFQUFJLEVBQVEsUUFDWmdJLEVBQWMsRUFBUSxRQUN0QkgsRUFBUyxFQUFRLFFBQ2pCakIsRUFBTSxFQUFRLFFBQ2RSLEVBQVcsRUFBUSxRQUNuQlUsRUFBaUIsRUFBUSxRQUF1QzNILEVBQ2hFNlcsRUFBNEIsRUFBUSxRQUVwQ0MsRUFBZXBPLEVBQU9iLE9BRTFCLEdBQUlnQixHQUFzQyxtQkFBaEJpTyxNQUFpQyxnQkFBaUJBLEVBQWF6VSxpQkFFeERSLElBQS9CaVYsSUFBZS9LLGFBQ2QsQ0FDRCxJQUFJZ0wsRUFBOEIsR0FFOUJDLEVBQWdCLFdBQ2xCLElBQUlqTCxFQUFjcEssVUFBVUMsT0FBUyxRQUFzQkMsSUFBakJGLFVBQVUsUUFBbUJFLEVBQVlnQixPQUFPbEIsVUFBVSxJQUNoRzZDLEVBQVM5QyxnQkFBZ0JzVixFQUN6QixJQUFJRixFQUFhL0ssUUFFRGxLLElBQWhCa0ssRUFBNEIrSyxJQUFpQkEsRUFBYS9LLEdBRTlELE1BRG9CLEtBQWhCQSxJQUFvQmdMLEVBQTRCdlMsSUFBVSxHQUN2REEsR0FFVHFTLEVBQTBCRyxFQUFlRixHQUN6QyxJQUFJRyxFQUFrQkQsRUFBYzNVLFVBQVl5VSxFQUFhelUsVUFDN0Q0VSxFQUFnQjFQLFlBQWN5UCxFQUU5QixJQUFJRSxFQUFpQkQsRUFBZ0JoWCxTQUNqQ2tYLEVBQXlDLGdCQUFoQ3RVLE9BQU9pVSxFQUFhLFNBQzdCTSxFQUFTLHdCQUNielAsRUFBZXNQLEVBQWlCLGNBQWUsQ0FDN0M1SixjQUFjLEVBQ2Q3QixJQUFLLFdBQ0gsSUFBSVEsRUFBUy9FLEVBQVN2RixNQUFRQSxLQUFLNk0sVUFBWTdNLEtBQzNDZ0MsRUFBU3dULEVBQWV0VyxLQUFLb0wsR0FDakMsR0FBSXZFLEVBQUlzUCxFQUE2Qi9LLEdBQVMsTUFBTyxHQUNyRCxJQUFJcUwsRUFBT0YsRUFBU3pULEVBQU9qRCxNQUFNLEdBQUksR0FBS2lELEVBQU9tRCxRQUFRdVEsRUFBUSxNQUNqRSxNQUFnQixLQUFUQyxPQUFjeFYsRUFBWXdWLEtBSXJDeFcsRUFBRSxDQUFFNkgsUUFBUSxFQUFNbkgsUUFBUSxHQUFRLENBQ2hDc0csT0FBUW1QLE0scUJDL0NaLElBQUloTixFQUFrQixFQUFRLFFBRTlCckosRUFBUVgsRUFBSWdLLEcsa0NDRlosVyxrQ0NDQSxJQUFJbkosRUFBSSxFQUFRLFFBQ1pvRyxFQUFXLEVBQVEsUUFDbkIrQixFQUFVLEVBQVEsUUFDbEJzTyxFQUFrQixFQUFRLFFBQzFCbFQsRUFBVyxFQUFRLFFBQ25CdEUsRUFBa0IsRUFBUSxRQUMxQnVFLEVBQWlCLEVBQVEsUUFDekIyRixFQUFrQixFQUFRLFFBQzFCdU4sRUFBK0IsRUFBUSxRQUN2Q3RXLEVBQTBCLEVBQVEsUUFFbEN1VyxFQUFzQkQsRUFBNkIsU0FDbkRwVyxFQUFpQkYsRUFBd0IsUUFBUyxDQUFFd1csV0FBVyxFQUFNQyxFQUFHLEVBQUd0VyxFQUFHLElBRTlFdVcsRUFBVTNOLEVBQWdCLFdBQzFCNE4sRUFBYyxHQUFHblgsTUFDakJvWCxFQUFNQyxLQUFLRCxJQUtmaFgsRUFBRSxDQUFFUSxPQUFRLFFBQVNDLE9BQU8sRUFBTUMsUUFBU2lXLElBQXdCclcsR0FBa0IsQ0FDbkZWLE1BQU8sU0FBZXFHLEVBQU9DLEdBQzNCLElBS0lnUixFQUFhdlQsRUFBUXVNLEVBTHJCbk0sRUFBSTlFLEVBQWdCNEIsTUFDcEJFLEVBQVN3QyxFQUFTUSxFQUFFaEQsUUFDcEJvVyxFQUFJVixFQUFnQnhRLEVBQU9sRixHQUMzQnFXLEVBQU1YLE9BQXdCelYsSUFBUmtGLEVBQW9CbkYsRUFBU21GLEVBQUtuRixHQUc1RCxHQUFJb0gsRUFBUXBFLEtBQ1ZtVCxFQUFjblQsRUFBRTJDLFlBRVUsbUJBQWZ3USxHQUE4QkEsSUFBZ0JqVCxRQUFTa0UsRUFBUStPLEVBQVkxVixXQUUzRTRFLEVBQVM4USxLQUNsQkEsRUFBY0EsRUFBWUosR0FDTixPQUFoQkksSUFBc0JBLE9BQWNsVyxJQUh4Q2tXLE9BQWNsVyxFQUtaa1csSUFBZ0JqVCxZQUF5QmpELElBQWhCa1csR0FDM0IsT0FBT0gsRUFBWWhYLEtBQUtnRSxFQUFHb1QsRUFBR0MsR0FJbEMsSUFEQXpULEVBQVMsU0FBcUIzQyxJQUFoQmtXLEVBQTRCalQsTUFBUWlULEdBQWFGLEVBQUlJLEVBQU1ELEVBQUcsSUFDdkVqSCxFQUFJLEVBQUdpSCxFQUFJQyxFQUFLRCxJQUFLakgsSUFBU2lILEtBQUtwVCxHQUFHUCxFQUFlRyxFQUFRdU0sRUFBR25NLEVBQUVvVCxJQUV2RSxPQURBeFQsRUFBTzVDLE9BQVNtUCxFQUNUdk0sTSxtQkM1Q1g5RCxFQUFPQyxRQUFVLENBQ2Z1WCxZQUFhLEVBQ2JDLG9CQUFxQixFQUNyQkMsYUFBYyxFQUNkQyxlQUFnQixFQUNoQkMsWUFBYSxFQUNiQyxjQUFlLEVBQ2ZDLGFBQWMsRUFDZEMscUJBQXNCLEVBQ3RCQyxTQUFVLEVBQ1ZDLGtCQUFtQixFQUNuQkMsZUFBZ0IsRUFDaEJDLGdCQUFpQixFQUNqQkMsa0JBQW1CLEVBQ25CQyxVQUFXLEVBQ1hDLGNBQWUsRUFDZkMsYUFBYyxFQUNkQyxTQUFVLEVBQ1ZDLGlCQUFrQixFQUNsQkMsT0FBUSxFQUNSQyxZQUFhLEVBQ2JDLGNBQWUsRUFDZkMsY0FBZSxFQUNmQyxlQUFnQixFQUNoQkMsYUFBYyxFQUNkQyxjQUFlLEVBQ2ZDLGlCQUFrQixFQUNsQkMsaUJBQWtCLEVBQ2xCQyxlQUFnQixFQUNoQkMsaUJBQWtCLEVBQ2xCQyxjQUFlLEVBQ2ZDLFVBQVciLCJmaWxlIjoianMvY2h1bmstMmRlODc1MTAuYWJkNDc5YzEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdG9JbmRleGVkT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWluZGV4ZWQtb2JqZWN0Jyk7XG52YXIgbmF0aXZlR2V0T3duUHJvcGVydHlOYW1lcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcycpLmY7XG5cbnZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG52YXIgd2luZG93TmFtZXMgPSB0eXBlb2Ygd2luZG93ID09ICdvYmplY3QnICYmIHdpbmRvdyAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lc1xuICA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHdpbmRvdykgOiBbXTtcblxudmFyIGdldFdpbmRvd05hbWVzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIG5hdGl2ZUdldE93blByb3BlcnR5TmFtZXMoaXQpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiB3aW5kb3dOYW1lcy5zbGljZSgpO1xuICB9XG59O1xuXG4vLyBmYWxsYmFjayBmb3IgSUUxMSBidWdneSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyB3aXRoIGlmcmFtZSBhbmQgd2luZG93XG5tb2R1bGUuZXhwb3J0cy5mID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhpdCkge1xuICByZXR1cm4gd2luZG93TmFtZXMgJiYgdG9TdHJpbmcuY2FsbChpdCkgPT0gJ1tvYmplY3QgV2luZG93XSdcbiAgICA/IGdldFdpbmRvd05hbWVzKGl0KVxuICAgIDogbmF0aXZlR2V0T3duUHJvcGVydHlOYW1lcyh0b0luZGV4ZWRPYmplY3QoaXQpKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciAkcmVkdWNlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LXJlZHVjZScpLmxlZnQ7XG52YXIgYXJyYXlNZXRob2RJc1N0cmljdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1tZXRob2QtaXMtc3RyaWN0Jyk7XG52YXIgYXJyYXlNZXRob2RVc2VzVG9MZW5ndGggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLXVzZXMtdG8tbGVuZ3RoJyk7XG5cbnZhciBTVFJJQ1RfTUVUSE9EID0gYXJyYXlNZXRob2RJc1N0cmljdCgncmVkdWNlJyk7XG52YXIgVVNFU19UT19MRU5HVEggPSBhcnJheU1ldGhvZFVzZXNUb0xlbmd0aCgncmVkdWNlJywgeyAxOiAwIH0pO1xuXG4vLyBgQXJyYXkucHJvdG90eXBlLnJlZHVjZWAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUucmVkdWNlXG4kKHsgdGFyZ2V0OiAnQXJyYXknLCBwcm90bzogdHJ1ZSwgZm9yY2VkOiAhU1RSSUNUX01FVEhPRCB8fCAhVVNFU19UT19MRU5HVEggfSwge1xuICByZWR1Y2U6IGZ1bmN0aW9uIHJlZHVjZShjYWxsYmFja2ZuIC8qICwgaW5pdGlhbFZhbHVlICovKSB7XG4gICAgcmV0dXJuICRyZWR1Y2UodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWRlZmluZScpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLW9iamVjdCcpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgZmxhZ3MgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLWZsYWdzJyk7XG5cbnZhciBUT19TVFJJTkcgPSAndG9TdHJpbmcnO1xudmFyIFJlZ0V4cFByb3RvdHlwZSA9IFJlZ0V4cC5wcm90b3R5cGU7XG52YXIgbmF0aXZlVG9TdHJpbmcgPSBSZWdFeHBQcm90b3R5cGVbVE9fU1RSSU5HXTtcblxudmFyIE5PVF9HRU5FUklDID0gZmFpbHMoZnVuY3Rpb24gKCkgeyByZXR1cm4gbmF0aXZlVG9TdHJpbmcuY2FsbCh7IHNvdXJjZTogJ2EnLCBmbGFnczogJ2InIH0pICE9ICcvYS9iJzsgfSk7XG4vLyBGRjQ0LSBSZWdFeHAjdG9TdHJpbmcgaGFzIGEgd3JvbmcgbmFtZVxudmFyIElOQ09SUkVDVF9OQU1FID0gbmF0aXZlVG9TdHJpbmcubmFtZSAhPSBUT19TVFJJTkc7XG5cbi8vIGBSZWdFeHAucHJvdG90eXBlLnRvU3RyaW5nYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXJlZ2V4cC5wcm90b3R5cGUudG9zdHJpbmdcbmlmIChOT1RfR0VORVJJQyB8fCBJTkNPUlJFQ1RfTkFNRSkge1xuICByZWRlZmluZShSZWdFeHAucHJvdG90eXBlLCBUT19TVFJJTkcsIGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHZhciBSID0gYW5PYmplY3QodGhpcyk7XG4gICAgdmFyIHAgPSBTdHJpbmcoUi5zb3VyY2UpO1xuICAgIHZhciByZiA9IFIuZmxhZ3M7XG4gICAgdmFyIGYgPSBTdHJpbmcocmYgPT09IHVuZGVmaW5lZCAmJiBSIGluc3RhbmNlb2YgUmVnRXhwICYmICEoJ2ZsYWdzJyBpbiBSZWdFeHBQcm90b3R5cGUpID8gZmxhZ3MuY2FsbChSKSA6IHJmKTtcbiAgICByZXR1cm4gJy8nICsgcCArICcvJyArIGY7XG4gIH0sIHsgdW5zYWZlOiB0cnVlIH0pO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNoYXJBdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zdHJpbmctbXVsdGlieXRlJykuY2hhckF0O1xudmFyIEludGVybmFsU3RhdGVNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW50ZXJuYWwtc3RhdGUnKTtcbnZhciBkZWZpbmVJdGVyYXRvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZWZpbmUtaXRlcmF0b3InKTtcblxudmFyIFNUUklOR19JVEVSQVRPUiA9ICdTdHJpbmcgSXRlcmF0b3InO1xudmFyIHNldEludGVybmFsU3RhdGUgPSBJbnRlcm5hbFN0YXRlTW9kdWxlLnNldDtcbnZhciBnZXRJbnRlcm5hbFN0YXRlID0gSW50ZXJuYWxTdGF0ZU1vZHVsZS5nZXR0ZXJGb3IoU1RSSU5HX0lURVJBVE9SKTtcblxuLy8gYFN0cmluZy5wcm90b3R5cGVbQEBpdGVyYXRvcl1gIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtc3RyaW5nLnByb3RvdHlwZS1AQGl0ZXJhdG9yXG5kZWZpbmVJdGVyYXRvcihTdHJpbmcsICdTdHJpbmcnLCBmdW5jdGlvbiAoaXRlcmF0ZWQpIHtcbiAgc2V0SW50ZXJuYWxTdGF0ZSh0aGlzLCB7XG4gICAgdHlwZTogU1RSSU5HX0lURVJBVE9SLFxuICAgIHN0cmluZzogU3RyaW5nKGl0ZXJhdGVkKSxcbiAgICBpbmRleDogMFxuICB9KTtcbi8vIGAlU3RyaW5nSXRlcmF0b3JQcm90b3R5cGUlLm5leHRgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtJXN0cmluZ2l0ZXJhdG9ycHJvdG90eXBlJS5uZXh0XG59LCBmdW5jdGlvbiBuZXh0KCkge1xuICB2YXIgc3RhdGUgPSBnZXRJbnRlcm5hbFN0YXRlKHRoaXMpO1xuICB2YXIgc3RyaW5nID0gc3RhdGUuc3RyaW5nO1xuICB2YXIgaW5kZXggPSBzdGF0ZS5pbmRleDtcbiAgdmFyIHBvaW50O1xuICBpZiAoaW5kZXggPj0gc3RyaW5nLmxlbmd0aCkgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICBwb2ludCA9IGNoYXJBdChzdHJpbmcsIGluZGV4KTtcbiAgc3RhdGUuaW5kZXggKz0gcG9pbnQubGVuZ3RoO1xuICByZXR1cm4geyB2YWx1ZTogcG9pbnQsIGRvbmU6IGZhbHNlIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBiaW5kID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtY29udGV4dCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLW9iamVjdCcpO1xudmFyIGNhbGxXaXRoU2FmZUl0ZXJhdGlvbkNsb3NpbmcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2FsbC13aXRoLXNhZmUtaXRlcmF0aW9uLWNsb3NpbmcnKTtcbnZhciBpc0FycmF5SXRlcmF0b3JNZXRob2QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtYXJyYXktaXRlcmF0b3ItbWV0aG9kJyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoJyk7XG52YXIgY3JlYXRlUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5Jyk7XG52YXIgZ2V0SXRlcmF0b3JNZXRob2QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xuXG4vLyBgQXJyYXkuZnJvbWAgbWV0aG9kIGltcGxlbWVudGF0aW9uXG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1hcnJheS5mcm9tXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGZyb20oYXJyYXlMaWtlIC8qICwgbWFwZm4gPSB1bmRlZmluZWQsIHRoaXNBcmcgPSB1bmRlZmluZWQgKi8pIHtcbiAgdmFyIE8gPSB0b09iamVjdChhcnJheUxpa2UpO1xuICB2YXIgQyA9IHR5cGVvZiB0aGlzID09ICdmdW5jdGlvbicgPyB0aGlzIDogQXJyYXk7XG4gIHZhciBhcmd1bWVudHNMZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoO1xuICB2YXIgbWFwZm4gPSBhcmd1bWVudHNMZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkO1xuICB2YXIgbWFwcGluZyA9IG1hcGZuICE9PSB1bmRlZmluZWQ7XG4gIHZhciBpdGVyYXRvck1ldGhvZCA9IGdldEl0ZXJhdG9yTWV0aG9kKE8pO1xuICB2YXIgaW5kZXggPSAwO1xuICB2YXIgbGVuZ3RoLCByZXN1bHQsIHN0ZXAsIGl0ZXJhdG9yLCBuZXh0LCB2YWx1ZTtcbiAgaWYgKG1hcHBpbmcpIG1hcGZuID0gYmluZChtYXBmbiwgYXJndW1lbnRzTGVuZ3RoID4gMiA/IGFyZ3VtZW50c1syXSA6IHVuZGVmaW5lZCwgMik7XG4gIC8vIGlmIHRoZSB0YXJnZXQgaXMgbm90IGl0ZXJhYmxlIG9yIGl0J3MgYW4gYXJyYXkgd2l0aCB0aGUgZGVmYXVsdCBpdGVyYXRvciAtIHVzZSBhIHNpbXBsZSBjYXNlXG4gIGlmIChpdGVyYXRvck1ldGhvZCAhPSB1bmRlZmluZWQgJiYgIShDID09IEFycmF5ICYmIGlzQXJyYXlJdGVyYXRvck1ldGhvZChpdGVyYXRvck1ldGhvZCkpKSB7XG4gICAgaXRlcmF0b3IgPSBpdGVyYXRvck1ldGhvZC5jYWxsKE8pO1xuICAgIG5leHQgPSBpdGVyYXRvci5uZXh0O1xuICAgIHJlc3VsdCA9IG5ldyBDKCk7XG4gICAgZm9yICg7IShzdGVwID0gbmV4dC5jYWxsKGl0ZXJhdG9yKSkuZG9uZTsgaW5kZXgrKykge1xuICAgICAgdmFsdWUgPSBtYXBwaW5nID8gY2FsbFdpdGhTYWZlSXRlcmF0aW9uQ2xvc2luZyhpdGVyYXRvciwgbWFwZm4sIFtzdGVwLnZhbHVlLCBpbmRleF0sIHRydWUpIDogc3RlcC52YWx1ZTtcbiAgICAgIGNyZWF0ZVByb3BlcnR5KHJlc3VsdCwgaW5kZXgsIHZhbHVlKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICAgIHJlc3VsdCA9IG5ldyBDKGxlbmd0aCk7XG4gICAgZm9yICg7bGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIHtcbiAgICAgIHZhbHVlID0gbWFwcGluZyA/IG1hcGZuKE9baW5kZXhdLCBpbmRleCkgOiBPW2luZGV4XTtcbiAgICAgIGNyZWF0ZVByb3BlcnR5KHJlc3VsdCwgaW5kZXgsIHZhbHVlKTtcbiAgICB9XG4gIH1cbiAgcmVzdWx0Lmxlbmd0aCA9IGluZGV4O1xuICByZXR1cm4gcmVzdWx0O1xufTtcbiIsIjx0ZW1wbGF0ZT5cclxuICA8ZGl2PlxyXG4gICAgPG1haW5tZW51IGp1ZGdlPTAgLz5cclxuICAgIDxoMT7mlrDlnovjgrPjg63jg4rjgqbjgqTjg6vjgrnmg4XloLE8L2gxPlxyXG4gICAgPGRpdiBjbGFzcz1cImZsZXhcIiB2LWlmPVwicmVhZHlUb3Nob3dNYWluUGFnZVwiPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwiYm94XCI+XHJcbiAgICAgICAgPGxhYmVsYm94IGNsYXNzPVwiYm94MVwiIG1zZz1cIuaEn+afk+iAheaVsFwiIGlkbmFtZT1cImthbnNlblwiIDppbmZlY3RlZD1cImluZmVjdGVkXCIgLz5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJib3hcIj5cclxuICAgICAgICA8bGFiZWxib3ggY2xhc3M9XCJib3gyXCIgbXNnPVwi5q276ICF5pWwXCIgaWRuYW1lPVwiZGVhZFwiIDppbmZlY3RlZD1cImRlYWRcIiAvPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzcz1cImJveFwiPlxyXG4gICAgICAgIDxsYWJlbGJveCBjbGFzcz1cImJveDNcIiBtc2c9XCJQQ1LmpJzmn7vmlbBcIiBpZG5hbWU9XCJwY3JcIiA6aW5mZWN0ZWQ9XCJwY3JcIiAvPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzcz1cImJveFwiPlxyXG4gICAgICAgIDxsYWJlbGJveCBjbGFzcz1cImJveDRcIiBtc2c9XCLpgIDpmaLogIXmlbBcIiBpZG5hbWU9XCJkaXNjaGFuZ2VcIiA6aW5mZWN0ZWQ9XCJkaXNjaGFyZ2VcIiAvPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzcz1cImJveFwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJib3gyN1wiPlxyXG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJib3gtdGl0bGVcIj7nl4Xluorkvb/nlKjmlbA8L3NwYW4+XHJcbiAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgOmlkPVwiemVua29rdUlkXCIgbmFtZT1cIlRBQlwiIGNsYXNzPVwidGFiLXN3aXRjaFwiIGNoZWNrZWQ9XCJjaGVja2VkXCIgLz48bGFiZWwgOmZvcj1cInplbmtva3VJZFwiIGNsYXNzPVwidGFiLWxhYmVsXCI+5bKh5bGxPC9sYWJlbD5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRleHRcIj57e3VzZX19L3t7YWxsfX08YnI+XHJcbiAgICAgICAgICAgICAgPHAgY2xhc3M9XCJ1ZW9cIj57e3VwZGF0ZX19PC9wPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXYgdi1lbHNlIGNsYXNzPVwibG9hZGVyXCI+PC9kaXY+XHJcbiAgPC9kaXY+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5pbXBvcnQgbGFiZWxib3ggZnJvbSAnLi4vY29tcG9uZW50cy9sYWJlbGJveC52dWUnXHJcbmltcG9ydCBtYWlubWVudSBmcm9tICcuLi9jb21wb25lbnRzL21haW5tZW51LnZ1ZSdcclxuaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJ1xyXG5pbXBvcnQgeyBwYXJzZSB9IGZyb20gJ2NzdidcclxuaW1wb3J0IEVuY29kaW5nIGZyb20gJ2VuY29kaW5nLWphcGFuZXNlJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIG5hbWU6ICdNYWlucGFnZScsXHJcbiAgY29tcG9uZW50czoge1xyXG4gICAgbGFiZWxib3gsXHJcbiAgICBtYWlubWVudVxyXG4gIH0sXHJcbiAgY29tcHV0ZWQ6IHtcclxuICAgIHJlYWR5VG9zaG93TWFpblBhZ2U6IGZ1bmN0aW9uKCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5rZW5EZXRhaWxzLmxlbmd0aCA+IDAgJiZcclxuICAgICAgdGhpcy5rZW5VdGl3YWtlLmxlbmd0aCA+IDAgJiZcclxuICAgICAgdGhpcy5rZW5QY3IubGVuZ3RoID4gMCAmJlxyXG4gICAgICB0aGlzLmtlbkRlYWQubGVuZ3RoID4gMCAmJlxyXG4gICAgICB0aGlzLmtlbklyeW91Lmxlbmd0aCA+IDAgJiZcclxuICAgICAgdGhpcy5aZW5rb2t1Lmxlbmd0aCA+IDAgXHJcbiAgICB9LFxyXG4gICAgemVua29rdUlkOiBmdW5jdGlvbigpIHtcclxuICAgICAgcmV0dXJuICd6ZW5rb2t1J1xyXG4gICAgfSxcclxuICAgIHVzZTogZnVuY3Rpb24oKSB7XHJcbiAgICAgIHJldHVybiBOdW1iZXIodGhpcy5rZW5EZWFkW3RoaXMua2VuRGVhZC5sZW5ndGgtMV1bXCLmgqPogIVf5YWl6Zmi5LitX+WFpemZouS6iOWumuWQq+OCgFwiXSkgKyBOdW1iZXIodGhpcy5rZW5EZWFkW3RoaXMua2VuRGVhZC5sZW5ndGgtMV1bXCLmgqPogIVf5a6/5rOK55mC6aSK5pa96Kit44Gr5YWl5omA5LitXCJdKVxyXG4gICAgfSxcclxuICAgIGFsbDogZnVuY3Rpb24oKSB7XHJcbiAgICAgIHJldHVybiBOdW1iZXIodGhpcy5rZW5JcnlvdVt0aGlzLmtlbklyeW91Lmxlbmd0aC0xXVtcIueiuuS/neaVsF/nl4XluopcIl0pICsgTnVtYmVyKHRoaXMua2VuSXJ5b3VbdGhpcy5rZW5JcnlvdS5sZW5ndGgtMV1bXCLnorrkv53mlbBf5a6/5rOK55mC6aSK5pa96KitXCJdKVxyXG4gICAgfSxcclxuICAgIHVwZGF0ZTogZnVuY3Rpb24oKSB7XHJcbiAgICAgIGxldCBoaWR1a2UgPSB0aGlzLmtlbkRlYWRbdGhpcy5rZW5EZWFkLmxlbmd0aC0xXVtcIuWFrOihqF/lubTmnIjml6VcIl0uc3BsaXQoXCIvXCIpO1xyXG4gICAgICBmb3IgKGxldCBpPTE7IGk8MzsgaSsrKXtcclxuICAgICAgICBpZiAoaGlkdWtlW2ldLmxlbmd0aD09MSl7XHJcbiAgICAgICAgICBoaWR1a2VbaV0gPSBcIjBcIiArIGhpZHVrZVtpXTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgY29uc3QgaGlkdWtlZGF0YSA9IFwi4oC7XCIgKyBoaWR1a2VbMF0gKyBcIuW5tFwiICsgaGlkdWtlWzFdICsgXCLmnIhcIiArIGhpZHVrZVsyXSArIFwi5pel5pmC54K5XCI7XHJcbiAgICAgIHJldHVybiBoaWR1a2VkYXRhXHJcbiAgICB9LFxyXG4gICAgaW5mZWN0ZWQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAvL2NvbnN0IGZpbHRlcmVkWmVua29rdSA9IHRoaXMuWmVua29rdURldGFpbC5yZWR1Y2UoKHAseCk9PnAreFtcIlBDUiDmpJzmn7vpmb3mgKfogIXmlbAo5Y2Y5pelKVwiXSwwKVxyXG4gICAgICBjb25zdCBmaWx0ZXJlZFplbmtva3UgPSB0aGlzLlplbmtva3UucmVkdWNlKChzdW0sZWFjaCk9PnN1bSArIGVhY2hbXCJucGF0aWVudHNcIl0sMCk7XHJcbiAgICAgIGxldCBhID0gdGhpcy5rZW5VdGl3YWtlW3RoaXMua2VuVXRpd2FrZS5sZW5ndGgtMV1bXCLlhazooajlubTmnIjml6VcIl0ucmVwbGFjZShcIuW5tFwiLFwiL1wiKTtcclxuICAgICAgYSA9IGEucmVwbGFjZShcIuaciFwiLFwiL1wiKTtcclxuICAgICAgYSA9IGEucmVwbGFjZShcIuaXpVwiLFwiL1wiKTtcclxuICAgICAgYSA9IGEuc3BsaXQoXCIvXCIpXHJcbiAgICAgIGZvciAobGV0IGk9MTsgaTwzOyBpKyspe1xyXG4gICAgICAgIGlmIChhW2ldLmxlbmd0aD09MSl7XHJcbiAgICAgICAgICBhW2ldID0gXCIwXCIgKyBhW2ldO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBjb25zdCBoaWR1a2UgPSBcIuKAu1wiICsgYVswXSArIFwi5bm0XCIgKyBhWzFdICsgXCLmnIhcIiArIGFbMl0gKyBcIuaXpeaZgueCuVwiO1xyXG4gICAgICBsZXQgZ2F0YSAgPSB0aGlzLmxhc3Quc3BsaXQoXCItXCIpO1xyXG4gICAgICBnYXRhID0gXCLigLtcIitnYXRhWzBdK1wi5bm0XCIrZ2F0YVsxXStcIuaciFwiK2dhdGFbMl0rXCLml6XmmYLngrlcIjtcclxuXHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgLy96ZW5rb2t1OmZpbHRlcmVkWmVua29rdSxcclxuICAgICAgICB6ZW5rb2t1OiBmaWx0ZXJlZFplbmtva3UgKyBcIuS6ulwiLFxyXG4gICAgICAgIG9rYXlhbWE6IHRoaXMua2VuVXRpd2FrZS5sZW5ndGggKyBcIuS6ulwiLFxyXG4gICAgICAgIHRzdXlhbWE6IHRoaXMua2VuVXRpd2FrZS5maWx0ZXIoZnVuY3Rpb24oZWFjaCl7XHJcbiAgICAgICAgICBpZiAoZWFjaC7mgqPogIXvvL/lsYXkvY/lnLAgPT0gJ+a0peWxseW4gicpIHJldHVybiB0cnVlXHJcbiAgICAgICAgfSkubGVuZ3RoICsgXCLkurpcIixcclxuICAgICAgICBkYXRhMTogZ2F0YSxcclxuICAgICAgICBkYXRhMjogaGlkdWtlLFxyXG4gICAgICAgIGRhdGEzOiBoaWR1a2UsXHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBwY3I6IGZ1bmN0aW9uKCl7XHJcbiAgICAgIGNvbnN0IGZpbHRlcmVkWmVua29rdVBjciA9IHRoaXMuWmVua29rdS5yZWR1Y2UoKHN1bSxlYWNoKT0+c3VtICsgZWFjaFtcIm5pbnNwZWN0aW9uc1wiXSwwKTtcclxuICAgICAgY29uc3QgZmlsdGVyZWRPa2F5YW1hUGNyID0gdGhpcy5rZW5QY3IuZmlsdGVyKGZ1bmN0aW9uKGVhY2gpe1xyXG4gICAgICAgICAgaWYgKGVhY2gu6ZuG6KiI5pmC54K5X+W5tOaciOaXpSAhPSAnJykgcmV0dXJuIHRydWVcclxuICAgICAgICB9KTtcclxuICAgICAgY29uc3QgaGlkdWtlID0gZmlsdGVyZWRPa2F5YW1hUGNyW2ZpbHRlcmVkT2theWFtYVBjci5sZW5ndGgtMV0u6ZuG6KiI5pmC54K5X+W5tOaciOaXpS5zcGxpdChcIi9cIik7XHJcbiAgICAgIGlmIChoaWR1a2VbMl0ubGVuZ3RoPT0xKXtcclxuICAgICAgICBoaWR1a2VbMl0gPSBcIjBcIiArIGhpZHVrZVsyXTtcclxuICAgICAgfVxyXG4gICAgICBjb25zdCBoaWR1a2VkYXRhID0gXCLigLtcIitoaWR1a2VbMF0rXCLlubRcIitoaWR1a2VbMV0rXCLmnIhcIitoaWR1a2VbMl0rXCLml6XmmYLngrlcIjtcclxuICAgICAgbGV0IGdhdGEgID0gdGhpcy5sYXN0LnNwbGl0KFwiLVwiKTtcclxuICAgICAgZ2F0YSA9IFwi4oC7XCIrZ2F0YVswXStcIuW5tFwiK2dhdGFbMV0rXCLmnIhcIitnYXRhWzJdK1wi5pel5pmC54K5XCI7XHJcbiAgICAgIFxyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIHplbmtva3U6IGZpbHRlcmVkWmVua29rdVBjciArIFwi5Lq6XCIsXHJcbiAgICAgICAgb2theWFtYTogdGhpcy5rZW5QY3IucmVkdWNlKGZ1bmN0aW9uIChhY2N1LCB2YWx1ZSl7XHJcbiAgICAgICAgICByZXR1cm4gYWNjdSArIE51bWJlcih2YWx1ZVsn5qSc5p+75a6f5pa95Lq65pWwJ10pXHJcbiAgICAgICAgfSwwKSArIFwi5Lq6XCIsXHJcbiAgICAgICAgdHN1eWFtYTogJ05vIGRhdGEnLFxyXG4gICAgICAgIGRhdGExOiBnYXRhLFxyXG4gICAgICAgIGRhdGEyOiBoaWR1a2VkYXRhLFxyXG4gICAgICAgIGRhdGEzOiBcIlwiLFxyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgZGVhZDogZnVuY3Rpb24oKXtcclxuICAgICAgY29uc3QgZmlsdGVyZWRaZW5rb2t1RGVhZCA9IHRoaXMuWmVua29rdS5yZWR1Y2UoKHN1bSxlYWNoKT0+c3VtICsgZWFjaFtcIm5kZWF0aHNcIl0sMCk7XHJcbiAgICAgIGxldCBoaWR1a2UgPSB0aGlzLmtlbkRlYWRbdGhpcy5rZW5EZWFkLmxlbmd0aC0xXVtcIuWFrOihqF/lubTmnIjml6VcIl0uc3BsaXQoXCIvXCIpO1xyXG4gICAgICBmb3IgKGxldCBpPTE7IGk8MzsgaSsrKXtcclxuICAgICAgICBpZiAoaGlkdWtlW2ldLmxlbmd0aD09MSl7XHJcbiAgICAgICAgICBoaWR1a2VbaV0gPSBcIjBcIiArIGhpZHVrZVtpXTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgY29uc3QgaGlkdWtlZGF0YSA9IFwi4oC7XCIgKyBoaWR1a2VbMF0gKyBcIuW5tFwiICsgaGlkdWtlWzFdICsgXCLmnIhcIiArIGhpZHVrZVsyXSArIFwi5pel5pmC54K5XCI7XHJcbiAgICAgIGxldCBnYXRhICA9IHRoaXMubGFzdC5zcGxpdChcIi1cIik7XHJcbiAgICAgIGdhdGEgPSBcIuKAu1wiK2dhdGFbMF0rXCLlubRcIitnYXRhWzFdK1wi5pyIXCIrZ2F0YVsyXStcIuaXpeaZgueCuVwiO1xyXG5cclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICB6ZW5rb2t1OmZpbHRlcmVkWmVua29rdURlYWQgKyBcIuS6ulwiLFxyXG4gICAgICAgIG9rYXlhbWE6IHRoaXMua2VuRGVhZFt0aGlzLmtlbkRlYWQubGVuZ3RoLTFdW1wi5oKj6ICFX+atu+S6oVwiXSArIFwi5Lq6XCIsXHJcbiAgICAgICAgdHN1eWFtYTogJ05vIGRhdGEnLFxyXG4gICAgICAgIGRhdGExOiBnYXRhLFxyXG4gICAgICAgIGRhdGEyOiBoaWR1a2VkYXRhLFxyXG4gICAgICAgIGRhdGEzOiBcIlwiLFxyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgZGlzY2hhcmdlOiBmdW5jdGlvbigpe1xyXG4gICAgICBjb25zdCBmaWx0ZXJlZFplbmtva3VEaXMgPSB0aGlzLlplbmtva3UucmVkdWNlKChzdW0sZWFjaCk9PnN1bSArIGVhY2hbXCJuZXhpdHNcIl0sMCk7XHJcbiAgICAgIGxldCBoaWR1a2UgPSB0aGlzLmtlbkRlYWRbdGhpcy5rZW5EZWFkLmxlbmd0aC0xXVtcIuWFrOihqF/lubTmnIjml6VcIl0uc3BsaXQoXCIvXCIpO1xyXG4gICAgICBmb3IgKGxldCBpPTE7IGk8MzsgaSsrKXtcclxuICAgICAgICBpZiAoaGlkdWtlW2ldLmxlbmd0aD09MSl7XHJcbiAgICAgICAgICBoaWR1a2VbaV0gPSBcIjBcIiArIGhpZHVrZVtpXTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgY29uc3QgaGlkdWtlZGF0YSA9IFwi4oC7XCIgKyBoaWR1a2VbMF0gKyBcIuW5tFwiICsgaGlkdWtlWzFdICsgXCLmnIhcIiArIGhpZHVrZVsyXSArIFwi5pel5pmC54K5XCI7XHJcbiAgICAgIGxldCBnYXRhICA9IHRoaXMubGFzdC5zcGxpdChcIi1cIik7XHJcbiAgICAgIGdhdGEgPSBcIuKAu1wiK2dhdGFbMF0rXCLlubRcIitnYXRhWzFdK1wi5pyIXCIrZ2F0YVsyXStcIuaXpeaZgueCuVwiO1xyXG5cclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICB6ZW5rb2t1OmZpbHRlcmVkWmVua29rdURpcyArIFwi5Lq6XCIsXHJcbiAgICAgICAgb2theWFtYTogdGhpcy5rZW5EZWFkW3RoaXMua2VuRGVhZC5sZW5ndGgtMV1bXCLmgqPogIVf6YCA6Zmi562JXCJdICsgXCLkurpcIixcclxuICAgICAgICB0c3V5YW1hOiAnTm8gZGF0YScsXHJcbiAgICAgICAgZGF0YTE6IGdhdGEsXHJcbiAgICAgICAgZGF0YTI6IGhpZHVrZWRhdGEsXHJcbiAgICAgICAgZGF0YTM6IFwiXCIsXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9LFxyXG4gIGRhdGE6IGZ1bmN0aW9uKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAga2VuRGV0YWlsczogW10sXHJcbiAgICAgIGtlblV0aXdha2U6IFtdLFxyXG4gICAgICBrZW5QY3I6IFtdLFxyXG4gICAgICBrZW5EZWFkOiBbXSxcclxuICAgICAga2VuSXJ5b3U6IFtdLFxyXG4gICAgICBaZW5rb2t1OiBbXSxcclxuICAgICAgbGFzdDogW10sXHJcbiAgICAgIC8vWmVua29rdURldGFpbDogW10sXHJcbiAgICB9XHJcbiAgfSxcclxuICBtb3VudGVkOiBmdW5jdGlvbigpIHtcclxuICAgIHRoaXMuY2FzaCgpO1xyXG4gICAgaWYgKHRoaXMuY2FzaCgpPT10cnVlKXtcclxuICAgICAgdGhpcy5nZXRfY3N2KFwiaHR0cHM6Ly90YXVyYXlvdWhlaS5naXRodWIuaW8vY292aWQtMTkvZGF0YS9rYW5zZW5zaGFzdXUwNDIwLmNzdlwiLHRydWUsJ1NKSVMnLCdVTklDT0RFJywgdGhpcy5zZXRLZW5EZXRhaWxzKTtcclxuICAgICAgdGhpcy5nZXRfY3N2KFwiaHR0cHM6Ly90YXVyYXlvdWhlaS5naXRodWIuaW8vY292aWQtMTkvZGF0YS9wY3IuY3N2XCIsdHJ1ZSwnU0pJUycsJ1VOSUNPREUnLCB0aGlzLnNldEtlblBjcik7IFxyXG4gICAgICB0aGlzLmdldF9jc3YoXCJodHRwczovL3RhdXJheW91aGVpLmdpdGh1Yi5pby9jb3ZpZC0xOS9kYXRhL2thbnNlbnNoYXNob3VzYWlqb3Vob3UuY3N2XCIsdHJ1ZSwnU0pJUycsJ1VOSUNPREUnLCAgdGhpcy5zZXRLZW5VY2hpd2FrZSk7XHJcbiAgICAgIHRoaXMuZ2V0X2NzdihcImh0dHBzOi8vdGF1cmF5b3VoZWkuZ2l0aHViLmlvL2NvdmlkLTE5L2RhdGEva2FuamFoYXNzZWlqb3VreW91LmNzdlwiLHRydWUsJ1NKSVMnLCdVTklDT0RFJywgIHRoaXMuc2V0S2VuRGVhZCk7XHJcbiAgICAgIHRoaXMuZ2V0X2NzdihcImh0dHBzOi8vdGF1cmF5b3VoZWkuZ2l0aHViLmlvL2NvdmlkLTE5L2RhdGEvMzMwMDAxb2theWFtYWNvdmlkMTltZWRpY2Fsc3lzdGVtLmNzdlwiLHRydWUsJ1NKSVMnLCdVTklDT0RFJywgIHRoaXMuc2V0S2VuSXJ5b3UpO1xyXG4gICAgICAvL3RoaXMuZ2V0X2NzdihcImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9jb250ZW50L3Bjcl9wb3NpdGl2ZV9kYWlseS5jc3ZcIix0cnVlLCdVVEY4JywnVU5JQ09ERScsIHRoaXMuc2V0WmVua29rdURldGFpbCk7XHJcbiAgICAgIHRoaXMuZ2V0X2NzdihcImh0dHBzOi8vd3d3LnN0b3Bjb3ZpZDE5LmpwL2RhdGEvY292aWQxOWphcGFuLmNzdlwiLHRydWUsJ1VURjgnLCdVTklDT0RFJywgdGhpcy5zZXRaZW5rb2t1KTtcclxuICAgICAgdGhpcy5sYXN0dXBkYXRhKCk7XHJcbiAgICB9XHJcbiAgfSxcclxuICBtZXRob2RzOiB7XHJcbiAgICBjYXNoOiBmdW5jdGlvbigpe1xyXG4gICAgICB3aW5kb3cubmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIuZ2V0UmVnaXN0cmF0aW9ucygpLnRoZW4oZnVuY3Rpb24ocmVnaXN0cmF0aW9ucyl7XHJcbiAgICAgICAgZm9yKGxldCByZWdpc3RyYXRpb24gb2YgcmVnaXN0cmF0aW9ucyl7XHJcbiAgICAgICAgICByZWdpc3RyYXRpb24udW5yZWdpc3RlcigpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuICAgICAgcmV0dXJuIHRydWVcclxuICAgIH0sXHJcbiAgICAgIFxyXG4gICAgbGFzdHVwZGF0YTogZnVuY3Rpb24oKSB7XHJcbiAgICAgIGF4aW9zLmdldChcImh0dHBzOi8vd3d3LnN0b3Bjb3ZpZDE5LmpwL2RhdGEvY292aWQxOWphcGFuLmpzb25cIilcclxuICAgICAgLnRoZW4ocmVzcG9uc2UgPT57XHJcbiAgICAgICAgdGhpcy5sYXN0ID0gcmVzcG9uc2UuZGF0YVtcImxhc3RVcGRhdGVcIl1cclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKGVycm9yKSk7XHJcbiAgICB9LFxyXG4gICAgc2V0S2VuVWNoaXdha2U6IGZ1bmN0aW9uKGtlblV0aXdha2UpIHtcclxuICAgICAgdGhpcy5rZW5VdGl3YWtlID0ga2VuVXRpd2FrZVxyXG4gICAgICBjb25zb2xlLmxvZyh0aGlzLmtlblV0aXdha2UpXHJcbiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnRW50ZXIyJywgdGhpcy5rZW5VdGl3YWtlKVxyXG4gICAgfSxcclxuICAgIHNldEtlblBjcjogZnVuY3Rpb24oa2VuUGNyKXtcclxuICAgICAgdGhpcy5rZW5QY3IgPSBrZW5QY3JcclxuICAgIH0sXHJcbiAgICBzZXRLZW5EZWFkOiBmdW5jdGlvbihrZW5EZWFkKXtcclxuICAgICAgdGhpcy5rZW5EZWFkID0ga2VuRGVhZFxyXG4gICAgfSxcclxuICAgIHNldEtlbklyeW91OiBmdW5jdGlvbihrZW5JcnlvdSl7XHJcbiAgICAgIHRoaXMua2VuSXJ5b3UgPSBrZW5JcnlvdVxyXG4gICAgfSxcclxuICAgIHNldFplbmtva3U6IGZ1bmN0aW9uKFplbmtva3Upe1xyXG4gICAgICB0aGlzLlplbmtva3UgPSBaZW5rb2t1XHJcbiAgICB9LFxyXG4gICAgLy8gc2V0WmVua29rdURldGFpbDogZnVuY3Rpb24oWmVua29rdURldGFpbCl7XHJcbiAgICAvLyAgIHRoaXMuWmVua29rdURldGFpbCA9IFplbmtva3VEZXRhaWxcclxuICAgIC8vIH0sXHJcbiAgICBzZXRLZW5EZXRhaWxzOiBmdW5jdGlvbihrZW5EZXRhaWxzKXtcclxuICAgICAgdGhpcy5rZW5EZXRhaWxzID0ga2VuRGV0YWlsc1xyXG4gICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ0VudGVyJywgdGhpcy5rZW5EZXRhaWxzKVxyXG4gICAgfSxcclxuICAgIGdldF9jc3YodXJsLGNvbCxmcm9tLHRvLHNldHRlcil7XHJcbiAgICAgIGF4aW9zXHJcbiAgICAgICAgICAuZ2V0KHVybCwge1xyXG4gICAgICAgICAgICByZXNwb25zZVR5cGU6ICdhcnJheWJ1ZmZlcidcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5mcm9tKHJlc3BvbnNlLmRhdGEpXHJcbiAgICAgICAgICAgIGxldCBjc3YgPSBFbmNvZGluZy5jb252ZXJ0KGJ1ZmZlciwge1xyXG4gICAgICAgICAgICAgIGZyb206IGZyb20sXHJcbiAgICAgICAgICAgICAgdG86IHRvLFxyXG4gICAgICAgICAgICAgIHR5cGU6ICdzdHJpbmcnXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIGNzdiA9IGNzdi5yZXBsYWNlKC9eXFx1ZmVmZi8sJycpXHJcbiAgICAgICAgICAgIHBhcnNlKGNzdiwge1xyXG4gICAgICAgICAgICAgIGNvbHVtbnM6IGNvbCxcclxuICAgICAgICAgICAgICBxdW90ZTogJ1wiJyxcclxuICAgICAgICAgICAgICBsdHJpbTogdHJ1ZSxcclxuICAgICAgICAgICAgICBydHJpbTogdHJ1ZSxcclxuICAgICAgICAgICAgICBkZWxpbWl0ZXI6ICcsJyxcclxuICAgICAgICAgICAgICBjYXN0OiB0cnVlXHJcbiAgICAgICAgICAgIH0sIChlcnJvciwgb3V0cHV0KSA9PiB7XHJcbiAgICAgICAgICAgICAgc2V0dGVyKE9iamVjdC5mcmVlemUob3V0cHV0KSk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKGVycm9yKSk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG5cclxuPCEtLSBBZGQgXCJzY29wZWRcIiBhdHRyaWJ1dGUgdG8gbGltaXQgQ1NTIHRvIHRoaXMgY29tcG9uZW50IG9ubHkgLS0+XHJcbjxzdHlsZSBzY29wZWQ+XHJcblxyXG4uZmxleHtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuLmJveHtcclxuICB3aWR0aDogNjAlO1xyXG4gIG1hcmdpbjogMTAlIGF1dG87XHJcbn1cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDgwcHgpe1xyXG4gIC5ib3h7XHJcbiAgICBmb250LXNpemU6IDUwJTtcclxuICAgIG1hcmdpbjogNSUgYXV0bztcclxuICB9XHJcbn1cclxuaDF7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGNvbG9yOiAjNmViMGY5O1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XHJcbiAgLXdlYmtpdC1ib3gtcmVmbGVjdDogYmVsb3cgLTEwcHggLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLHJnYmEoMCwwLDAsMCkscmdiYSgwLDAsMCwwKSAxMCUscmdiYSgwLCAwLCAwLCAwLjYpKTtcclxuICBtYXJnaW46IDMwcHggMDtcclxuICBmb250LXNpemU6IDI0cHg7XHJcbn1cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDgwcHgpe1xyXG4gIGgxe1xyXG4gICAgZm9udC1zaXplOiAzNnB4O1xyXG4gIH1cclxufVxyXG4ubG9hZGVyIHtcclxuICBjb2xvcjojNmViMGY5O1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxuICBtYXJnaW46IDEwMHB4IGF1dG87XHJcbiAgd2lkdGg6IDFlbTtcclxuICBoZWlnaHQ6IDFlbTtcclxuICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRleHQtaW5kZW50OiAtOTk5OWVtO1xyXG4gIC13ZWJraXQtYW5pbWF0aW9uOiBsb2FkNCAxLjNzIGluZmluaXRlIGxpbmVhcjtcclxuICBhbmltYXRpb246IGxvYWQ0IDEuM3MgaW5maW5pdGUgbGluZWFyO1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xyXG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xyXG59XHJcbkAtd2Via2l0LWtleWZyYW1lcyBsb2FkNCB7XHJcbiAgMCUsXHJcbiAgMTAwJSB7XHJcbiAgICBib3gtc2hhZG93OiAwIC0zZW0gMCAwLjJlbSwgMmVtIC0yZW0gMCAwZW0sIDNlbSAwIDAgLTFlbSwgMmVtIDJlbSAwIC0xZW0sIDAgM2VtIDAgLTFlbSwgLTJlbSAyZW0gMCAtMWVtLCAtM2VtIDAgMCAtMWVtLCAtMmVtIC0yZW0gMCAwO1xyXG4gIH1cclxuICAxMi41JSB7XHJcbiAgICBib3gtc2hhZG93OiAwIC0zZW0gMCAwLCAyZW0gLTJlbSAwIDAuMmVtLCAzZW0gMCAwIDAsIDJlbSAyZW0gMCAtMWVtLCAwIDNlbSAwIC0xZW0sIC0yZW0gMmVtIDAgLTFlbSwgLTNlbSAwIDAgLTFlbSwgLTJlbSAtMmVtIDAgLTFlbTtcclxuICB9XHJcbiAgMjUlIHtcclxuICAgIGJveC1zaGFkb3c6IDAgLTNlbSAwIC0wLjVlbSwgMmVtIC0yZW0gMCAwLCAzZW0gMCAwIDAuMmVtLCAyZW0gMmVtIDAgMCwgMCAzZW0gMCAtMWVtLCAtMmVtIDJlbSAwIC0xZW0sIC0zZW0gMCAwIC0xZW0sIC0yZW0gLTJlbSAwIC0xZW07XHJcbiAgfVxyXG4gIDM3LjUlIHtcclxuICAgIGJveC1zaGFkb3c6IDAgLTNlbSAwIC0xZW0sIDJlbSAtMmVtIDAgLTFlbSwgM2VtIDBlbSAwIDAsIDJlbSAyZW0gMCAwLjJlbSwgMCAzZW0gMCAwZW0sIC0yZW0gMmVtIDAgLTFlbSwgLTNlbSAwZW0gMCAtMWVtLCAtMmVtIC0yZW0gMCAtMWVtO1xyXG4gIH1cclxuICA1MCUge1xyXG4gICAgYm94LXNoYWRvdzogMCAtM2VtIDAgLTFlbSwgMmVtIC0yZW0gMCAtMWVtLCAzZW0gMCAwIC0xZW0sIDJlbSAyZW0gMCAwZW0sIDAgM2VtIDAgMC4yZW0sIC0yZW0gMmVtIDAgMCwgLTNlbSAwZW0gMCAtMWVtLCAtMmVtIC0yZW0gMCAtMWVtO1xyXG4gIH1cclxuICA2Mi41JSB7XHJcbiAgICBib3gtc2hhZG93OiAwIC0zZW0gMCAtMWVtLCAyZW0gLTJlbSAwIC0xZW0sIDNlbSAwIDAgLTFlbSwgMmVtIDJlbSAwIC0xZW0sIDAgM2VtIDAgMCwgLTJlbSAyZW0gMCAwLjJlbSwgLTNlbSAwIDAgMCwgLTJlbSAtMmVtIDAgLTFlbTtcclxuICB9XHJcbiAgNzUlIHtcclxuICAgIGJveC1zaGFkb3c6IDBlbSAtM2VtIDAgLTFlbSwgMmVtIC0yZW0gMCAtMWVtLCAzZW0gMGVtIDAgLTFlbSwgMmVtIDJlbSAwIC0xZW0sIDAgM2VtIDAgLTFlbSwgLTJlbSAyZW0gMCAwLCAtM2VtIDBlbSAwIDAuMmVtLCAtMmVtIC0yZW0gMCAwO1xyXG4gIH1cclxuICA4Ny41JSB7XHJcbiAgICBib3gtc2hhZG93OiAwZW0gLTNlbSAwIDAsIDJlbSAtMmVtIDAgLTFlbSwgM2VtIDAgMCAtMWVtLCAyZW0gMmVtIDAgLTFlbSwgMCAzZW0gMCAtMWVtLCAtMmVtIDJlbSAwIDAsIC0zZW0gMGVtIDAgMCwgLTJlbSAtMmVtIDAgMC4yZW07XHJcbiAgfVxyXG59XHJcbkBrZXlmcmFtZXMgbG9hZDQge1xyXG4gIDAlLFxyXG4gIDEwMCUge1xyXG4gICAgYm94LXNoYWRvdzogMCAtM2VtIDAgMC4yZW0sIDJlbSAtMmVtIDAgMGVtLCAzZW0gMCAwIC0xZW0sIDJlbSAyZW0gMCAtMWVtLCAwIDNlbSAwIC0xZW0sIC0yZW0gMmVtIDAgLTFlbSwgLTNlbSAwIDAgLTFlbSwgLTJlbSAtMmVtIDAgMDtcclxuICB9XHJcbiAgMTIuNSUge1xyXG4gICAgYm94LXNoYWRvdzogMCAtM2VtIDAgMCwgMmVtIC0yZW0gMCAwLjJlbSwgM2VtIDAgMCAwLCAyZW0gMmVtIDAgLTFlbSwgMCAzZW0gMCAtMWVtLCAtMmVtIDJlbSAwIC0xZW0sIC0zZW0gMCAwIC0xZW0sIC0yZW0gLTJlbSAwIC0xZW07XHJcbiAgfVxyXG4gIDI1JSB7XHJcbiAgICBib3gtc2hhZG93OiAwIC0zZW0gMCAtMC41ZW0sIDJlbSAtMmVtIDAgMCwgM2VtIDAgMCAwLjJlbSwgMmVtIDJlbSAwIDAsIDAgM2VtIDAgLTFlbSwgLTJlbSAyZW0gMCAtMWVtLCAtM2VtIDAgMCAtMWVtLCAtMmVtIC0yZW0gMCAtMWVtO1xyXG4gIH1cclxuICAzNy41JSB7XHJcbiAgICBib3gtc2hhZG93OiAwIC0zZW0gMCAtMWVtLCAyZW0gLTJlbSAwIC0xZW0sIDNlbSAwZW0gMCAwLCAyZW0gMmVtIDAgMC4yZW0sIDAgM2VtIDAgMGVtLCAtMmVtIDJlbSAwIC0xZW0sIC0zZW0gMGVtIDAgLTFlbSwgLTJlbSAtMmVtIDAgLTFlbTtcclxuICB9XHJcbiAgNTAlIHtcclxuICAgIGJveC1zaGFkb3c6IDAgLTNlbSAwIC0xZW0sIDJlbSAtMmVtIDAgLTFlbSwgM2VtIDAgMCAtMWVtLCAyZW0gMmVtIDAgMGVtLCAwIDNlbSAwIDAuMmVtLCAtMmVtIDJlbSAwIDAsIC0zZW0gMGVtIDAgLTFlbSwgLTJlbSAtMmVtIDAgLTFlbTtcclxuICB9XHJcbiAgNjIuNSUge1xyXG4gICAgYm94LXNoYWRvdzogMCAtM2VtIDAgLTFlbSwgMmVtIC0yZW0gMCAtMWVtLCAzZW0gMCAwIC0xZW0sIDJlbSAyZW0gMCAtMWVtLCAwIDNlbSAwIDAsIC0yZW0gMmVtIDAgMC4yZW0sIC0zZW0gMCAwIDAsIC0yZW0gLTJlbSAwIC0xZW07XHJcbiAgfVxyXG4gIDc1JSB7XHJcbiAgICBib3gtc2hhZG93OiAwZW0gLTNlbSAwIC0xZW0sIDJlbSAtMmVtIDAgLTFlbSwgM2VtIDBlbSAwIC0xZW0sIDJlbSAyZW0gMCAtMWVtLCAwIDNlbSAwIC0xZW0sIC0yZW0gMmVtIDAgMCwgLTNlbSAwZW0gMCAwLjJlbSwgLTJlbSAtMmVtIDAgMDtcclxuICB9XHJcbiAgODcuNSUge1xyXG4gICAgYm94LXNoYWRvdzogMGVtIC0zZW0gMCAwLCAyZW0gLTJlbSAwIC0xZW0sIDNlbSAwIDAgLTFlbSwgMmVtIDJlbSAwIC0xZW0sIDAgM2VtIDAgLTFlbSwgLTJlbSAyZW0gMCAwLCAtM2VtIDBlbSAwIDAsIC0yZW0gLTJlbSAwIDAuMmVtO1xyXG4gIH1cclxufVxyXG4uYm94Mjcge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luOiAxcmVtIGF1dG87XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgYm9yZGVyOiBzb2xpZCAzcHggI2Y4NGM0YztcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG59XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4MHB4KXtcclxuICAuYm94Mjd7XHJcbiAgICBtYXJnaW46IDNyZW0gYXV0bztcclxuICB9XHJcbn1cclxuLmJveDI3IC5ib3gtdGl0bGUge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdG9wOiAtMjdweDtcclxuICAgIGxlZnQ6IC0zcHg7XHJcbiAgICBwYWRkaW5nOiAwIDlweDtcclxuICAgIGhlaWdodDogMjVweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xyXG4gICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgYmFja2dyb3VuZDogI2Y4NGM0YztcclxuICAgIGNvbG9yOiAjZmZmZmZmO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHggNXB4IDAgMDtcclxufVxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0ODBweCl7XHJcbiAgLmJveDI3IC5ib3gtdGl0bGV7XHJcbiAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICB0b3A6IC00NXB4O1xyXG4gICAgcGFkZGluZzo5cHg7XHJcbiAgfVxyXG59XHJcbi50YWItbGFiZWwge1xyXG4gICAgY29sb3I6IFdoaXRlO1xyXG4gICAgYmFja2dyb3VuZDogTGlnaHRHcmF5O1xyXG4gICAgbWFyZ2luOiAwIDA7XHJcbiAgICBwYWRkaW5nOiAzcHggMTBweDtcclxuICAgIG9yZGVyOiAtMTtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuXHJcbn1cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDgwcHgpe1xyXG4gIC50YWItbGFiZWx7XHJcbiAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICB9XHJcbn1cclxuLnRleHQge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgZm9udC1zaXplOiAyNXB4O1xyXG4gICAgZm9udC1mYW1pbHk6IE1TIHNhbnMtc2VyaWY7XHJcbiAgICBtYXJnaW4tdG9wOiAxZW07XHJcbn1cclxuLnVlb3tcclxuICBmb250LXNpemU6IDAuOHJlbTtcclxufVxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0ODBweCl7XHJcbiAgLnRleHR7XHJcbiAgICBmb250LXNpemU6IDQwcHg7XHJcbiAgfVxyXG4gIC51ZW97XHJcbiAgICBmb250LXNpemU6IDFyZW07XHJcbiAgfVxyXG59XHJcbi8qIOOCouOCr+ODhuOCo+ODluOBquOCv+ODliAqL1xyXG4udGFiLXN3aXRjaDpjaGVja2VkKy50YWItbGFiZWwge1xyXG4gICAgYmFja2dyb3VuZDogRGVlcFNreUJsdWU7XHJcbn1cclxuLnRhYi1zd2l0Y2g6Y2hlY2tlZCsudGFiLWxhYmVsKy50ZXh0IHtcclxuICAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG4vKiDjg6njgrjjgqrjg5zjgr/jg7PpnZ7ooajnpLogKi9cclxuLnRhYi1zd2l0Y2gge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG48L3N0eWxlPiIsImltcG9ydCB7IHJlbmRlciB9IGZyb20gXCIuL01haW5wYWdlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0zMWQxMTE2OCZzY29wZWQ9dHJ1ZSZiaW5kaW5ncz17XFxcInJlYWR5VG9zaG93TWFpblBhZ2VcXFwiOlxcXCJvcHRpb25zXFxcIixcXFwiemVua29rdUlkXFxcIjpcXFwib3B0aW9uc1xcXCIsXFxcInVzZVxcXCI6XFxcIm9wdGlvbnNcXFwiLFxcXCJhbGxcXFwiOlxcXCJvcHRpb25zXFxcIixcXFwidXBkYXRlXFxcIjpcXFwib3B0aW9uc1xcXCIsXFxcImluZmVjdGVkXFxcIjpcXFwib3B0aW9uc1xcXCIsXFxcInBjclxcXCI6XFxcIm9wdGlvbnNcXFwiLFxcXCJkZWFkXFxcIjpcXFwib3B0aW9uc1xcXCIsXFxcImRpc2NoYXJnZVxcXCI6XFxcIm9wdGlvbnNcXFwiLFxcXCJjYXNoXFxcIjpcXFwib3B0aW9uc1xcXCIsXFxcImxhc3R1cGRhdGFcXFwiOlxcXCJvcHRpb25zXFxcIixcXFwic2V0S2VuVWNoaXdha2VcXFwiOlxcXCJvcHRpb25zXFxcIixcXFwic2V0S2VuUGNyXFxcIjpcXFwib3B0aW9uc1xcXCIsXFxcInNldEtlbkRlYWRcXFwiOlxcXCJvcHRpb25zXFxcIixcXFwic2V0S2VuSXJ5b3VcXFwiOlxcXCJvcHRpb25zXFxcIixcXFwic2V0WmVua29rdVxcXCI6XFxcIm9wdGlvbnNcXFwiLFxcXCJzZXRLZW5EZXRhaWxzXFxcIjpcXFwib3B0aW9uc1xcXCIsXFxcImdldF9jc3ZcXFwiOlxcXCJvcHRpb25zXFxcIn1cIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9NYWlucGFnZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuZXhwb3J0ICogZnJvbSBcIi4vTWFpbnBhZ2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcblxuaW1wb3J0IFwiLi9NYWlucGFnZS52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0zMWQxMTE2OCZzY29wZWQ9dHJ1ZSZsYW5nPWNzc1wiXG5zY3JpcHQucmVuZGVyID0gcmVuZGVyXG5zY3JpcHQuX19zY29wZUlkID0gXCJkYXRhLXYtMzFkMTExNjhcIlxuXG5leHBvcnQgZGVmYXVsdCBzY3JpcHQiLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9sb2FkZXIuanM/P3JlZi0tNi1vbmVPZi0xLTAhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNi1vbmVPZi0xLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXItdjE2L2Rpc3Qvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNi1vbmVPZi0xLTIhLi4vLi4vbm9kZV9tb2R1bGVzL2NhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXItdjE2L2Rpc3QvaW5kZXguanM/P3JlZi0tMC0xIS4vTWFpbnBhZ2UudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MzFkMTExNjgmc2NvcGVkPXRydWUmbGFuZz1jc3NcIiIsIi8vIGEgc3RyaW5nIG9mIGFsbCB2YWxpZCB1bmljb2RlIHdoaXRlc3BhY2VzXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbWF4LWxlblxubW9kdWxlLmV4cG9ydHMgPSAnXFx1MDAwOVxcdTAwMEFcXHUwMDBCXFx1MDAwQ1xcdTAwMERcXHUwMDIwXFx1MDBBMFxcdTE2ODBcXHUyMDAwXFx1MjAwMVxcdTIwMDJcXHUyMDAzXFx1MjAwNFxcdTIwMDVcXHUyMDA2XFx1MjAwN1xcdTIwMDhcXHUyMDA5XFx1MjAwQVxcdTIwMkZcXHUyMDVGXFx1MzAwMFxcdTIwMjhcXHUyMDI5XFx1RkVGRic7XG4iLCJ2YXIgcmVxdWlyZU9iamVjdENvZXJjaWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGUnKTtcbnZhciB3aGl0ZXNwYWNlcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93aGl0ZXNwYWNlcycpO1xuXG52YXIgd2hpdGVzcGFjZSA9ICdbJyArIHdoaXRlc3BhY2VzICsgJ10nO1xudmFyIGx0cmltID0gUmVnRXhwKCdeJyArIHdoaXRlc3BhY2UgKyB3aGl0ZXNwYWNlICsgJyonKTtcbnZhciBydHJpbSA9IFJlZ0V4cCh3aGl0ZXNwYWNlICsgd2hpdGVzcGFjZSArICcqJCcpO1xuXG4vLyBgU3RyaW5nLnByb3RvdHlwZS57IHRyaW0sIHRyaW1TdGFydCwgdHJpbUVuZCwgdHJpbUxlZnQsIHRyaW1SaWdodCB9YCBtZXRob2RzIGltcGxlbWVudGF0aW9uXG52YXIgY3JlYXRlTWV0aG9kID0gZnVuY3Rpb24gKFRZUEUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgkdGhpcykge1xuICAgIHZhciBzdHJpbmcgPSBTdHJpbmcocmVxdWlyZU9iamVjdENvZXJjaWJsZSgkdGhpcykpO1xuICAgIGlmIChUWVBFICYgMSkgc3RyaW5nID0gc3RyaW5nLnJlcGxhY2UobHRyaW0sICcnKTtcbiAgICBpZiAoVFlQRSAmIDIpIHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKHJ0cmltLCAnJyk7XG4gICAgcmV0dXJuIHN0cmluZztcbiAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAvLyBgU3RyaW5nLnByb3RvdHlwZS57IHRyaW1MZWZ0LCB0cmltU3RhcnQgfWAgbWV0aG9kc1xuICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1zdHJpbmcucHJvdG90eXBlLnRyaW1zdGFydFxuICBzdGFydDogY3JlYXRlTWV0aG9kKDEpLFxuICAvLyBgU3RyaW5nLnByb3RvdHlwZS57IHRyaW1SaWdodCwgdHJpbUVuZCB9YCBtZXRob2RzXG4gIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUudHJpbWVuZFxuICBlbmQ6IGNyZWF0ZU1ldGhvZCgyKSxcbiAgLy8gYFN0cmluZy5wcm90b3R5cGUudHJpbWAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUudHJpbVxuICB0cmltOiBjcmVhdGVNZXRob2QoMylcbn07XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtb2JqZWN0Jyk7XG52YXIgc2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LXNldC1wcm90b3R5cGUtb2YnKTtcblxuLy8gbWFrZXMgc3ViY2xhc3Npbmcgd29yayBjb3JyZWN0IGZvciB3cmFwcGVkIGJ1aWx0LWluc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoJHRoaXMsIGR1bW15LCBXcmFwcGVyKSB7XG4gIHZhciBOZXdUYXJnZXQsIE5ld1RhcmdldFByb3RvdHlwZTtcbiAgaWYgKFxuICAgIC8vIGl0IGNhbiB3b3JrIG9ubHkgd2l0aCBuYXRpdmUgYHNldFByb3RvdHlwZU9mYFxuICAgIHNldFByb3RvdHlwZU9mICYmXG4gICAgLy8gd2UgaGF2ZW4ndCBjb21wbGV0ZWx5IGNvcnJlY3QgcHJlLUVTNiB3YXkgZm9yIGdldHRpbmcgYG5ldy50YXJnZXRgLCBzbyB1c2UgdGhpc1xuICAgIHR5cGVvZiAoTmV3VGFyZ2V0ID0gZHVtbXkuY29uc3RydWN0b3IpID09ICdmdW5jdGlvbicgJiZcbiAgICBOZXdUYXJnZXQgIT09IFdyYXBwZXIgJiZcbiAgICBpc09iamVjdChOZXdUYXJnZXRQcm90b3R5cGUgPSBOZXdUYXJnZXQucHJvdG90eXBlKSAmJlxuICAgIE5ld1RhcmdldFByb3RvdHlwZSAhPT0gV3JhcHBlci5wcm90b3R5cGVcbiAgKSBzZXRQcm90b3R5cGVPZigkdGhpcywgTmV3VGFyZ2V0UHJvdG90eXBlKTtcbiAgcmV0dXJuICR0aGlzO1xufTtcbiIsInZhciBwYXRoID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3BhdGgnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzJyk7XG52YXIgd3JhcHBlZFdlbGxLbm93blN5bWJvbE1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbC13cmFwcGVkJyk7XG52YXIgZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eScpLmY7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKE5BTUUpIHtcbiAgdmFyIFN5bWJvbCA9IHBhdGguU3ltYm9sIHx8IChwYXRoLlN5bWJvbCA9IHt9KTtcbiAgaWYgKCFoYXMoU3ltYm9sLCBOQU1FKSkgZGVmaW5lUHJvcGVydHkoU3ltYm9sLCBOQU1FLCB7XG4gICAgdmFsdWU6IHdyYXBwZWRXZWxsS25vd25TeW1ib2xNb2R1bGUuZihOQU1FKVxuICB9KTtcbn07XG4iLCI8dGVtcGxhdGU+XHJcbiAgPGZvcm0+XHJcbiAgICA8ZGl2IGNsYXNzPVwiYm94MjdcIj5cclxuICAgICAgPHNwYW4gY2xhc3M9XCJib3gtdGl0bGVcIj57e21zZ319PC9zcGFuPlxyXG4gICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgOmlkPVwiemVua29rdUlkXCIgbmFtZT1cIlRBQlwiIGNsYXNzPVwidGFiLXN3aXRjaFwiIGNoZWNrZWQ9XCJjaGVja2VkXCIgLz48bGFiZWwgOmZvcj1cInplbmtva3VJZFwiIGNsYXNzPVwidGFiLWxhYmVsXCI+5YWo5Zu9PC9sYWJlbD5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dFwiPlxyXG4gICAgICAgICAge3sgaW5mZWN0ZWQuemVua29rdSB9fTxicj5cclxuICAgICAgICAgIDxwIGNsYXNzPVwidWVvXCIgPnt7aW5mZWN0ZWQuZGF0YTF9fTwvcD5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiIDppZD1cIm9rYXlhbWFJZFwiIG5hbWU9XCJUQUJcIiBjbGFzcz1cInRhYi1zd2l0Y2hcIiAvPjxsYWJlbCA6Zm9yPVwib2theWFtYUlkXCIgY2xhc3M9XCJ0YWItbGFiZWxcIj7lsqHlsbE8L2xhYmVsPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0XCI+XHJcbiAgICAgICAgICB7eyBpbmZlY3RlZC5va2F5YW1hIH19PGJyPlxyXG4gICAgICAgICAgPHAgY2xhc3M9XCJ1ZW9cIj57e2luZmVjdGVkLmRhdGEyfX08L3A+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8aW5wdXQgdi1pZj1cIm1zZz09J+aEn+afk+iAheaVsCdcIiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJhaXVcIiB2YWx1ZT1cIuips+e0sFwiIEBjbGljaz1cIiRyb3V0ZXIucHVzaCgnL0RldGFpbHNwYWdlJylcIiAvPlxyXG4gICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgOmlkPVwidHN1eWFtYUlkXCIgbmFtZT1cIlRBQlwiIGNsYXNzPVwidGFiLXN3aXRjaFwiIC8+PGxhYmVsIDpmb3I9XCJ0c3V5YW1hSWRcIiBjbGFzcz1cInRhYi1sYWJlbFwiPua0peWxsTwvbGFiZWw+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInRleHRcIj5cclxuICAgICAgICAgIHt7aW5mZWN0ZWQudHN1eWFtYX19PGJyPlxyXG4gICAgICAgICAgPHAgY2xhc3M9XCJ1ZW9cIj57e2luZmVjdGVkLmRhdGEzfX08L3A+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICA8L2Zvcm0+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIG5hbWU6ICdsYWJlbGJveCcsXHJcbiAgY29tcHV0ZWQ6IHtcclxuICAgIHplbmtva3VJZDogZnVuY3Rpb24oKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmlkbmFtZSArICd6ZW5rb2t1J1xyXG4gICAgfSxcclxuICAgIG9rYXlhbWFJZDogZnVuY3Rpb24oKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmlkbmFtZSArICdva2F5YW1hJ1xyXG4gICAgfSxcclxuICAgIHRzdXlhbWFJZDogZnVuY3Rpb24oKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmlkbmFtZSArICd0c3V5YW1hJ1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgcHJvcHM6e1xyXG4gICAgbXNnOntcclxuICAgICAgdHlwZTogU3RyaW5nXHJcbiAgICB9LFxyXG4gICAgaWRuYW1lOntcclxuICAgICAgdHlwZTogU3RyaW5nXHJcbiAgICB9LFxyXG4gICAgaW5mZWN0ZWQ6IHtcclxuICAgICAgdHlwZTogT2JqZWN0XHJcbiAgICB9IFxyXG4gIH1cclxuICBcclxufVxyXG48L3NjcmlwdD5cclxuXHJcbjxzdHlsZT5cclxuLmJveDI3IHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG1hcmdpbjogM3JlbSBhdXRvO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlcjogc29saWQgM3B4ICNmODRjNGM7XHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGhlaWdodDogOXJlbTtcclxufVxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0ODBweCl7XHJcbiAgLmJveDI3e1xyXG4gICAgbWFyZ2luOiA1cmVtIGF1dG87XHJcbiAgICBoZWlnaHQ6IDE2cmVtO1xyXG4gIH1cclxufVxyXG4uYm94MjcgLmJveC10aXRsZSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB0b3A6IC0yN3B4O1xyXG4gICAgbGVmdDogLTNweDtcclxuICAgIHBhZGRpbmc6IDAgOXB4O1xyXG4gICAgaGVpZ2h0OiAyNXB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDI1cHg7XHJcbiAgICBmb250LXNpemU6IDFyZW07XHJcbiAgICBiYWNrZ3JvdW5kOiAjZjg0YzRjO1xyXG4gICAgY29sb3I6ICNmZmZmZmY7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweCA1cHggMCAwO1xyXG59XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4MHB4KXtcclxuICAuYm94MjcgLmJveC10aXRsZXtcclxuICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgIHRvcDogLTQ1cHg7XHJcbiAgICBwYWRkaW5nOjlweDtcclxuICB9XHJcbn1cclxuXHJcbi50YWItbGFiZWwge1xyXG4gICAgY29sb3I6IFdoaXRlO1xyXG4gICAgYmFja2dyb3VuZDogTGlnaHRHcmF5O1xyXG4gICAgbWFyZ2luOiAwIDA7XHJcbiAgICBwYWRkaW5nOiAzcHggMTBweDtcclxuICAgIG9yZGVyOiAtMTtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGhlaWdodDogMS4zcmVtO1xyXG5cclxufVxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0ODBweCl7XHJcbiAgLnRhYi1sYWJlbHtcclxuICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgaGVpZ2h0OiAycmVtO1xyXG4gIH1cclxufVxyXG4udGV4dCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICBmb250LXNpemU6IDI1cHg7XHJcbiAgICBmb250LWZhbWlseTogTVMgc2Fucy1zZXJpZjtcclxuICAgIG1hcmdpbi10b3A6IDFlbTtcclxufVxyXG4udWVve1xyXG4gIGZvbnQtc2l6ZTogMC44cmVtO1xyXG59XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4MHB4KXtcclxuICAudGV4dHtcclxuICAgIGZvbnQtc2l6ZTogNDBweDtcclxuICB9XHJcbiAgLnVlb3tcclxuICAgIGZvbnQtc2l6ZTogMXJlbTtcclxuICB9XHJcbn1cclxuLyog44Ki44Kv44OG44Kj44OW44Gq44K/44OWICovXHJcbi50YWItc3dpdGNoOmNoZWNrZWQrLnRhYi1sYWJlbCB7XHJcbiAgICBiYWNrZ3JvdW5kOiBEZWVwU2t5Qmx1ZTtcclxufVxyXG4udGFiLXN3aXRjaDpjaGVja2VkKy50YWItbGFiZWwrLnRleHQge1xyXG4gICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcbi8qIOODqeOCuOOCquODnOOCv+ODs+mdnuihqOekuiAqL1xyXG4udGFiLXN3aXRjaCB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcbi5haXV7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgbWFyZ2luOiAwIDAgMCBhdXRvO1xyXG59XHJcbi50YWItc3dpdGNoOmNoZWNrZWQrLnRhYi1sYWJlbCsudGV4dCsuYWl1e1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbjwvc3R5bGU+IiwiaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSBcIi4vbGFiZWxib3gudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTAzNmZmNzE0JmJpbmRpbmdzPXtcXFwiemVua29rdUlkXFxcIjpcXFwib3B0aW9uc1xcXCIsXFxcIm9rYXlhbWFJZFxcXCI6XFxcIm9wdGlvbnNcXFwiLFxcXCJ0c3V5YW1hSWRcXFwiOlxcXCJvcHRpb25zXFxcIixcXFwibXNnXFxcIjpcXFwicHJvcHNcXFwiLFxcXCJpZG5hbWVcXFwiOlxcXCJwcm9wc1xcXCIsXFxcImluZmVjdGVkXFxcIjpcXFwicHJvcHNcXFwifVwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2xhYmVsYm94LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi9sYWJlbGJveC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuXG5pbXBvcnQgXCIuL2xhYmVsYm94LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmxhbmc9Y3NzXCJcbnNjcmlwdC5yZW5kZXIgPSByZW5kZXJcblxuZXhwb3J0IGRlZmF1bHQgc2NyaXB0IiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIGdldEJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluJyk7XG52YXIgSVNfUFVSRSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1wdXJlJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcbnZhciBOQVRJVkVfU1lNQk9MID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL25hdGl2ZS1zeW1ib2wnKTtcbnZhciBVU0VfU1lNQk9MX0FTX1VJRCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy91c2Utc3ltYm9sLWFzLXVpZCcpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcycpO1xudmFyIGlzQXJyYXkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtYXJyYXknKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1vYmplY3QnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hbi1vYmplY3QnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1vYmplY3QnKTtcbnZhciB0b0luZGV4ZWRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8taW5kZXhlZC1vYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1wcmltaXRpdmUnKTtcbnZhciBjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5LWRlc2NyaXB0b3InKTtcbnZhciBuYXRpdmVPYmplY3RDcmVhdGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWNyZWF0ZScpO1xudmFyIG9iamVjdEtleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWtleXMnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LW5hbWVzJyk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lc0V4dGVybmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LW5hbWVzLWV4dGVybmFsJyk7XG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LXN5bWJvbHMnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcicpO1xudmFyIGRlZmluZVByb3BlcnR5TW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHknKTtcbnZhciBwcm9wZXJ0eUlzRW51bWVyYWJsZU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtcHJvcGVydHktaXMtZW51bWVyYWJsZScpO1xudmFyIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jcmVhdGUtbm9uLWVudW1lcmFibGUtcHJvcGVydHknKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWRlZmluZScpO1xudmFyIHNoYXJlZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zaGFyZWQnKTtcbnZhciBzaGFyZWRLZXkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2hhcmVkLWtleScpO1xudmFyIGhpZGRlbktleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGlkZGVuLWtleXMnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdWlkJyk7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG52YXIgd3JhcHBlZFdlbGxLbm93blN5bWJvbE1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbC13cmFwcGVkJyk7XG52YXIgZGVmaW5lV2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RlZmluZS13ZWxsLWtub3duLXN5bWJvbCcpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NldC10by1zdHJpbmctdGFnJyk7XG52YXIgSW50ZXJuYWxTdGF0ZU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbnRlcm5hbC1zdGF0ZScpO1xudmFyICRmb3JFYWNoID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LWl0ZXJhdGlvbicpLmZvckVhY2g7XG5cbnZhciBISURERU4gPSBzaGFyZWRLZXkoJ2hpZGRlbicpO1xudmFyIFNZTUJPTCA9ICdTeW1ib2wnO1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xudmFyIFRPX1BSSU1JVElWRSA9IHdlbGxLbm93blN5bWJvbCgndG9QcmltaXRpdmUnKTtcbnZhciBzZXRJbnRlcm5hbFN0YXRlID0gSW50ZXJuYWxTdGF0ZU1vZHVsZS5zZXQ7XG52YXIgZ2V0SW50ZXJuYWxTdGF0ZSA9IEludGVybmFsU3RhdGVNb2R1bGUuZ2V0dGVyRm9yKFNZTUJPTCk7XG52YXIgT2JqZWN0UHJvdG90eXBlID0gT2JqZWN0W1BST1RPVFlQRV07XG52YXIgJFN5bWJvbCA9IGdsb2JhbC5TeW1ib2w7XG52YXIgJHN0cmluZ2lmeSA9IGdldEJ1aWx0SW4oJ0pTT04nLCAnc3RyaW5naWZ5Jyk7XG52YXIgbmF0aXZlR2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yTW9kdWxlLmY7XG52YXIgbmF0aXZlRGVmaW5lUHJvcGVydHkgPSBkZWZpbmVQcm9wZXJ0eU1vZHVsZS5mO1xudmFyIG5hdGl2ZUdldE93blByb3BlcnR5TmFtZXMgPSBnZXRPd25Qcm9wZXJ0eU5hbWVzRXh0ZXJuYWwuZjtcbnZhciBuYXRpdmVQcm9wZXJ0eUlzRW51bWVyYWJsZSA9IHByb3BlcnR5SXNFbnVtZXJhYmxlTW9kdWxlLmY7XG52YXIgQWxsU3ltYm9scyA9IHNoYXJlZCgnc3ltYm9scycpO1xudmFyIE9iamVjdFByb3RvdHlwZVN5bWJvbHMgPSBzaGFyZWQoJ29wLXN5bWJvbHMnKTtcbnZhciBTdHJpbmdUb1N5bWJvbFJlZ2lzdHJ5ID0gc2hhcmVkKCdzdHJpbmctdG8tc3ltYm9sLXJlZ2lzdHJ5Jyk7XG52YXIgU3ltYm9sVG9TdHJpbmdSZWdpc3RyeSA9IHNoYXJlZCgnc3ltYm9sLXRvLXN0cmluZy1yZWdpc3RyeScpO1xudmFyIFdlbGxLbm93blN5bWJvbHNTdG9yZSA9IHNoYXJlZCgnd2tzJyk7XG52YXIgUU9iamVjdCA9IGdsb2JhbC5RT2JqZWN0O1xuLy8gRG9uJ3QgdXNlIHNldHRlcnMgaW4gUXQgU2NyaXB0LCBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMTczXG52YXIgVVNFX1NFVFRFUiA9ICFRT2JqZWN0IHx8ICFRT2JqZWN0W1BST1RPVFlQRV0gfHwgIVFPYmplY3RbUFJPVE9UWVBFXS5maW5kQ2hpbGQ7XG5cbi8vIGZhbGxiYWNrIGZvciBvbGQgQW5kcm9pZCwgaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTY4N1xudmFyIHNldFN5bWJvbERlc2NyaXB0b3IgPSBERVNDUklQVE9SUyAmJiBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBuYXRpdmVPYmplY3RDcmVhdGUobmF0aXZlRGVmaW5lUHJvcGVydHkoe30sICdhJywge1xuICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbmF0aXZlRGVmaW5lUHJvcGVydHkodGhpcywgJ2EnLCB7IHZhbHVlOiA3IH0pLmE7IH1cbiAgfSkpLmEgIT0gNztcbn0pID8gZnVuY3Rpb24gKE8sIFAsIEF0dHJpYnV0ZXMpIHtcbiAgdmFyIE9iamVjdFByb3RvdHlwZURlc2NyaXB0b3IgPSBuYXRpdmVHZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoT2JqZWN0UHJvdG90eXBlLCBQKTtcbiAgaWYgKE9iamVjdFByb3RvdHlwZURlc2NyaXB0b3IpIGRlbGV0ZSBPYmplY3RQcm90b3R5cGVbUF07XG4gIG5hdGl2ZURlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpO1xuICBpZiAoT2JqZWN0UHJvdG90eXBlRGVzY3JpcHRvciAmJiBPICE9PSBPYmplY3RQcm90b3R5cGUpIHtcbiAgICBuYXRpdmVEZWZpbmVQcm9wZXJ0eShPYmplY3RQcm90b3R5cGUsIFAsIE9iamVjdFByb3RvdHlwZURlc2NyaXB0b3IpO1xuICB9XG59IDogbmF0aXZlRGVmaW5lUHJvcGVydHk7XG5cbnZhciB3cmFwID0gZnVuY3Rpb24gKHRhZywgZGVzY3JpcHRpb24pIHtcbiAgdmFyIHN5bWJvbCA9IEFsbFN5bWJvbHNbdGFnXSA9IG5hdGl2ZU9iamVjdENyZWF0ZSgkU3ltYm9sW1BST1RPVFlQRV0pO1xuICBzZXRJbnRlcm5hbFN0YXRlKHN5bWJvbCwge1xuICAgIHR5cGU6IFNZTUJPTCxcbiAgICB0YWc6IHRhZyxcbiAgICBkZXNjcmlwdGlvbjogZGVzY3JpcHRpb25cbiAgfSk7XG4gIGlmICghREVTQ1JJUFRPUlMpIHN5bWJvbC5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICByZXR1cm4gc3ltYm9sO1xufTtcblxudmFyIGlzU3ltYm9sID0gVVNFX1NZTUJPTF9BU19VSUQgPyBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHR5cGVvZiBpdCA9PSAnc3ltYm9sJztcbn0gOiBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIE9iamVjdChpdCkgaW5zdGFuY2VvZiAkU3ltYm9sO1xufTtcblxudmFyICRkZWZpbmVQcm9wZXJ0eSA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpIHtcbiAgaWYgKE8gPT09IE9iamVjdFByb3RvdHlwZSkgJGRlZmluZVByb3BlcnR5KE9iamVjdFByb3RvdHlwZVN5bWJvbHMsIFAsIEF0dHJpYnV0ZXMpO1xuICBhbk9iamVjdChPKTtcbiAgdmFyIGtleSA9IHRvUHJpbWl0aXZlKFAsIHRydWUpO1xuICBhbk9iamVjdChBdHRyaWJ1dGVzKTtcbiAgaWYgKGhhcyhBbGxTeW1ib2xzLCBrZXkpKSB7XG4gICAgaWYgKCFBdHRyaWJ1dGVzLmVudW1lcmFibGUpIHtcbiAgICAgIGlmICghaGFzKE8sIEhJRERFTikpIG5hdGl2ZURlZmluZVByb3BlcnR5KE8sIEhJRERFTiwgY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yKDEsIHt9KSk7XG4gICAgICBPW0hJRERFTl1ba2V5XSA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChoYXMoTywgSElEREVOKSAmJiBPW0hJRERFTl1ba2V5XSkgT1tISURERU5dW2tleV0gPSBmYWxzZTtcbiAgICAgIEF0dHJpYnV0ZXMgPSBuYXRpdmVPYmplY3RDcmVhdGUoQXR0cmlidXRlcywgeyBlbnVtZXJhYmxlOiBjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IoMCwgZmFsc2UpIH0pO1xuICAgIH0gcmV0dXJuIHNldFN5bWJvbERlc2NyaXB0b3IoTywga2V5LCBBdHRyaWJ1dGVzKTtcbiAgfSByZXR1cm4gbmF0aXZlRGVmaW5lUHJvcGVydHkoTywga2V5LCBBdHRyaWJ1dGVzKTtcbn07XG5cbnZhciAkZGVmaW5lUHJvcGVydGllcyA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXMoTywgUHJvcGVydGllcykge1xuICBhbk9iamVjdChPKTtcbiAgdmFyIHByb3BlcnRpZXMgPSB0b0luZGV4ZWRPYmplY3QoUHJvcGVydGllcyk7XG4gIHZhciBrZXlzID0gb2JqZWN0S2V5cyhwcm9wZXJ0aWVzKS5jb25jYXQoJGdldE93blByb3BlcnR5U3ltYm9scyhwcm9wZXJ0aWVzKSk7XG4gICRmb3JFYWNoKGtleXMsIGZ1bmN0aW9uIChrZXkpIHtcbiAgICBpZiAoIURFU0NSSVBUT1JTIHx8ICRwcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHByb3BlcnRpZXMsIGtleSkpICRkZWZpbmVQcm9wZXJ0eShPLCBrZXksIHByb3BlcnRpZXNba2V5XSk7XG4gIH0pO1xuICByZXR1cm4gTztcbn07XG5cbnZhciAkY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKE8sIFByb3BlcnRpZXMpIHtcbiAgcmV0dXJuIFByb3BlcnRpZXMgPT09IHVuZGVmaW5lZCA/IG5hdGl2ZU9iamVjdENyZWF0ZShPKSA6ICRkZWZpbmVQcm9wZXJ0aWVzKG5hdGl2ZU9iamVjdENyZWF0ZShPKSwgUHJvcGVydGllcyk7XG59O1xuXG52YXIgJHByb3BlcnR5SXNFbnVtZXJhYmxlID0gZnVuY3Rpb24gcHJvcGVydHlJc0VudW1lcmFibGUoVikge1xuICB2YXIgUCA9IHRvUHJpbWl0aXZlKFYsIHRydWUpO1xuICB2YXIgZW51bWVyYWJsZSA9IG5hdGl2ZVByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwodGhpcywgUCk7XG4gIGlmICh0aGlzID09PSBPYmplY3RQcm90b3R5cGUgJiYgaGFzKEFsbFN5bWJvbHMsIFApICYmICFoYXMoT2JqZWN0UHJvdG90eXBlU3ltYm9scywgUCkpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIGVudW1lcmFibGUgfHwgIWhhcyh0aGlzLCBQKSB8fCAhaGFzKEFsbFN5bWJvbHMsIFApIHx8IGhhcyh0aGlzLCBISURERU4pICYmIHRoaXNbSElEREVOXVtQXSA/IGVudW1lcmFibGUgOiB0cnVlO1xufTtcblxudmFyICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUCkge1xuICB2YXIgaXQgPSB0b0luZGV4ZWRPYmplY3QoTyk7XG4gIHZhciBrZXkgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgaWYgKGl0ID09PSBPYmplY3RQcm90b3R5cGUgJiYgaGFzKEFsbFN5bWJvbHMsIGtleSkgJiYgIWhhcyhPYmplY3RQcm90b3R5cGVTeW1ib2xzLCBrZXkpKSByZXR1cm47XG4gIHZhciBkZXNjcmlwdG9yID0gbmF0aXZlR2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpO1xuICBpZiAoZGVzY3JpcHRvciAmJiBoYXMoQWxsU3ltYm9scywga2V5KSAmJiAhKGhhcyhpdCwgSElEREVOKSAmJiBpdFtISURERU5dW2tleV0pKSB7XG4gICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gdHJ1ZTtcbiAgfVxuICByZXR1cm4gZGVzY3JpcHRvcjtcbn07XG5cbnZhciAkZ2V0T3duUHJvcGVydHlOYW1lcyA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoTykge1xuICB2YXIgbmFtZXMgPSBuYXRpdmVHZXRPd25Qcm9wZXJ0eU5hbWVzKHRvSW5kZXhlZE9iamVjdChPKSk7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgJGZvckVhY2gobmFtZXMsIGZ1bmN0aW9uIChrZXkpIHtcbiAgICBpZiAoIWhhcyhBbGxTeW1ib2xzLCBrZXkpICYmICFoYXMoaGlkZGVuS2V5cywga2V5KSkgcmVzdWx0LnB1c2goa2V5KTtcbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG52YXIgJGdldE93blByb3BlcnR5U3ltYm9scyA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5U3ltYm9scyhPKSB7XG4gIHZhciBJU19PQkpFQ1RfUFJPVE9UWVBFID0gTyA9PT0gT2JqZWN0UHJvdG90eXBlO1xuICB2YXIgbmFtZXMgPSBuYXRpdmVHZXRPd25Qcm9wZXJ0eU5hbWVzKElTX09CSkVDVF9QUk9UT1RZUEUgPyBPYmplY3RQcm90b3R5cGVTeW1ib2xzIDogdG9JbmRleGVkT2JqZWN0KE8pKTtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICAkZm9yRWFjaChuYW1lcywgZnVuY3Rpb24gKGtleSkge1xuICAgIGlmIChoYXMoQWxsU3ltYm9scywga2V5KSAmJiAoIUlTX09CSkVDVF9QUk9UT1RZUEUgfHwgaGFzKE9iamVjdFByb3RvdHlwZSwga2V5KSkpIHtcbiAgICAgIHJlc3VsdC5wdXNoKEFsbFN5bWJvbHNba2V5XSk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8vIGBTeW1ib2xgIGNvbnN0cnVjdG9yXG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1zeW1ib2wtY29uc3RydWN0b3JcbmlmICghTkFUSVZFX1NZTUJPTCkge1xuICAkU3ltYm9sID0gZnVuY3Rpb24gU3ltYm9sKCkge1xuICAgIGlmICh0aGlzIGluc3RhbmNlb2YgJFN5bWJvbCkgdGhyb3cgVHlwZUVycm9yKCdTeW1ib2wgaXMgbm90IGEgY29uc3RydWN0b3InKTtcbiAgICB2YXIgZGVzY3JpcHRpb24gPSAhYXJndW1lbnRzLmxlbmd0aCB8fCBhcmd1bWVudHNbMF0gPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IFN0cmluZyhhcmd1bWVudHNbMF0pO1xuICAgIHZhciB0YWcgPSB1aWQoZGVzY3JpcHRpb24pO1xuICAgIHZhciBzZXR0ZXIgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgIGlmICh0aGlzID09PSBPYmplY3RQcm90b3R5cGUpIHNldHRlci5jYWxsKE9iamVjdFByb3RvdHlwZVN5bWJvbHMsIHZhbHVlKTtcbiAgICAgIGlmIChoYXModGhpcywgSElEREVOKSAmJiBoYXModGhpc1tISURERU5dLCB0YWcpKSB0aGlzW0hJRERFTl1bdGFnXSA9IGZhbHNlO1xuICAgICAgc2V0U3ltYm9sRGVzY3JpcHRvcih0aGlzLCB0YWcsIGNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvcigxLCB2YWx1ZSkpO1xuICAgIH07XG4gICAgaWYgKERFU0NSSVBUT1JTICYmIFVTRV9TRVRURVIpIHNldFN5bWJvbERlc2NyaXB0b3IoT2JqZWN0UHJvdG90eXBlLCB0YWcsIHsgY29uZmlndXJhYmxlOiB0cnVlLCBzZXQ6IHNldHRlciB9KTtcbiAgICByZXR1cm4gd3JhcCh0YWcsIGRlc2NyaXB0aW9uKTtcbiAgfTtcblxuICByZWRlZmluZSgkU3ltYm9sW1BST1RPVFlQRV0sICd0b1N0cmluZycsIGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiBnZXRJbnRlcm5hbFN0YXRlKHRoaXMpLnRhZztcbiAgfSk7XG5cbiAgcmVkZWZpbmUoJFN5bWJvbCwgJ3dpdGhvdXRTZXR0ZXInLCBmdW5jdGlvbiAoZGVzY3JpcHRpb24pIHtcbiAgICByZXR1cm4gd3JhcCh1aWQoZGVzY3JpcHRpb24pLCBkZXNjcmlwdGlvbik7XG4gIH0pO1xuXG4gIHByb3BlcnR5SXNFbnVtZXJhYmxlTW9kdWxlLmYgPSAkcHJvcGVydHlJc0VudW1lcmFibGU7XG4gIGRlZmluZVByb3BlcnR5TW9kdWxlLmYgPSAkZGVmaW5lUHJvcGVydHk7XG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvck1vZHVsZS5mID0gJGdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbiAgZ2V0T3duUHJvcGVydHlOYW1lc01vZHVsZS5mID0gZ2V0T3duUHJvcGVydHlOYW1lc0V4dGVybmFsLmYgPSAkZ2V0T3duUHJvcGVydHlOYW1lcztcbiAgZ2V0T3duUHJvcGVydHlTeW1ib2xzTW9kdWxlLmYgPSAkZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xuXG4gIHdyYXBwZWRXZWxsS25vd25TeW1ib2xNb2R1bGUuZiA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgcmV0dXJuIHdyYXAod2VsbEtub3duU3ltYm9sKG5hbWUpLCBuYW1lKTtcbiAgfTtcblxuICBpZiAoREVTQ1JJUFRPUlMpIHtcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1TeW1ib2wtZGVzY3JpcHRpb25cbiAgICBuYXRpdmVEZWZpbmVQcm9wZXJ0eSgkU3ltYm9sW1BST1RPVFlQRV0sICdkZXNjcmlwdGlvbicsIHtcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIGdldDogZnVuY3Rpb24gZGVzY3JpcHRpb24oKSB7XG4gICAgICAgIHJldHVybiBnZXRJbnRlcm5hbFN0YXRlKHRoaXMpLmRlc2NyaXB0aW9uO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGlmICghSVNfUFVSRSkge1xuICAgICAgcmVkZWZpbmUoT2JqZWN0UHJvdG90eXBlLCAncHJvcGVydHlJc0VudW1lcmFibGUnLCAkcHJvcGVydHlJc0VudW1lcmFibGUsIHsgdW5zYWZlOiB0cnVlIH0pO1xuICAgIH1cbiAgfVxufVxuXG4kKHsgZ2xvYmFsOiB0cnVlLCB3cmFwOiB0cnVlLCBmb3JjZWQ6ICFOQVRJVkVfU1lNQk9MLCBzaGFtOiAhTkFUSVZFX1NZTUJPTCB9LCB7XG4gIFN5bWJvbDogJFN5bWJvbFxufSk7XG5cbiRmb3JFYWNoKG9iamVjdEtleXMoV2VsbEtub3duU3ltYm9sc1N0b3JlKSwgZnVuY3Rpb24gKG5hbWUpIHtcbiAgZGVmaW5lV2VsbEtub3duU3ltYm9sKG5hbWUpO1xufSk7XG5cbiQoeyB0YXJnZXQ6IFNZTUJPTCwgc3RhdDogdHJ1ZSwgZm9yY2VkOiAhTkFUSVZFX1NZTUJPTCB9LCB7XG4gIC8vIGBTeW1ib2wuZm9yYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtc3ltYm9sLmZvclxuICAnZm9yJzogZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciBzdHJpbmcgPSBTdHJpbmcoa2V5KTtcbiAgICBpZiAoaGFzKFN0cmluZ1RvU3ltYm9sUmVnaXN0cnksIHN0cmluZykpIHJldHVybiBTdHJpbmdUb1N5bWJvbFJlZ2lzdHJ5W3N0cmluZ107XG4gICAgdmFyIHN5bWJvbCA9ICRTeW1ib2woc3RyaW5nKTtcbiAgICBTdHJpbmdUb1N5bWJvbFJlZ2lzdHJ5W3N0cmluZ10gPSBzeW1ib2w7XG4gICAgU3ltYm9sVG9TdHJpbmdSZWdpc3RyeVtzeW1ib2xdID0gc3RyaW5nO1xuICAgIHJldHVybiBzeW1ib2w7XG4gIH0sXG4gIC8vIGBTeW1ib2wua2V5Rm9yYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtc3ltYm9sLmtleWZvclxuICBrZXlGb3I6IGZ1bmN0aW9uIGtleUZvcihzeW0pIHtcbiAgICBpZiAoIWlzU3ltYm9sKHN5bSkpIHRocm93IFR5cGVFcnJvcihzeW0gKyAnIGlzIG5vdCBhIHN5bWJvbCcpO1xuICAgIGlmIChoYXMoU3ltYm9sVG9TdHJpbmdSZWdpc3RyeSwgc3ltKSkgcmV0dXJuIFN5bWJvbFRvU3RyaW5nUmVnaXN0cnlbc3ltXTtcbiAgfSxcbiAgdXNlU2V0dGVyOiBmdW5jdGlvbiAoKSB7IFVTRV9TRVRURVIgPSB0cnVlOyB9LFxuICB1c2VTaW1wbGU6IGZ1bmN0aW9uICgpIHsgVVNFX1NFVFRFUiA9IGZhbHNlOyB9XG59KTtcblxuJCh7IHRhcmdldDogJ09iamVjdCcsIHN0YXQ6IHRydWUsIGZvcmNlZDogIU5BVElWRV9TWU1CT0wsIHNoYW06ICFERVNDUklQVE9SUyB9LCB7XG4gIC8vIGBPYmplY3QuY3JlYXRlYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtb2JqZWN0LmNyZWF0ZVxuICBjcmVhdGU6ICRjcmVhdGUsXG4gIC8vIGBPYmplY3QuZGVmaW5lUHJvcGVydHlgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1vYmplY3QuZGVmaW5lcHJvcGVydHlcbiAgZGVmaW5lUHJvcGVydHk6ICRkZWZpbmVQcm9wZXJ0eSxcbiAgLy8gYE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtb2JqZWN0LmRlZmluZXByb3BlcnRpZXNcbiAgZGVmaW5lUHJvcGVydGllczogJGRlZmluZVByb3BlcnRpZXMsXG4gIC8vIGBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtb2JqZWN0LmdldG93bnByb3BlcnR5ZGVzY3JpcHRvcnNcbiAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOiAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yXG59KTtcblxuJCh7IHRhcmdldDogJ09iamVjdCcsIHN0YXQ6IHRydWUsIGZvcmNlZDogIU5BVElWRV9TWU1CT0wgfSwge1xuICAvLyBgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXNgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1vYmplY3QuZ2V0b3ducHJvcGVydHluYW1lc1xuICBnZXRPd25Qcm9wZXJ0eU5hbWVzOiAkZ2V0T3duUHJvcGVydHlOYW1lcyxcbiAgLy8gYE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHNgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1vYmplY3QuZ2V0b3ducHJvcGVydHlzeW1ib2xzXG4gIGdldE93blByb3BlcnR5U3ltYm9sczogJGdldE93blByb3BlcnR5U3ltYm9sc1xufSk7XG5cbi8vIENocm9tZSAzOCBhbmQgMzkgYE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHNgIGZhaWxzIG9uIHByaW1pdGl2ZXNcbi8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTM0NDNcbiQoeyB0YXJnZXQ6ICdPYmplY3QnLCBzdGF0OiB0cnVlLCBmb3JjZWQ6IGZhaWxzKGZ1bmN0aW9uICgpIHsgZ2V0T3duUHJvcGVydHlTeW1ib2xzTW9kdWxlLmYoMSk7IH0pIH0sIHtcbiAgZ2V0T3duUHJvcGVydHlTeW1ib2xzOiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoaXQpIHtcbiAgICByZXR1cm4gZ2V0T3duUHJvcGVydHlTeW1ib2xzTW9kdWxlLmYodG9PYmplY3QoaXQpKTtcbiAgfVxufSk7XG5cbi8vIGBKU09OLnN0cmluZ2lmeWAgbWV0aG9kIGJlaGF2aW9yIHdpdGggc3ltYm9sc1xuLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtanNvbi5zdHJpbmdpZnlcbmlmICgkc3RyaW5naWZ5KSB7XG4gIHZhciBGT1JDRURfSlNPTl9TVFJJTkdJRlkgPSAhTkFUSVZFX1NZTUJPTCB8fCBmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHN5bWJvbCA9ICRTeW1ib2woKTtcbiAgICAvLyBNUyBFZGdlIGNvbnZlcnRzIHN5bWJvbCB2YWx1ZXMgdG8gSlNPTiBhcyB7fVxuICAgIHJldHVybiAkc3RyaW5naWZ5KFtzeW1ib2xdKSAhPSAnW251bGxdJ1xuICAgICAgLy8gV2ViS2l0IGNvbnZlcnRzIHN5bWJvbCB2YWx1ZXMgdG8gSlNPTiBhcyBudWxsXG4gICAgICB8fCAkc3RyaW5naWZ5KHsgYTogc3ltYm9sIH0pICE9ICd7fSdcbiAgICAgIC8vIFY4IHRocm93cyBvbiBib3hlZCBzeW1ib2xzXG4gICAgICB8fCAkc3RyaW5naWZ5KE9iamVjdChzeW1ib2wpKSAhPSAne30nO1xuICB9KTtcblxuICAkKHsgdGFyZ2V0OiAnSlNPTicsIHN0YXQ6IHRydWUsIGZvcmNlZDogRk9SQ0VEX0pTT05fU1RSSU5HSUZZIH0sIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICBzdHJpbmdpZnk6IGZ1bmN0aW9uIHN0cmluZ2lmeShpdCwgcmVwbGFjZXIsIHNwYWNlKSB7XG4gICAgICB2YXIgYXJncyA9IFtpdF07XG4gICAgICB2YXIgaW5kZXggPSAxO1xuICAgICAgdmFyICRyZXBsYWNlcjtcbiAgICAgIHdoaWxlIChhcmd1bWVudHMubGVuZ3RoID4gaW5kZXgpIGFyZ3MucHVzaChhcmd1bWVudHNbaW5kZXgrK10pO1xuICAgICAgJHJlcGxhY2VyID0gcmVwbGFjZXI7XG4gICAgICBpZiAoIWlzT2JqZWN0KHJlcGxhY2VyKSAmJiBpdCA9PT0gdW5kZWZpbmVkIHx8IGlzU3ltYm9sKGl0KSkgcmV0dXJuOyAvLyBJRTggcmV0dXJucyBzdHJpbmcgb24gdW5kZWZpbmVkXG4gICAgICBpZiAoIWlzQXJyYXkocmVwbGFjZXIpKSByZXBsYWNlciA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgICAgIGlmICh0eXBlb2YgJHJlcGxhY2VyID09ICdmdW5jdGlvbicpIHZhbHVlID0gJHJlcGxhY2VyLmNhbGwodGhpcywga2V5LCB2YWx1ZSk7XG4gICAgICAgIGlmICghaXNTeW1ib2wodmFsdWUpKSByZXR1cm4gdmFsdWU7XG4gICAgICB9O1xuICAgICAgYXJnc1sxXSA9IHJlcGxhY2VyO1xuICAgICAgcmV0dXJuICRzdHJpbmdpZnkuYXBwbHkobnVsbCwgYXJncyk7XG4gICAgfVxuICB9KTtcbn1cblxuLy8gYFN5bWJvbC5wcm90b3R5cGVbQEB0b1ByaW1pdGl2ZV1gIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtc3ltYm9sLnByb3RvdHlwZS1AQHRvcHJpbWl0aXZlXG5pZiAoISRTeW1ib2xbUFJPVE9UWVBFXVtUT19QUklNSVRJVkVdKSB7XG4gIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eSgkU3ltYm9sW1BST1RPVFlQRV0sIFRPX1BSSU1JVElWRSwgJFN5bWJvbFtQUk9UT1RZUEVdLnZhbHVlT2YpO1xufVxuLy8gYFN5bWJvbC5wcm90b3R5cGVbQEB0b1N0cmluZ1RhZ11gIHByb3BlcnR5XG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1zeW1ib2wucHJvdG90eXBlLUBAdG9zdHJpbmd0YWdcbnNldFRvU3RyaW5nVGFnKCRTeW1ib2wsIFNZTUJPTCk7XG5cbmhpZGRlbktleXNbSElEREVOXSA9IHRydWU7XG4iLCJ2YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciBmcm9tID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LWZyb20nKTtcbnZhciBjaGVja0NvcnJlY3RuZXNzT2ZJdGVyYXRpb24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2hlY2stY29ycmVjdG5lc3Mtb2YtaXRlcmF0aW9uJyk7XG5cbnZhciBJTkNPUlJFQ1RfSVRFUkFUSU9OID0gIWNoZWNrQ29ycmVjdG5lc3NPZkl0ZXJhdGlvbihmdW5jdGlvbiAoaXRlcmFibGUpIHtcbiAgQXJyYXkuZnJvbShpdGVyYWJsZSk7XG59KTtcblxuLy8gYEFycmF5LmZyb21gIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtYXJyYXkuZnJvbVxuJCh7IHRhcmdldDogJ0FycmF5Jywgc3RhdDogdHJ1ZSwgZm9yY2VkOiBJTkNPUlJFQ1RfSVRFUkFUSU9OIH0sIHtcbiAgZnJvbTogZnJvbVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgaXNGb3JjZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtZm9yY2VkJyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVkZWZpbmUnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzJyk7XG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jbGFzc29mLXJhdycpO1xudmFyIGluaGVyaXRJZlJlcXVpcmVkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2luaGVyaXQtaWYtcmVxdWlyZWQnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1wcmltaXRpdmUnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGNyZWF0ZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtY3JlYXRlJyk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcycpLmY7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3InKS5mO1xudmFyIGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHknKS5mO1xudmFyIHRyaW0gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc3RyaW5nLXRyaW0nKS50cmltO1xuXG52YXIgTlVNQkVSID0gJ051bWJlcic7XG52YXIgTmF0aXZlTnVtYmVyID0gZ2xvYmFsW05VTUJFUl07XG52YXIgTnVtYmVyUHJvdG90eXBlID0gTmF0aXZlTnVtYmVyLnByb3RvdHlwZTtcblxuLy8gT3BlcmEgfjEyIGhhcyBicm9rZW4gT2JqZWN0I3RvU3RyaW5nXG52YXIgQlJPS0VOX0NMQVNTT0YgPSBjbGFzc29mKGNyZWF0ZShOdW1iZXJQcm90b3R5cGUpKSA9PSBOVU1CRVI7XG5cbi8vIGBUb051bWJlcmAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy10b251bWJlclxudmFyIHRvTnVtYmVyID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIHZhciBpdCA9IHRvUHJpbWl0aXZlKGFyZ3VtZW50LCBmYWxzZSk7XG4gIHZhciBmaXJzdCwgdGhpcmQsIHJhZGl4LCBtYXhDb2RlLCBkaWdpdHMsIGxlbmd0aCwgaW5kZXgsIGNvZGU7XG4gIGlmICh0eXBlb2YgaXQgPT0gJ3N0cmluZycgJiYgaXQubGVuZ3RoID4gMikge1xuICAgIGl0ID0gdHJpbShpdCk7XG4gICAgZmlyc3QgPSBpdC5jaGFyQ29kZUF0KDApO1xuICAgIGlmIChmaXJzdCA9PT0gNDMgfHwgZmlyc3QgPT09IDQ1KSB7XG4gICAgICB0aGlyZCA9IGl0LmNoYXJDb2RlQXQoMik7XG4gICAgICBpZiAodGhpcmQgPT09IDg4IHx8IHRoaXJkID09PSAxMjApIHJldHVybiBOYU47IC8vIE51bWJlcignKzB4MScpIHNob3VsZCBiZSBOYU4sIG9sZCBWOCBmaXhcbiAgICB9IGVsc2UgaWYgKGZpcnN0ID09PSA0OCkge1xuICAgICAgc3dpdGNoIChpdC5jaGFyQ29kZUF0KDEpKSB7XG4gICAgICAgIGNhc2UgNjY6IGNhc2UgOTg6IHJhZGl4ID0gMjsgbWF4Q29kZSA9IDQ5OyBicmVhazsgLy8gZmFzdCBlcXVhbCBvZiAvXjBiWzAxXSskL2lcbiAgICAgICAgY2FzZSA3OTogY2FzZSAxMTE6IHJhZGl4ID0gODsgbWF4Q29kZSA9IDU1OyBicmVhazsgLy8gZmFzdCBlcXVhbCBvZiAvXjBvWzAtN10rJC9pXG4gICAgICAgIGRlZmF1bHQ6IHJldHVybiAraXQ7XG4gICAgICB9XG4gICAgICBkaWdpdHMgPSBpdC5zbGljZSgyKTtcbiAgICAgIGxlbmd0aCA9IGRpZ2l0cy5sZW5ndGg7XG4gICAgICBmb3IgKGluZGV4ID0gMDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgY29kZSA9IGRpZ2l0cy5jaGFyQ29kZUF0KGluZGV4KTtcbiAgICAgICAgLy8gcGFyc2VJbnQgcGFyc2VzIGEgc3RyaW5nIHRvIGEgZmlyc3QgdW5hdmFpbGFibGUgc3ltYm9sXG4gICAgICAgIC8vIGJ1dCBUb051bWJlciBzaG91bGQgcmV0dXJuIE5hTiBpZiBhIHN0cmluZyBjb250YWlucyB1bmF2YWlsYWJsZSBzeW1ib2xzXG4gICAgICAgIGlmIChjb2RlIDwgNDggfHwgY29kZSA+IG1heENvZGUpIHJldHVybiBOYU47XG4gICAgICB9IHJldHVybiBwYXJzZUludChkaWdpdHMsIHJhZGl4KTtcbiAgICB9XG4gIH0gcmV0dXJuICtpdDtcbn07XG5cbi8vIGBOdW1iZXJgIGNvbnN0cnVjdG9yXG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1udW1iZXItY29uc3RydWN0b3JcbmlmIChpc0ZvcmNlZChOVU1CRVIsICFOYXRpdmVOdW1iZXIoJyAwbzEnKSB8fCAhTmF0aXZlTnVtYmVyKCcwYjEnKSB8fCBOYXRpdmVOdW1iZXIoJysweDEnKSkpIHtcbiAgdmFyIE51bWJlcldyYXBwZXIgPSBmdW5jdGlvbiBOdW1iZXIodmFsdWUpIHtcbiAgICB2YXIgaXQgPSBhcmd1bWVudHMubGVuZ3RoIDwgMSA/IDAgOiB2YWx1ZTtcbiAgICB2YXIgZHVtbXkgPSB0aGlzO1xuICAgIHJldHVybiBkdW1teSBpbnN0YW5jZW9mIE51bWJlcldyYXBwZXJcbiAgICAgIC8vIGNoZWNrIG9uIDEuLmNvbnN0cnVjdG9yKGZvbykgY2FzZVxuICAgICAgJiYgKEJST0tFTl9DTEFTU09GID8gZmFpbHMoZnVuY3Rpb24gKCkgeyBOdW1iZXJQcm90b3R5cGUudmFsdWVPZi5jYWxsKGR1bW15KTsgfSkgOiBjbGFzc29mKGR1bW15KSAhPSBOVU1CRVIpXG4gICAgICAgID8gaW5oZXJpdElmUmVxdWlyZWQobmV3IE5hdGl2ZU51bWJlcih0b051bWJlcihpdCkpLCBkdW1teSwgTnVtYmVyV3JhcHBlcikgOiB0b051bWJlcihpdCk7XG4gIH07XG4gIGZvciAodmFyIGtleXMgPSBERVNDUklQVE9SUyA/IGdldE93blByb3BlcnR5TmFtZXMoTmF0aXZlTnVtYmVyKSA6IChcbiAgICAvLyBFUzM6XG4gICAgJ01BWF9WQUxVRSxNSU5fVkFMVUUsTmFOLE5FR0FUSVZFX0lORklOSVRZLFBPU0lUSVZFX0lORklOSVRZLCcgK1xuICAgIC8vIEVTMjAxNSAoaW4gY2FzZSwgaWYgbW9kdWxlcyB3aXRoIEVTMjAxNSBOdW1iZXIgc3RhdGljcyByZXF1aXJlZCBiZWZvcmUpOlxuICAgICdFUFNJTE9OLGlzRmluaXRlLGlzSW50ZWdlcixpc05hTixpc1NhZmVJbnRlZ2VyLE1BWF9TQUZFX0lOVEVHRVIsJyArXG4gICAgJ01JTl9TQUZFX0lOVEVHRVIscGFyc2VGbG9hdCxwYXJzZUludCxpc0ludGVnZXInXG4gICkuc3BsaXQoJywnKSwgaiA9IDAsIGtleTsga2V5cy5sZW5ndGggPiBqOyBqKyspIHtcbiAgICBpZiAoaGFzKE5hdGl2ZU51bWJlciwga2V5ID0ga2V5c1tqXSkgJiYgIWhhcyhOdW1iZXJXcmFwcGVyLCBrZXkpKSB7XG4gICAgICBkZWZpbmVQcm9wZXJ0eShOdW1iZXJXcmFwcGVyLCBrZXksIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihOYXRpdmVOdW1iZXIsIGtleSkpO1xuICAgIH1cbiAgfVxuICBOdW1iZXJXcmFwcGVyLnByb3RvdHlwZSA9IE51bWJlclByb3RvdHlwZTtcbiAgTnVtYmVyUHJvdG90eXBlLmNvbnN0cnVjdG9yID0gTnVtYmVyV3JhcHBlcjtcbiAgcmVkZWZpbmUoZ2xvYmFsLCBOVU1CRVIsIE51bWJlcldyYXBwZXIpO1xufVxuIiwidmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eScpLmY7XG5cbnZhciBGdW5jdGlvblByb3RvdHlwZSA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcbnZhciBGdW5jdGlvblByb3RvdHlwZVRvU3RyaW5nID0gRnVuY3Rpb25Qcm90b3R5cGUudG9TdHJpbmc7XG52YXIgbmFtZVJFID0gL15cXHMqZnVuY3Rpb24gKFteIChdKikvO1xudmFyIE5BTUUgPSAnbmFtZSc7XG5cbi8vIEZ1bmN0aW9uIGluc3RhbmNlcyBgLm5hbWVgIHByb3BlcnR5XG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1mdW5jdGlvbi1pbnN0YW5jZXMtbmFtZVxuaWYgKERFU0NSSVBUT1JTICYmICEoTkFNRSBpbiBGdW5jdGlvblByb3RvdHlwZSkpIHtcbiAgZGVmaW5lUHJvcGVydHkoRnVuY3Rpb25Qcm90b3R5cGUsIE5BTUUsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICB0cnkge1xuICAgICAgICByZXR1cm4gRnVuY3Rpb25Qcm90b3R5cGVUb1N0cmluZy5jYWxsKHRoaXMpLm1hdGNoKG5hbWVSRSlbMV07XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7XG4gIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoO1xuXG4gIGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykge1xuICAgIGFycjJbaV0gPSBhcnJbaV07XG4gIH1cblxuICByZXR1cm4gYXJyMjtcbn0iLCJpbXBvcnQgYXJyYXlMaWtlVG9BcnJheSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlMaWtlVG9BcnJheVwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikge1xuICBpZiAoIW8pIHJldHVybjtcbiAgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xuICB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7XG4gIGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7XG4gIGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pO1xuICBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbn0iLCJpbXBvcnQgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5XCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihvLCBhbGxvd0FycmF5TGlrZSkge1xuICB2YXIgaXQ7XG5cbiAgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwidW5kZWZpbmVkXCIgfHwgb1tTeW1ib2wuaXRlcmF0b3JdID09IG51bGwpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShvKSB8fCAoaXQgPSB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvKSkgfHwgYWxsb3dBcnJheUxpa2UgJiYgbyAmJiB0eXBlb2Ygby5sZW5ndGggPT09IFwibnVtYmVyXCIpIHtcbiAgICAgIGlmIChpdCkgbyA9IGl0O1xuICAgICAgdmFyIGkgPSAwO1xuXG4gICAgICB2YXIgRiA9IGZ1bmN0aW9uIEYoKSB7fTtcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgczogRixcbiAgICAgICAgbjogZnVuY3Rpb24gbigpIHtcbiAgICAgICAgICBpZiAoaSA+PSBvLmxlbmd0aCkgcmV0dXJuIHtcbiAgICAgICAgICAgIGRvbmU6IHRydWVcbiAgICAgICAgICB9O1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkb25lOiBmYWxzZSxcbiAgICAgICAgICAgIHZhbHVlOiBvW2krK11cbiAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgICAgICBlOiBmdW5jdGlvbiBlKF9lKSB7XG4gICAgICAgICAgdGhyb3cgX2U7XG4gICAgICAgIH0sXG4gICAgICAgIGY6IEZcbiAgICAgIH07XG4gICAgfVxuXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBpdGVyYXRlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xuICB9XG5cbiAgdmFyIG5vcm1hbENvbXBsZXRpb24gPSB0cnVlLFxuICAgICAgZGlkRXJyID0gZmFsc2UsXG4gICAgICBlcnI7XG4gIHJldHVybiB7XG4gICAgczogZnVuY3Rpb24gcygpIHtcbiAgICAgIGl0ID0gb1tTeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgfSxcbiAgICBuOiBmdW5jdGlvbiBuKCkge1xuICAgICAgdmFyIHN0ZXAgPSBpdC5uZXh0KCk7XG4gICAgICBub3JtYWxDb21wbGV0aW9uID0gc3RlcC5kb25lO1xuICAgICAgcmV0dXJuIHN0ZXA7XG4gICAgfSxcbiAgICBlOiBmdW5jdGlvbiBlKF9lMikge1xuICAgICAgZGlkRXJyID0gdHJ1ZTtcbiAgICAgIGVyciA9IF9lMjtcbiAgICB9LFxuICAgIGY6IGZ1bmN0aW9uIGYoKSB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoIW5vcm1hbENvbXBsZXRpb24gJiYgaXRbXCJyZXR1cm5cIl0gIT0gbnVsbCkgaXRbXCJyZXR1cm5cIl0oKTtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIGlmIChkaWRFcnIpIHRocm93IGVycjtcbiAgICAgIH1cbiAgICB9XG4gIH07XG59IiwidmFyIGRlZmluZVdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZWZpbmUtd2VsbC1rbm93bi1zeW1ib2wnKTtcblxuLy8gYFN5bWJvbC5pdGVyYXRvcmAgd2VsbC1rbm93biBzeW1ib2xcbi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN5bWJvbC5pdGVyYXRvclxuZGVmaW5lV2VsbEtub3duU3ltYm9sKCdpdGVyYXRvcicpO1xuIiwidmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hLWZ1bmN0aW9uJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tb2JqZWN0Jyk7XG52YXIgSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbmRleGVkLW9iamVjdCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWxlbmd0aCcpO1xuXG4vLyBgQXJyYXkucHJvdG90eXBlLnsgcmVkdWNlLCByZWR1Y2VSaWdodCB9YCBtZXRob2RzIGltcGxlbWVudGF0aW9uXG52YXIgY3JlYXRlTWV0aG9kID0gZnVuY3Rpb24gKElTX1JJR0hUKSB7XG4gIHJldHVybiBmdW5jdGlvbiAodGhhdCwgY2FsbGJhY2tmbiwgYXJndW1lbnRzTGVuZ3RoLCBtZW1vKSB7XG4gICAgYUZ1bmN0aW9uKGNhbGxiYWNrZm4pO1xuICAgIHZhciBPID0gdG9PYmplY3QodGhhdCk7XG4gICAgdmFyIHNlbGYgPSBJbmRleGVkT2JqZWN0KE8pO1xuICAgIHZhciBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgdmFyIGluZGV4ID0gSVNfUklHSFQgPyBsZW5ndGggLSAxIDogMDtcbiAgICB2YXIgaSA9IElTX1JJR0hUID8gLTEgOiAxO1xuICAgIGlmIChhcmd1bWVudHNMZW5ndGggPCAyKSB3aGlsZSAodHJ1ZSkge1xuICAgICAgaWYgKGluZGV4IGluIHNlbGYpIHtcbiAgICAgICAgbWVtbyA9IHNlbGZbaW5kZXhdO1xuICAgICAgICBpbmRleCArPSBpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGluZGV4ICs9IGk7XG4gICAgICBpZiAoSVNfUklHSFQgPyBpbmRleCA8IDAgOiBsZW5ndGggPD0gaW5kZXgpIHtcbiAgICAgICAgdGhyb3cgVHlwZUVycm9yKCdSZWR1Y2Ugb2YgZW1wdHkgYXJyYXkgd2l0aCBubyBpbml0aWFsIHZhbHVlJyk7XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAoO0lTX1JJR0hUID8gaW5kZXggPj0gMCA6IGxlbmd0aCA+IGluZGV4OyBpbmRleCArPSBpKSBpZiAoaW5kZXggaW4gc2VsZikge1xuICAgICAgbWVtbyA9IGNhbGxiYWNrZm4obWVtbywgc2VsZltpbmRleF0sIGluZGV4LCBPKTtcbiAgICB9XG4gICAgcmV0dXJuIG1lbW87XG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy8gYEFycmF5LnByb3RvdHlwZS5yZWR1Y2VgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUucmVkdWNlXG4gIGxlZnQ6IGNyZWF0ZU1ldGhvZChmYWxzZSksXG4gIC8vIGBBcnJheS5wcm90b3R5cGUucmVkdWNlUmlnaHRgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUucmVkdWNlcmlnaHRcbiAgcmlnaHQ6IGNyZWF0ZU1ldGhvZCh0cnVlKVxufTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgRE9NSXRlcmFibGVzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RvbS1pdGVyYWJsZXMnKTtcbnZhciBBcnJheUl0ZXJhdG9yTWV0aG9kcyA9IHJlcXVpcmUoJy4uL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3InKTtcbnZhciBjcmVhdGVOb25FbnVtZXJhYmxlUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5Jyk7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG5cbnZhciBJVEVSQVRPUiA9IHdlbGxLbm93blN5bWJvbCgnaXRlcmF0b3InKTtcbnZhciBUT19TVFJJTkdfVEFHID0gd2VsbEtub3duU3ltYm9sKCd0b1N0cmluZ1RhZycpO1xudmFyIEFycmF5VmFsdWVzID0gQXJyYXlJdGVyYXRvck1ldGhvZHMudmFsdWVzO1xuXG5mb3IgKHZhciBDT0xMRUNUSU9OX05BTUUgaW4gRE9NSXRlcmFibGVzKSB7XG4gIHZhciBDb2xsZWN0aW9uID0gZ2xvYmFsW0NPTExFQ1RJT05fTkFNRV07XG4gIHZhciBDb2xsZWN0aW9uUHJvdG90eXBlID0gQ29sbGVjdGlvbiAmJiBDb2xsZWN0aW9uLnByb3RvdHlwZTtcbiAgaWYgKENvbGxlY3Rpb25Qcm90b3R5cGUpIHtcbiAgICAvLyBzb21lIENocm9tZSB2ZXJzaW9ucyBoYXZlIG5vbi1jb25maWd1cmFibGUgbWV0aG9kcyBvbiBET01Ub2tlbkxpc3RcbiAgICBpZiAoQ29sbGVjdGlvblByb3RvdHlwZVtJVEVSQVRPUl0gIT09IEFycmF5VmFsdWVzKSB0cnkge1xuICAgICAgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5KENvbGxlY3Rpb25Qcm90b3R5cGUsIElURVJBVE9SLCBBcnJheVZhbHVlcyk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIENvbGxlY3Rpb25Qcm90b3R5cGVbSVRFUkFUT1JdID0gQXJyYXlWYWx1ZXM7XG4gICAgfVxuICAgIGlmICghQ29sbGVjdGlvblByb3RvdHlwZVtUT19TVFJJTkdfVEFHXSkge1xuICAgICAgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5KENvbGxlY3Rpb25Qcm90b3R5cGUsIFRPX1NUUklOR19UQUcsIENPTExFQ1RJT05fTkFNRSk7XG4gICAgfVxuICAgIGlmIChET01JdGVyYWJsZXNbQ09MTEVDVElPTl9OQU1FXSkgZm9yICh2YXIgTUVUSE9EX05BTUUgaW4gQXJyYXlJdGVyYXRvck1ldGhvZHMpIHtcbiAgICAgIC8vIHNvbWUgQ2hyb21lIHZlcnNpb25zIGhhdmUgbm9uLWNvbmZpZ3VyYWJsZSBtZXRob2RzIG9uIERPTVRva2VuTGlzdFxuICAgICAgaWYgKENvbGxlY3Rpb25Qcm90b3R5cGVbTUVUSE9EX05BTUVdICE9PSBBcnJheUl0ZXJhdG9yTWV0aG9kc1tNRVRIT0RfTkFNRV0pIHRyeSB7XG4gICAgICAgIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eShDb2xsZWN0aW9uUHJvdG90eXBlLCBNRVRIT0RfTkFNRSwgQXJyYXlJdGVyYXRvck1ldGhvZHNbTUVUSE9EX05BTUVdKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIENvbGxlY3Rpb25Qcm90b3R5cGVbTUVUSE9EX05BTUVdID0gQXJyYXlJdGVyYXRvck1ldGhvZHNbTUVUSE9EX05BTUVdO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLy8gYFN5bWJvbC5wcm90b3R5cGUuZGVzY3JpcHRpb25gIGdldHRlclxuLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtc3ltYm9sLnByb3RvdHlwZS5kZXNjcmlwdGlvblxuJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcycpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xudmFyIGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHknKS5mO1xudmFyIGNvcHlDb25zdHJ1Y3RvclByb3BlcnRpZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY29weS1jb25zdHJ1Y3Rvci1wcm9wZXJ0aWVzJyk7XG5cbnZhciBOYXRpdmVTeW1ib2wgPSBnbG9iYWwuU3ltYm9sO1xuXG5pZiAoREVTQ1JJUFRPUlMgJiYgdHlwZW9mIE5hdGl2ZVN5bWJvbCA9PSAnZnVuY3Rpb24nICYmICghKCdkZXNjcmlwdGlvbicgaW4gTmF0aXZlU3ltYm9sLnByb3RvdHlwZSkgfHxcbiAgLy8gU2FmYXJpIDEyIGJ1Z1xuICBOYXRpdmVTeW1ib2woKS5kZXNjcmlwdGlvbiAhPT0gdW5kZWZpbmVkXG4pKSB7XG4gIHZhciBFbXB0eVN0cmluZ0Rlc2NyaXB0aW9uU3RvcmUgPSB7fTtcbiAgLy8gd3JhcCBTeW1ib2wgY29uc3RydWN0b3IgZm9yIGNvcnJlY3Qgd29yayB3aXRoIHVuZGVmaW5lZCBkZXNjcmlwdGlvblxuICB2YXIgU3ltYm9sV3JhcHBlciA9IGZ1bmN0aW9uIFN5bWJvbCgpIHtcbiAgICB2YXIgZGVzY3JpcHRpb24gPSBhcmd1bWVudHMubGVuZ3RoIDwgMSB8fCBhcmd1bWVudHNbMF0gPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IFN0cmluZyhhcmd1bWVudHNbMF0pO1xuICAgIHZhciByZXN1bHQgPSB0aGlzIGluc3RhbmNlb2YgU3ltYm9sV3JhcHBlclxuICAgICAgPyBuZXcgTmF0aXZlU3ltYm9sKGRlc2NyaXB0aW9uKVxuICAgICAgLy8gaW4gRWRnZSAxMywgU3RyaW5nKFN5bWJvbCh1bmRlZmluZWQpKSA9PT0gJ1N5bWJvbCh1bmRlZmluZWQpJ1xuICAgICAgOiBkZXNjcmlwdGlvbiA9PT0gdW5kZWZpbmVkID8gTmF0aXZlU3ltYm9sKCkgOiBOYXRpdmVTeW1ib2woZGVzY3JpcHRpb24pO1xuICAgIGlmIChkZXNjcmlwdGlvbiA9PT0gJycpIEVtcHR5U3RyaW5nRGVzY3JpcHRpb25TdG9yZVtyZXN1bHRdID0gdHJ1ZTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuICBjb3B5Q29uc3RydWN0b3JQcm9wZXJ0aWVzKFN5bWJvbFdyYXBwZXIsIE5hdGl2ZVN5bWJvbCk7XG4gIHZhciBzeW1ib2xQcm90b3R5cGUgPSBTeW1ib2xXcmFwcGVyLnByb3RvdHlwZSA9IE5hdGl2ZVN5bWJvbC5wcm90b3R5cGU7XG4gIHN5bWJvbFByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IFN5bWJvbFdyYXBwZXI7XG5cbiAgdmFyIHN5bWJvbFRvU3RyaW5nID0gc3ltYm9sUHJvdG90eXBlLnRvU3RyaW5nO1xuICB2YXIgbmF0aXZlID0gU3RyaW5nKE5hdGl2ZVN5bWJvbCgndGVzdCcpKSA9PSAnU3ltYm9sKHRlc3QpJztcbiAgdmFyIHJlZ2V4cCA9IC9eU3ltYm9sXFwoKC4qKVxcKVteKV0rJC87XG4gIGRlZmluZVByb3BlcnR5KHN5bWJvbFByb3RvdHlwZSwgJ2Rlc2NyaXB0aW9uJywge1xuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGRlc2NyaXB0aW9uKCkge1xuICAgICAgdmFyIHN5bWJvbCA9IGlzT2JqZWN0KHRoaXMpID8gdGhpcy52YWx1ZU9mKCkgOiB0aGlzO1xuICAgICAgdmFyIHN0cmluZyA9IHN5bWJvbFRvU3RyaW5nLmNhbGwoc3ltYm9sKTtcbiAgICAgIGlmIChoYXMoRW1wdHlTdHJpbmdEZXNjcmlwdGlvblN0b3JlLCBzeW1ib2wpKSByZXR1cm4gJyc7XG4gICAgICB2YXIgZGVzYyA9IG5hdGl2ZSA/IHN0cmluZy5zbGljZSg3LCAtMSkgOiBzdHJpbmcucmVwbGFjZShyZWdleHAsICckMScpO1xuICAgICAgcmV0dXJuIGRlc2MgPT09ICcnID8gdW5kZWZpbmVkIDogZGVzYztcbiAgICB9XG4gIH0pO1xuXG4gICQoeyBnbG9iYWw6IHRydWUsIGZvcmNlZDogdHJ1ZSB9LCB7XG4gICAgU3ltYm9sOiBTeW1ib2xXcmFwcGVyXG4gIH0pO1xufVxuIiwidmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xuXG5leHBvcnRzLmYgPSB3ZWxsS25vd25TeW1ib2w7XG4iLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9sb2FkZXIuanM/P3JlZi0tNi1vbmVPZi0xLTAhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNi1vbmVPZi0xLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXItdjE2L2Rpc3Qvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNi1vbmVPZi0xLTIhLi4vLi4vbm9kZV9tb2R1bGVzL2NhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXItdjE2L2Rpc3QvaW5kZXguanM/P3JlZi0tMC0xIS4vbGFiZWxib3gudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1jc3NcIiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xudmFyIGlzQXJyYXkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtYXJyYXknKTtcbnZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tYWJzb2x1dGUtaW5kZXgnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1sZW5ndGgnKTtcbnZhciB0b0luZGV4ZWRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8taW5kZXhlZC1vYmplY3QnKTtcbnZhciBjcmVhdGVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jcmVhdGUtcHJvcGVydHknKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcbnZhciBhcnJheU1ldGhvZEhhc1NwZWNpZXNTdXBwb3J0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC1oYXMtc3BlY2llcy1zdXBwb3J0Jyk7XG52YXIgYXJyYXlNZXRob2RVc2VzVG9MZW5ndGggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLXVzZXMtdG8tbGVuZ3RoJyk7XG5cbnZhciBIQVNfU1BFQ0lFU19TVVBQT1JUID0gYXJyYXlNZXRob2RIYXNTcGVjaWVzU3VwcG9ydCgnc2xpY2UnKTtcbnZhciBVU0VTX1RPX0xFTkdUSCA9IGFycmF5TWV0aG9kVXNlc1RvTGVuZ3RoKCdzbGljZScsIHsgQUNDRVNTT1JTOiB0cnVlLCAwOiAwLCAxOiAyIH0pO1xuXG52YXIgU1BFQ0lFUyA9IHdlbGxLbm93blN5bWJvbCgnc3BlY2llcycpO1xudmFyIG5hdGl2ZVNsaWNlID0gW10uc2xpY2U7XG52YXIgbWF4ID0gTWF0aC5tYXg7XG5cbi8vIGBBcnJheS5wcm90b3R5cGUuc2xpY2VgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLnNsaWNlXG4vLyBmYWxsYmFjayBmb3Igbm90IGFycmF5LWxpa2UgRVMzIHN0cmluZ3MgYW5kIERPTSBvYmplY3RzXG4kKHsgdGFyZ2V0OiAnQXJyYXknLCBwcm90bzogdHJ1ZSwgZm9yY2VkOiAhSEFTX1NQRUNJRVNfU1VQUE9SVCB8fCAhVVNFU19UT19MRU5HVEggfSwge1xuICBzbGljZTogZnVuY3Rpb24gc2xpY2Uoc3RhcnQsIGVuZCkge1xuICAgIHZhciBPID0gdG9JbmRleGVkT2JqZWN0KHRoaXMpO1xuICAgIHZhciBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgdmFyIGsgPSB0b0Fic29sdXRlSW5kZXgoc3RhcnQsIGxlbmd0aCk7XG4gICAgdmFyIGZpbiA9IHRvQWJzb2x1dGVJbmRleChlbmQgPT09IHVuZGVmaW5lZCA/IGxlbmd0aCA6IGVuZCwgbGVuZ3RoKTtcbiAgICAvLyBpbmxpbmUgYEFycmF5U3BlY2llc0NyZWF0ZWAgZm9yIHVzYWdlIG5hdGl2ZSBgQXJyYXkjc2xpY2VgIHdoZXJlIGl0J3MgcG9zc2libGVcbiAgICB2YXIgQ29uc3RydWN0b3IsIHJlc3VsdCwgbjtcbiAgICBpZiAoaXNBcnJheShPKSkge1xuICAgICAgQ29uc3RydWN0b3IgPSBPLmNvbnN0cnVjdG9yO1xuICAgICAgLy8gY3Jvc3MtcmVhbG0gZmFsbGJhY2tcbiAgICAgIGlmICh0eXBlb2YgQ29uc3RydWN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiAoQ29uc3RydWN0b3IgPT09IEFycmF5IHx8IGlzQXJyYXkoQ29uc3RydWN0b3IucHJvdG90eXBlKSkpIHtcbiAgICAgICAgQ29uc3RydWN0b3IgPSB1bmRlZmluZWQ7XG4gICAgICB9IGVsc2UgaWYgKGlzT2JqZWN0KENvbnN0cnVjdG9yKSkge1xuICAgICAgICBDb25zdHJ1Y3RvciA9IENvbnN0cnVjdG9yW1NQRUNJRVNdO1xuICAgICAgICBpZiAoQ29uc3RydWN0b3IgPT09IG51bGwpIENvbnN0cnVjdG9yID0gdW5kZWZpbmVkO1xuICAgICAgfVxuICAgICAgaWYgKENvbnN0cnVjdG9yID09PSBBcnJheSB8fCBDb25zdHJ1Y3RvciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBuYXRpdmVTbGljZS5jYWxsKE8sIGssIGZpbik7XG4gICAgICB9XG4gICAgfVxuICAgIHJlc3VsdCA9IG5ldyAoQ29uc3RydWN0b3IgPT09IHVuZGVmaW5lZCA/IEFycmF5IDogQ29uc3RydWN0b3IpKG1heChmaW4gLSBrLCAwKSk7XG4gICAgZm9yIChuID0gMDsgayA8IGZpbjsgaysrLCBuKyspIGlmIChrIGluIE8pIGNyZWF0ZVByb3BlcnR5KHJlc3VsdCwgbiwgT1trXSk7XG4gICAgcmVzdWx0Lmxlbmd0aCA9IG47XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxufSk7XG4iLCIvLyBpdGVyYWJsZSBET00gY29sbGVjdGlvbnNcbi8vIGZsYWcgLSBgaXRlcmFibGVgIGludGVyZmFjZSAtICdlbnRyaWVzJywgJ2tleXMnLCAndmFsdWVzJywgJ2ZvckVhY2gnIG1ldGhvZHNcbm1vZHVsZS5leHBvcnRzID0ge1xuICBDU1NSdWxlTGlzdDogMCxcbiAgQ1NTU3R5bGVEZWNsYXJhdGlvbjogMCxcbiAgQ1NTVmFsdWVMaXN0OiAwLFxuICBDbGllbnRSZWN0TGlzdDogMCxcbiAgRE9NUmVjdExpc3Q6IDAsXG4gIERPTVN0cmluZ0xpc3Q6IDAsXG4gIERPTVRva2VuTGlzdDogMSxcbiAgRGF0YVRyYW5zZmVySXRlbUxpc3Q6IDAsXG4gIEZpbGVMaXN0OiAwLFxuICBIVE1MQWxsQ29sbGVjdGlvbjogMCxcbiAgSFRNTENvbGxlY3Rpb246IDAsXG4gIEhUTUxGb3JtRWxlbWVudDogMCxcbiAgSFRNTFNlbGVjdEVsZW1lbnQ6IDAsXG4gIE1lZGlhTGlzdDogMCxcbiAgTWltZVR5cGVBcnJheTogMCxcbiAgTmFtZWROb2RlTWFwOiAwLFxuICBOb2RlTGlzdDogMSxcbiAgUGFpbnRSZXF1ZXN0TGlzdDogMCxcbiAgUGx1Z2luOiAwLFxuICBQbHVnaW5BcnJheTogMCxcbiAgU1ZHTGVuZ3RoTGlzdDogMCxcbiAgU1ZHTnVtYmVyTGlzdDogMCxcbiAgU1ZHUGF0aFNlZ0xpc3Q6IDAsXG4gIFNWR1BvaW50TGlzdDogMCxcbiAgU1ZHU3RyaW5nTGlzdDogMCxcbiAgU1ZHVHJhbnNmb3JtTGlzdDogMCxcbiAgU291cmNlQnVmZmVyTGlzdDogMCxcbiAgU3R5bGVTaGVldExpc3Q6IDAsXG4gIFRleHRUcmFja0N1ZUxpc3Q6IDAsXG4gIFRleHRUcmFja0xpc3Q6IDAsXG4gIFRvdWNoTGlzdDogMFxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=