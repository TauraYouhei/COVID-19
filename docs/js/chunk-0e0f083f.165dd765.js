(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-0e0f083f"],{"13d5":function(t,e,n){"use strict";var a=n("23e7"),i=n("d58f").left,c=n("a640"),s=n("ae40"),r=c("reduce"),u=s("reduce",{1:0});a({target:"Array",proto:!0,forced:!r||!u},{reduce:function(t){return i(this,t,arguments.length,arguments.length>1?arguments[1]:void 0)}})},"4edd":function(t,e,n){"use strict";n.r(e);var a=n("7a23"),i=Object(a["F"])("data-v-42cec2bf");Object(a["t"])("data-v-42cec2bf");var c=Object(a["h"])("h1",null,"新型コロナウイルス情報",-1),s={key:0,class:"flex"},r={class:"box"},u={class:"box"},o={class:"box"},d={class:"box"},h={class:"box"},l={class:"box27"},b=Object(a["h"])("span",{class:"box-title"},"病床使用数",-1),f={class:"text"},k=Object(a["h"])("br",null,null,-1),p={class:"ueo"},g={key:1,class:"loader"};Object(a["r"])();var j=i((function(t,e,n,i,j,O){var v=Object(a["x"])("mainmenu"),m=Object(a["x"])("labelbox");return Object(a["q"])(),Object(a["d"])("div",null,[Object(a["h"])(v,{judge:"0"}),c,O.readyToshowMainPage?(Object(a["q"])(),Object(a["d"])("div",s,[Object(a["h"])("div",r,[Object(a["h"])(m,{class:"box1",msg:"感染者数",idname:"kansen",infected:O.infected},null,8,["infected"])]),Object(a["h"])("div",u,[Object(a["h"])(m,{class:"box2",msg:"死者数",idname:"dead",infected:O.dead},null,8,["infected"])]),Object(a["h"])("div",o,[Object(a["h"])(m,{class:"box3",msg:"PCR検査数",idname:"pcr",infected:O.pcr},null,8,["infected"])]),Object(a["h"])("div",d,[Object(a["h"])(m,{class:"box4",msg:"退院者数",idname:"dischange",infected:O.discharge},null,8,["infected"])]),Object(a["h"])("div",h,[Object(a["h"])("div",l,[b,Object(a["h"])("input",{type:"radio",id:O.zenkokuId,name:"TAB",class:"tab-switch",checked:"checked"},null,8,["id"]),Object(a["h"])("label",{for:O.zenkokuId,class:"tab-label"},"岡山",8,["for"]),Object(a["h"])("div",f,[Object(a["g"])(Object(a["z"])(O.use)+"/"+Object(a["z"])(O.all),1),k,Object(a["h"])("p",p,Object(a["z"])(O.update),1)])])])])):(Object(a["q"])(),Object(a["d"])("div",g))])})),O=n("c287");n("be48");O["a"].render=j,O["a"].__scopeId="data-v-42cec2bf";e["default"]=O["a"]},5899:function(t,e){t.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},"58a8":function(t,e,n){var a=n("1d80"),i=n("5899"),c="["+i+"]",s=RegExp("^"+c+c+"*"),r=RegExp(c+c+"*$"),u=function(t){return function(e){var n=String(a(e));return 1&t&&(n=n.replace(s,"")),2&t&&(n=n.replace(r,"")),n}};t.exports={start:u(1),end:u(2),trim:u(3)}},7156:function(t,e,n){var a=n("861d"),i=n("d2bb");t.exports=function(t,e,n){var c,s;return i&&"function"==typeof(c=e.constructor)&&c!==n&&a(s=c.prototype)&&s!==n.prototype&&i(t,s),t}},"90d3":function(t,e,n){},a351:function(t,e,n){"use strict";var a=n("7a23"),i={class:"box27"},c={class:"box-title"},s={class:"text"},r=Object(a["h"])("br",null,null,-1),u={class:"ueo"},o={class:"text"},d=Object(a["h"])("br",null,null,-1),h={class:"ueo"},l={class:"text"},b=Object(a["h"])("br",null,null,-1),f={class:"ueo"};function k(t,e,n,k,p,g){return Object(a["q"])(),Object(a["d"])("form",null,[Object(a["h"])("div",i,[Object(a["h"])("span",c,Object(a["z"])(n.msg),1),Object(a["h"])("input",{type:"radio",id:g.zenkokuId,name:"TAB",class:"tab-switch",checked:"checked"},null,8,["id"]),Object(a["h"])("label",{for:g.zenkokuId,class:"tab-label"},"全国",8,["for"]),Object(a["h"])("div",s,[Object(a["g"])(Object(a["z"])(n.infected.zenkoku),1),r,Object(a["h"])("p",u,Object(a["z"])(n.infected.data1),1)]),Object(a["h"])("input",{type:"radio",id:g.okayamaId,name:"TAB",class:"tab-switch"},null,8,["id"]),Object(a["h"])("label",{for:g.okayamaId,class:"tab-label"},"岡山",8,["for"]),Object(a["h"])("div",o,[Object(a["g"])(Object(a["z"])(n.infected.okayama),1),d,Object(a["h"])("p",h,Object(a["z"])(n.infected.data2),1)]),"感染者数"==n.msg?(Object(a["q"])(),Object(a["d"])("input",{key:0,type:"button",class:"aiu",value:"詳細",onClick:e[1]||(e[1]=function(e){return t.$router.push("/Detailspage")})})):Object(a["e"])("",!0),Object(a["h"])("input",{type:"radio",id:g.tsuyamaId,name:"TAB",class:"tab-switch"},null,8,["id"]),Object(a["h"])("label",{for:g.tsuyamaId,class:"tab-label"},"津山",8,["for"]),Object(a["h"])("div",l,[Object(a["g"])(Object(a["z"])(n.infected.tsuyama),1),b,Object(a["h"])("p",f,Object(a["z"])(n.infected.data3),1)])])])}var p={name:"labelbox",computed:{zenkokuId:function(){return this.idname+"zenkoku"},okayamaId:function(){return this.idname+"okayama"},tsuyamaId:function(){return this.idname+"tsuyama"}},props:{msg:{type:String},idname:{type:String},infected:{type:Object}}};n("ebca");p.render=k;e["a"]=p},a9e3:function(t,e,n){"use strict";var a=n("83ab"),i=n("da84"),c=n("94ca"),s=n("6eeb"),r=n("5135"),u=n("c6b6"),o=n("7156"),d=n("c04e"),h=n("d039"),l=n("7c73"),b=n("241c").f,f=n("06cf").f,k=n("9bf2").f,p=n("58a8").trim,g="Number",j=i[g],O=j.prototype,v=u(l(O))==g,m=function(t){var e,n,a,i,c,s,r,u,o=d(t,!1);if("string"==typeof o&&o.length>2)if(o=p(o),e=o.charCodeAt(0),43===e||45===e){if(n=o.charCodeAt(2),88===n||120===n)return NaN}else if(48===e){switch(o.charCodeAt(1)){case 66:case 98:a=2,i=49;break;case 79:case 111:a=8,i=55;break;default:return+o}for(c=o.slice(2),s=c.length,r=0;r<s;r++)if(u=c.charCodeAt(r),u<48||u>i)return NaN;return parseInt(c,a)}return+o};if(c(g,!j(" 0o1")||!j("0b1")||j("+0x1"))){for(var y,I=function(t){var e=arguments.length<1?0:t,n=this;return n instanceof I&&(v?h((function(){O.valueOf.call(n)})):u(n)!=g)?o(new j(m(e)),n,I):m(e)},w=a?b(j):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),N=0;w.length>N;N++)r(j,y=w[N])&&!r(I,y)&&k(I,y,f(j,y));I.prototype=O,O.constructor=I,s(i,g,I)}},b04d:function(t,e,n){},be48:function(t,e,n){"use strict";n("90d3")},c287:function(t,e,n){"use strict";(function(t){n("4de4"),n("13d5"),n("a9e3"),n("dca8"),n("ac1f"),n("5319"),n("1276");var a=n("a351"),i=n("ad3a"),c=n("bc3a"),s=n.n(c),r=n("4bb4"),u=n("10bf"),o=n.n(u);e["a"]={name:"Mainpage",components:{labelbox:a["a"],mainmenu:i["a"]},computed:{readyToshowMainPage:function(){return this.kenDetails.length>0&&this.kenUtiwake.length>0&&this.kenPcr.length>0&&this.kenDead.length>0&&this.kenIryou.length>0&&this.Zenkoku.length>0},zenkokuId:function(){return"zenkoku"},use:function(){return Number(this.kenDead[this.kenDead.length-1]["患者_宿泊療養施設に入所中"])+Number(this.kenDead[this.kenDead.length-1]["患者_入院中_入院予定含む"])},all:function(){return Number(this.kenIryou[this.kenIryou.length-1]["確保数_病床"])+Number(this.kenIryou[this.kenIryou.length-1]["確保数_宿泊療養施設"])},update:function(){var t=this.kenDead[this.kenDead.length-1]["公表_年月日"].split("/");1==t[2].length&&(t[2]="0"+t[2]);var e="※"+t[0]+"年"+t[1]+"月"+t[2]+"日時点";return e},infected:function(){var t=this.Zenkoku.reduce((function(t,e){return t+e["npatients"]}),0),e=this.kenUtiwake[this.kenUtiwake.length-1]["公表年月日"].replace("年","/");e=e.replace("月","/"),e=e.replace("日","/"),e=e.split("/"),1==e[2].length&&(e[2]="0"+e[2]);var n="※"+e[0]+"年"+e[1]+"月"+e[2]+"日時点",a=this.last.split("-");return a="※"+a[0]+"年"+a[1]+"月"+a[2]+"日時点",{zenkoku:t+"人",okayama:this.kenUtiwake.length+"人",tsuyama:this.kenUtiwake.filter((function(t){if("津山市"==t.患者＿居住地)return!0})).length+"人",data1:a,data2:n,data3:n}},pcr:function(){var t=this.Zenkoku.reduce((function(t,e){return t+e["ninspections"]}),0),e=this.kenPcr.filter((function(t){if(""!=t.集計時点_年月日)return!0})),n=e[e.length-1].集計時点_年月日.split("/");1==n[2].length&&(n[2]="0"+n[2]);var a="※"+n[0]+"年"+n[1]+"月"+n[2]+"日時点",i=this.last.split("-");return i="※"+i[0]+"年"+i[1]+"月"+i[2]+"日時点",{zenkoku:t+"人",okayama:this.kenPcr.reduce((function(t,e){return t+Number(e["検査実施人数"])}),0)+"人",tsuyama:"No data",data1:i,data2:a,data3:""}},dead:function(){var t=this.Zenkoku.reduce((function(t,e){return t+e["ndeaths"]}),0),e=this.kenDead[this.kenDead.length-1]["公表_年月日"].split("/");1==e[2].length&&(e[2]="0"+e[2]);var n="※"+e[0]+"年"+e[1]+"月"+e[2]+"日時点",a=this.last.split("-");return a="※"+a[0]+"年"+a[1]+"月"+a[2]+"日時点",{zenkoku:t+"人",okayama:this.kenDead[this.kenDead.length-1]["患者_死亡"]+"人",tsuyama:"No data",data1:a,data2:n,data3:""}},discharge:function(){var t=this.Zenkoku.reduce((function(t,e){return t+e["nexits"]}),0),e=this.kenDead[this.kenDead.length-1]["公表_年月日"].split("/");1==e[2].length&&(e[2]="0"+e[2]);var n="※"+e[0]+"年"+e[1]+"月"+e[2]+"日時点",a=this.last.split("-");return a="※"+a[0]+"年"+a[1]+"月"+a[2]+"日時点",{zenkoku:t+"人",okayama:this.kenDead[this.kenDead.length-1]["患者_退院等"]+"人",tsuyama:"No data",data1:a,data2:n,data3:""}}},data:function(){return{kenDetails:[],kenUtiwake:[],kenPcr:[],kenDead:[],kenIryou:[],Zenkoku:[],last:[]}},mounted:function(){this.get_csv("https://taurayouhei.github.io/covid-19/data/kansenshasuu0420.csv",!0,"SJIS","UNICODE",this.setKenDetails),this.get_csv("https://taurayouhei.github.io/covid-19/data/pcr.csv",!0,"SJIS","UNICODE",this.setKenPcr),this.get_csv("https://taurayouhei.github.io/covid-19/data/kansenshashousaijouhou.csv",!0,"SJIS","UNICODE",this.setKenUchiwake),this.get_csv("https://taurayouhei.github.io/covid-19/data/kanjahasseijoukyou.csv",!0,"SJIS","UNICODE",this.setKenDead),this.get_csv("https://taurayouhei.github.io/covid-19/data/330001okayamacovid19medicalsystem.csv",!0,"SJIS","UNICODE",this.setKenIryou),this.get_csv("https://www.stopcovid19.jp/data/covid19japan.csv",!0,"UTF8","UNICODE",this.setZenkoku),this.lastupdata()},methods:{lastupdata:function(){var t=this;s.a.get("https://www.stopcovid19.jp/data/covid19japan.json").then((function(e){t.last=e.data["lastUpdate"]})).catch((function(t){return console.log(t)}))},setKenUchiwake:function(t){this.kenUtiwake=t,this.$store.commit("Enter2",this.kenUtiwake)},setKenPcr:function(t){this.kenPcr=t},setKenDead:function(t){this.kenDead=t},setKenIryou:function(t){this.kenIryou=t},setZenkoku:function(t){this.Zenkoku=t},setKenDetails:function(t){this.kenDetails=t,this.$store.commit("Enter",this.kenDetails)},get_csv:function(e,n,a,i,c){s.a.get(e,{responseType:"arraybuffer"}).then((function(e){var s=t.from(e.data),u=o.a.convert(s,{from:a,to:i,type:"string"});u=u.replace(/^\ufeff/,""),Object(r["parse"])(u,{columns:n,quote:'"',ltrim:!0,rtrim:!0,delimiter:",",cast:!0},(function(t,e){c(Object.freeze(e))}))})).catch((function(t){return console.log(t)}))}}}}).call(this,n("b639").Buffer)},d58f:function(t,e,n){var a=n("1c0b"),i=n("7b0b"),c=n("44ad"),s=n("50c4"),r=function(t){return function(e,n,r,u){a(n);var o=i(e),d=c(o),h=s(o.length),l=t?h-1:0,b=t?-1:1;if(r<2)while(1){if(l in d){u=d[l],l+=b;break}if(l+=b,t?l<0:h<=l)throw TypeError("Reduce of empty array with no initial value")}for(;t?l>=0:h>l;l+=b)l in d&&(u=n(u,d[l],l,o));return u}};t.exports={left:r(!1),right:r(!0)}},ebca:function(t,e,n){"use strict";n("b04d")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,