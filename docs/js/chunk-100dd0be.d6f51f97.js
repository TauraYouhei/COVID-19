(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-100dd0be"],{"06bd":function(t,e,a){"use strict";a("3b4a")},"13d5":function(t,e,a){"use strict";var n=a("23e7"),i=a("d58f").left,c=a("a640"),s=a("ae40"),r=c("reduce"),o=s("reduce",{1:0});n({target:"Array",proto:!0,forced:!r||!o},{reduce:function(t){return i(this,t,arguments.length,arguments.length>1?arguments[1]:void 0)}})},"3b4a":function(t,e,a){},"4edd":function(t,e,a){"use strict";a.r(e);var n=a("7a23"),i=Object(n["F"])("data-v-cc82e464");Object(n["t"])("data-v-cc82e464");var c=Object(n["h"])("h1",null,"新型コロナウイルス情報",-1),s={key:0,class:"flex"},r={class:"box"},o={class:"box"},u={class:"box"},d={class:"box"},h={class:"box"},l={class:"box27"},b=Object(n["h"])("span",{class:"box-title"},"病床使用数",-1),f={class:"text"},k=Object(n["h"])("br",null,null,-1),p={class:"ueo"},g={key:1,class:"loader"};Object(n["r"])();var j=i((function(t,e,a,i,j,v){var O=Object(n["x"])("mainmenu"),m=Object(n["x"])("labelbox");return Object(n["q"])(),Object(n["d"])("div",null,[Object(n["h"])(O,{judge:"0"}),c,v.readyToshowMainPage?(Object(n["q"])(),Object(n["d"])("div",s,[Object(n["h"])("div",r,[Object(n["h"])(m,{class:"box1",msg:"感染者数",idname:"kansen",infected:v.infected},null,8,["infected"])]),Object(n["h"])("div",o,[Object(n["h"])(m,{class:"box2",msg:"死者数",idname:"dead",infected:v.dead},null,8,["infected"])]),Object(n["h"])("div",u,[Object(n["h"])(m,{class:"box3",msg:"PCR検査数",idname:"pcr",infected:v.pcr},null,8,["infected"])]),Object(n["h"])("div",d,[Object(n["h"])(m,{class:"box4",msg:"退院者数",idname:"dischange",infected:v.discharge},null,8,["infected"])]),Object(n["h"])("div",h,[Object(n["h"])("div",l,[b,Object(n["h"])("input",{type:"radio",id:v.zenkokuId,name:"TAB",class:"tab-switch",checked:"checked"},null,8,["id"]),Object(n["h"])("label",{for:v.zenkokuId,class:"tab-label"},"岡山",8,["for"]),Object(n["h"])("div",f,[Object(n["g"])(Object(n["z"])(v.use)+"/"+Object(n["z"])(v.all),1),k,Object(n["h"])("p",p,Object(n["z"])(v.update),1)])])])])):(Object(n["q"])(),Object(n["d"])("div",g))])})),v=a("c287");a("06bd");v["a"].render=j,v["a"].__scopeId="data-v-cc82e464";e["default"]=v["a"]},5899:function(t,e){t.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},"58a8":function(t,e,a){var n=a("1d80"),i=a("5899"),c="["+i+"]",s=RegExp("^"+c+c+"*"),r=RegExp(c+c+"*$"),o=function(t){return function(e){var a=String(n(e));return 1&t&&(a=a.replace(s,"")),2&t&&(a=a.replace(r,"")),a}};t.exports={start:o(1),end:o(2),trim:o(3)}},7156:function(t,e,a){var n=a("861d"),i=a("d2bb");t.exports=function(t,e,a){var c,s;return i&&"function"==typeof(c=e.constructor)&&c!==a&&n(s=c.prototype)&&s!==a.prototype&&i(t,s),t}},a351:function(t,e,a){"use strict";var n=a("7a23"),i={class:"box27"},c={class:"box-title"},s={class:"text"},r=Object(n["h"])("br",null,null,-1),o={class:"ueo"},u={class:"text"},d=Object(n["h"])("br",null,null,-1),h={class:"ueo"},l={class:"text"},b=Object(n["h"])("br",null,null,-1),f={class:"ueo"};function k(t,e,a,k,p,g){return Object(n["q"])(),Object(n["d"])("form",null,[Object(n["h"])("div",i,[Object(n["h"])("span",c,Object(n["z"])(a.msg),1),Object(n["h"])("input",{type:"radio",id:g.zenkokuId,name:"TAB",class:"tab-switch",checked:"checked"},null,8,["id"]),Object(n["h"])("label",{for:g.zenkokuId,class:"tab-label"},"全国",8,["for"]),Object(n["h"])("div",s,[Object(n["g"])(Object(n["z"])(a.infected.zenkoku),1),r,Object(n["h"])("p",o,Object(n["z"])(a.infected.data1),1)]),Object(n["h"])("input",{type:"radio",id:g.okayamaId,name:"TAB",class:"tab-switch"},null,8,["id"]),Object(n["h"])("label",{for:g.okayamaId,class:"tab-label"},"岡山",8,["for"]),Object(n["h"])("div",u,[Object(n["g"])(Object(n["z"])(a.infected.okayama),1),d,Object(n["h"])("p",h,Object(n["z"])(a.infected.data2),1)]),"感染者数"==a.msg?(Object(n["q"])(),Object(n["d"])("input",{key:0,type:"button",class:"aiu",value:"詳細",onClick:e[1]||(e[1]=function(e){return t.$router.push("/Detailspage")})})):Object(n["e"])("",!0),Object(n["h"])("input",{type:"radio",id:g.tsuyamaId,name:"TAB",class:"tab-switch"},null,8,["id"]),Object(n["h"])("label",{for:g.tsuyamaId,class:"tab-label"},"津山",8,["for"]),Object(n["h"])("div",l,[Object(n["g"])(Object(n["z"])(a.infected.tsuyama),1),b,Object(n["h"])("p",f,Object(n["z"])(a.infected.data3),1)])])])}var p={name:"labelbox",computed:{zenkokuId:function(){return this.idname+"zenkoku"},okayamaId:function(){return this.idname+"okayama"},tsuyamaId:function(){return this.idname+"tsuyama"}},props:{msg:{type:String},idname:{type:String},infected:{type:Object}}};a("ebca");p.render=k;e["a"]=p},a9e3:function(t,e,a){"use strict";var n=a("83ab"),i=a("da84"),c=a("94ca"),s=a("6eeb"),r=a("5135"),o=a("c6b6"),u=a("7156"),d=a("c04e"),h=a("d039"),l=a("7c73"),b=a("241c").f,f=a("06cf").f,k=a("9bf2").f,p=a("58a8").trim,g="Number",j=i[g],v=j.prototype,O=o(l(v))==g,m=function(t){var e,a,n,i,c,s,r,o,u=d(t,!1);if("string"==typeof u&&u.length>2)if(u=p(u),e=u.charCodeAt(0),43===e||45===e){if(a=u.charCodeAt(2),88===a||120===a)return NaN}else if(48===e){switch(u.charCodeAt(1)){case 66:case 98:n=2,i=49;break;case 79:case 111:n=8,i=55;break;default:return+u}for(c=u.slice(2),s=c.length,r=0;r<s;r++)if(o=c.charCodeAt(r),o<48||o>i)return NaN;return parseInt(c,n)}return+u};if(c(g,!j(" 0o1")||!j("0b1")||j("+0x1"))){for(var y,I=function(t){var e=arguments.length<1?0:t,a=this;return a instanceof I&&(O?h((function(){v.valueOf.call(a)})):o(a)!=g)?u(new j(m(e)),a,I):m(e)},w=n?b(j):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),N=0;w.length>N;N++)r(j,y=w[N])&&!r(I,y)&&k(I,y,f(j,y));I.prototype=v,v.constructor=I,s(i,g,I)}},b04d:function(t,e,a){},c287:function(t,e,a){"use strict";(function(t){a("4de4"),a("13d5"),a("a9e3"),a("dca8"),a("ac1f"),a("5319"),a("1276");var n=a("a351"),i=a("ad3a"),c=a("bc3a"),s=a.n(c),r=a("4bb4"),o=a("10bf"),u=a.n(o);e["a"]={name:"Mainpage",components:{labelbox:n["a"],mainmenu:i["a"]},computed:{readyToshowMainPage:function(){return this.kenDetails.length>0&&this.kenUtiwake.length>0&&this.kenPcr.length>0&&this.kenDead.length>0&&this.kenIryou.length>0&&this.Zenkoku.length>0},zenkokuId:function(){return"zenkoku"},use:function(){return Number(this.kenDead[this.kenDead.length-1]["患者_入院中_入院予定含む"])+Number(this.kenDead[this.kenDead.length-1]["患者_宿泊療養施設に入所中"])},all:function(){return Number(this.kenIryou[this.kenIryou.length-1]["確保数_病床"])+Number(this.kenIryou[this.kenIryou.length-1]["確保数_宿泊療養施設"])},update:function(){for(var t=this.kenDead[this.kenDead.length-1]["公表_年月日"].split("/"),e=1;e<3;e++)1==t[e].length&&(t[e]="0"+t[e]);var a="※"+t[0]+"年"+t[1]+"月"+t[2]+"日時点";return a},infected:function(){var t=this.Zenkoku.reduce((function(t,e){return t+e["npatients"]}),0),e=this.kenUtiwake[this.kenUtiwake.length-1]["公表年月日"].replace("年","/");e=e.replace("月","/"),e=e.replace("日","/"),e=e.split("/");for(var a=1;a<3;a++)1==e[a].length&&(e[a]="0"+e[a]);var n="※"+e[0]+"年"+e[1]+"月"+e[2]+"日時点",i=this.last.split("-");return i="※"+i[0]+"年"+i[1]+"月"+i[2]+"日時点",{zenkoku:t+"人",okayama:this.kenUtiwake.length+"人",tsuyama:this.kenUtiwake.filter((function(t){if("津山市"==t.患者＿居住地)return!0})).length+"人",data1:i,data2:n,data3:n}},pcr:function(){var t=this.Zenkoku.reduce((function(t,e){return t+e["ninspections"]}),0),e=this.kenPcr.filter((function(t){if(""!=t.集計時点_年月日)return!0})),a=e[e.length-1].集計時点_年月日.split("/");1==a[2].length&&(a[2]="0"+a[2]);var n="※"+a[0]+"年"+a[1]+"月"+a[2]+"日時点",i=this.last.split("-");return i="※"+i[0]+"年"+i[1]+"月"+i[2]+"日時点",{zenkoku:t+"人",okayama:this.kenPcr.reduce((function(t,e){return t+Number(e["検査実施人数"])}),0)+"人",tsuyama:"No data",data1:i,data2:n,data3:""}},dead:function(){for(var t=this.Zenkoku.reduce((function(t,e){return t+e["ndeaths"]}),0),e=this.kenDead[this.kenDead.length-1]["公表_年月日"].split("/"),a=1;a<3;a++)1==e[a].length&&(e[a]="0"+e[a]);var n="※"+e[0]+"年"+e[1]+"月"+e[2]+"日時点",i=this.last.split("-");return i="※"+i[0]+"年"+i[1]+"月"+i[2]+"日時点",{zenkoku:t+"人",okayama:this.kenDead[this.kenDead.length-1]["患者_死亡"]+"人",tsuyama:"No data",data1:i,data2:n,data3:""}},discharge:function(){for(var t=this.Zenkoku.reduce((function(t,e){return t+e["nexits"]}),0),e=this.kenDead[this.kenDead.length-1]["公表_年月日"].split("/"),a=1;a<3;a++)1==e[a].length&&(e[a]="0"+e[a]);var n="※"+e[0]+"年"+e[1]+"月"+e[2]+"日時点",i=this.last.split("-");return i="※"+i[0]+"年"+i[1]+"月"+i[2]+"日時点",{zenkoku:t+"人",okayama:this.kenDead[this.kenDead.length-1]["患者_退院等"]+"人",tsuyama:"No data",data1:i,data2:n,data3:""}}},data:function(){return{kenDetails:[],kenUtiwake:[],kenPcr:[],kenDead:[],kenIryou:[],Zenkoku:[],last:[]}},mounted:function(){this.cash(),1==this.cash()&&(this.get_csv("https://taurayouhei.github.io/covid-19/data/kansenshasuu0420.csv",!0,"SJIS","UNICODE",this.setKenDetails),this.get_csv("https://taurayouhei.github.io/covid-19/data/pcr.csv",!0,"SJIS","UNICODE",this.setKenPcr),this.get_csv("https://taurayouhei.github.io/covid-19/data/kansenshashousaijouhou.csv",!0,"SJIS","UNICODE",this.setKenUchiwake),this.get_csv("https://taurayouhei.github.io/covid-19/data/kanjahasseijoukyou.csv",!0,"SJIS","UNICODE",this.setKenDead),this.get_csv("https://taurayouhei.github.io/covid-19/data/330001okayamacovid19medicalsystem.csv",!0,"SJIS","UNICODE",this.setKenIryou),this.get_csv("https://www.stopcovid19.jp/data/covid19japan.csv",!0,"UTF8","UNICODE",this.setZenkoku),this.lastupdata())},methods:{cash:function(){return location.reload(!0),!0},lastupdata:function(){var t=this;s.a.get("https://www.stopcovid19.jp/data/covid19japan.json").then((function(e){t.last=e.data["lastUpdate"]})).catch((function(t){return console.log(t)}))},setKenUchiwake:function(t){this.kenUtiwake=t,console.log(this.kenUtiwake),this.$store.commit("Enter2",this.kenUtiwake)},setKenPcr:function(t){this.kenPcr=t},setKenDead:function(t){this.kenDead=t},setKenIryou:function(t){this.kenIryou=t},setZenkoku:function(t){this.Zenkoku=t},setKenDetails:function(t){this.kenDetails=t,this.$store.commit("Enter",this.kenDetails)},get_csv:function(e,a,n,i,c){s.a.get(e,{responseType:"arraybuffer"}).then((function(e){var s=t.from(e.data),o=u.a.convert(s,{from:n,to:i,type:"string"});o=o.replace(/^\ufeff/,""),Object(r["parse"])(o,{columns:a,quote:'"',ltrim:!0,rtrim:!0,delimiter:",",cast:!0},(function(t,e){c(Object.freeze(e))}))})).catch((function(t){return console.log(t)}))}}}}).call(this,a("b639").Buffer)},d58f:function(t,e,a){var n=a("1c0b"),i=a("7b0b"),c=a("44ad"),s=a("50c4"),r=function(t){return function(e,a,r,o){n(a);var u=i(e),d=c(u),h=s(u.length),l=t?h-1:0,b=t?-1:1;if(r<2)while(1){if(l in d){o=d[l],l+=b;break}if(l+=b,t?l<0:h<=l)throw TypeError("Reduce of empty array with no initial value")}for(;t?l>=0:h>l;l+=b)l in d&&(o=a(o,d[l],l,u));return o}};t.exports={left:r(!1),right:r(!0)}},ebca:function(t,e,a){"use strict";a("b04d")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,